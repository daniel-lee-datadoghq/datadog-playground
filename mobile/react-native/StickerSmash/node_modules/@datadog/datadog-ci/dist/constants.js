"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FLARE_PROJECT_FILES = exports.FLARE_ENDPOINT_PATH = exports.INSIGHTS_FILE_NAME = exports.ADDITIONAL_FILES_DIRECTORY = exports.PROJECT_FILES_DIRECTORY = exports.LOGS_DIRECTORY = exports.FLARE_OUTPUT_DIRECTORY = exports.EXTRA_TAGS_REG_EXP = exports.DD_TAGS_ENV_VAR = exports.DD_LLMOBS_AGENTLESS_ENABLED_ENV_VAR = exports.DD_LLMOBS_ML_APP_ENV_VAR = exports.DD_LLMOBS_ENABLED_ENV_VAR = exports.DD_TRACE_ENABLED_ENV_VAR = exports.DD_LOG_LEVEL_ENV_VAR = exports.HEALTH_PORT_ENV_VAR = exports.LOGS_PATH_ENV_VAR = exports.LOGS_INJECTION_ENV_VAR = exports.SITE_ENV_VAR = exports.CI_SITE_ENV_VAR = exports.CI_API_KEY_ENV_VAR = exports.API_KEY_ENV_VAR = exports.VERSION_ENV_VAR = exports.ENVIRONMENT_ENV_VAR = exports.SERVICE_ENV_VAR = exports.METHOD_POST = exports.CONTENT_TYPE_VALUE_JSON = exports.CONTENT_TYPE_VALUE_PROTOBUF = exports.CONTENT_TYPE_HEADER = exports.FIPS_IGNORE_ERROR_ENV_VAR = exports.FIPS_ENV_VAR = exports.DATADOG_SITES = exports.DATADOG_SITE_GOV = exports.DATADOG_SITE_AP2 = exports.DATADOG_SITE_AP1 = exports.DATADOG_SITE_US5 = exports.DATADOG_SITE_US3 = exports.DATADOG_SITE_EU1 = exports.DATADOG_SITE_US1 = void 0;
exports.DATADOG_SITE_US1 = 'datadoghq.com';
exports.DATADOG_SITE_EU1 = 'datadoghq.eu';
exports.DATADOG_SITE_US3 = 'us3.datadoghq.com';
exports.DATADOG_SITE_US5 = 'us5.datadoghq.com';
exports.DATADOG_SITE_AP1 = 'ap1.datadoghq.com';
exports.DATADOG_SITE_AP2 = 'ap2.datadoghq.com';
exports.DATADOG_SITE_GOV = 'ddog-gov.com';
exports.DATADOG_SITES = [
    exports.DATADOG_SITE_US1,
    exports.DATADOG_SITE_EU1,
    exports.DATADOG_SITE_US3,
    exports.DATADOG_SITE_US5,
    exports.DATADOG_SITE_AP1,
    exports.DATADOG_SITE_AP2,
    exports.DATADOG_SITE_GOV,
];
// Common env vars
exports.FIPS_ENV_VAR = 'DATADOG_FIPS';
exports.FIPS_IGNORE_ERROR_ENV_VAR = 'DATADOG_FIPS_IGNORE_ERROR';
exports.CONTENT_TYPE_HEADER = 'Content-Type';
exports.CONTENT_TYPE_VALUE_PROTOBUF = 'application/x-protobuf';
exports.CONTENT_TYPE_VALUE_JSON = 'application/json';
exports.METHOD_POST = 'post';
// Tagging env vars
exports.SERVICE_ENV_VAR = 'DD_SERVICE';
exports.ENVIRONMENT_ENV_VAR = 'DD_ENV';
exports.VERSION_ENV_VAR = 'DD_VERSION';
// Environment variables for Lambda and Cloud Run
exports.API_KEY_ENV_VAR = 'DD_API_KEY';
exports.CI_API_KEY_ENV_VAR = 'DATADOG_API_KEY';
exports.CI_SITE_ENV_VAR = 'DATADOG_SITE';
exports.SITE_ENV_VAR = 'DD_SITE';
exports.LOGS_INJECTION_ENV_VAR = 'DD_LOGS_INJECTION';
exports.LOGS_PATH_ENV_VAR = 'DD_SERVERLESS_LOG_PATH';
exports.HEALTH_PORT_ENV_VAR = 'DD_HEALTH_PORT';
exports.DD_LOG_LEVEL_ENV_VAR = 'DD_LOG_LEVEL';
exports.DD_TRACE_ENABLED_ENV_VAR = 'DD_TRACE_ENABLED';
exports.DD_LLMOBS_ENABLED_ENV_VAR = 'DD_LLMOBS_ENABLED';
exports.DD_LLMOBS_ML_APP_ENV_VAR = 'DD_LLMOBS_ML_APP';
exports.DD_LLMOBS_AGENTLESS_ENABLED_ENV_VAR = 'DD_LLMOBS_AGENTLESS_ENABLED';
exports.DD_TAGS_ENV_VAR = 'DD_TAGS';
/*
 * DD_TAGS Regular Expression
 * This RegExp ensures that the --extra-tags string
 * matches a list of <key>:<value> separated by commas
 * such as layer:api,team:intake
 */
exports.EXTRA_TAGS_REG_EXP = /^(([a-zA-Z]+)[\w\-/\.]*:[^,]+)+((\,)([a-zA-Z]+)[\w\-/\.]*:[^,]+)*$/g;
// Flare constants
exports.FLARE_OUTPUT_DIRECTORY = '.datadog-ci';
exports.LOGS_DIRECTORY = 'logs';
exports.PROJECT_FILES_DIRECTORY = 'project_files';
exports.ADDITIONAL_FILES_DIRECTORY = 'additional_files';
exports.INSIGHTS_FILE_NAME = 'INSIGHTS.md';
exports.FLARE_ENDPOINT_PATH = '/api/ui/support/serverless/flare';
// Project files to search for in Flare
exports.FLARE_PROJECT_FILES = [
    // Datadog CloudFormation Template
    'datadog-cloudfomation-macro.yaml',
    'datadog-cloudfomation-macro.yml',
    'datadog-cloudformation-macro.json',
    // Node.js
    'package.json',
    'package-lock.json',
    'yarn.lock',
    '.nvmrc',
    // Python
    'requirements.txt',
    'Pipfile',
    'Pipfile.lock',
    'pyproject.toml',
    // Java
    'pom.xml',
    'build.gradle',
    'gradlew',
    'gradlew.bat',
    // Go
    'Makefile',
    'go.mod',
    'go.sum',
    'Gopkg.toml',
    'gomod.sh',
    // Ruby
    'Gemfile',
    'Gemfile.lock',
    // .NET
    'project.json',
    'packages.config',
    'PackageReference',
    'global.json',
    // Docker
    'Dockerfile',
    'docker-compose.yaml',
    'docker-compose.yml',
    // Webpack, bundlers
    'webpack.config.js',
    '.babelrc',
    'tsconfig.json',
    'esbuild.config.js',
];
//# sourceMappingURL=constants.js.map