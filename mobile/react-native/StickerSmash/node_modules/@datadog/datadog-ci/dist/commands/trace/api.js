"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.apiConstructor = exports.reportCustomSpan = void 0;
const utils_1 = require("../../helpers/utils");
// Dependency follows-redirects sets a default maxBodyLength of 10 MB https://github.com/follow-redirects/follow-redirects/blob/b774a77e582b97174813b3eaeb86931becba69db/index.js#L391
// We don't want any hard limit enforced by the CLI, the backend will enforce a max size by returning 413 errors.
const maxBodyLength = Infinity;
const reportCustomSpan = (request) => (customSpan) => __awaiter(void 0, void 0, void 0, function* () {
    return request({
        data: {
            data: {
                type: 'ci_app_custom_span',
                attributes: customSpan,
            },
        },
        maxBodyLength,
        method: 'POST',
        url: '/api/intake/ci/custom_spans',
    });
});
exports.reportCustomSpan = reportCustomSpan;
const apiConstructor = (baseUrl, apiKey) => {
    const requestIntake = (0, utils_1.getRequestBuilder)({ baseUrl, apiKey });
    return {
        reportCustomSpan: (0, exports.reportCustomSpan)(requestIntake),
    };
};
exports.apiConstructor = apiConstructor;
//# sourceMappingURL=api.js.map