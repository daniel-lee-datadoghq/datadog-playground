import { CloudWatchLogsClient, CreateLogGroupCommandOutput, DeleteSubscriptionFilterCommandOutput, DescribeSubscriptionFiltersCommandOutput, PutSubscriptionFilterCommandOutput } from '@aws-sdk/client-cloudwatch-logs';
import { AttachRolePolicyCommandOutput, CreatePolicyCommandOutput, IAMClient } from '@aws-sdk/client-iam';
import { DescribeStateMachineCommandOutput, ListTagsForResourceCommandOutput, Tag, TagResourceCommandOutput, UntagResourceCommandOutput, UpdateStateMachineCommandOutput } from '@aws-sdk/client-sfn';
import { SFNClient } from '@aws-sdk/client-sfn/dist-types/SFNClient';
import { BaseContext } from 'clipanion';
import { StateMachineDefinitionType } from './helpers';
export declare const describeStateMachine: (stepFunctionsClient: SFNClient, stepFunctionArn: string) => Promise<DescribeStateMachineCommandOutput>;
export declare const listTagsForResource: (stepFunctionsClient: SFNClient, stepFunctionArn: string) => Promise<ListTagsForResourceCommandOutput>;
export declare const putSubscriptionFilter: (cloudWatchLogsClient: CloudWatchLogsClient, forwarderArn: string, filterName: string, logGroupName: string, stepFunctionArn: string, context: BaseContext, dryRun: boolean) => Promise<PutSubscriptionFilterCommandOutput | undefined>;
export declare const tagResource: (stepFunctionsClient: SFNClient, stepFunctionArn: string, tags: Tag[], context: BaseContext, dryRun: boolean) => Promise<TagResourceCommandOutput | undefined>;
export declare const createLogGroup: (cloudWatchLogsClient: CloudWatchLogsClient, logGroupName: string, stepFunctionArn: string, context: BaseContext, dryRun: boolean) => Promise<CreateLogGroupCommandOutput | undefined>;
export declare const createLogsAccessPolicy: (iamClient: IAMClient, describeStateMachineCommandOutput: DescribeStateMachineCommandOutput, stepFunctionArn: string, context: BaseContext, dryRun: boolean) => Promise<CreatePolicyCommandOutput | undefined>;
export declare const attachPolicyToStateMachineIamRole: (iamClient: IAMClient, describeStateMachineCommandOutput: DescribeStateMachineCommandOutput, accountId: string, stepFunctionArn: string, context: BaseContext, dryRun: boolean) => Promise<AttachRolePolicyCommandOutput | undefined>;
export declare const enableStepFunctionLogs: (stepFunctionsClient: SFNClient, stepFunction: DescribeStateMachineCommandOutput, logGroupArn: string, stepFunctionArn: string, context: BaseContext, dryRun: boolean) => Promise<UpdateStateMachineCommandOutput | undefined>;
export declare const updateStateMachineDefinition: (stepFunctionsClient: SFNClient, stepFunction: DescribeStateMachineCommandOutput, definitionObj: StateMachineDefinitionType, context: BaseContext, dryRun: boolean) => Promise<UpdateStateMachineCommandOutput | undefined>;
export declare const deleteSubscriptionFilter: (cloudWatchLogsClient: CloudWatchLogsClient, filterName: string, logGroupName: string, stepFunctionArn: string, context: BaseContext, dryRun: boolean) => Promise<DeleteSubscriptionFilterCommandOutput | undefined>;
export declare const describeSubscriptionFilters: (cloudWatchLogsClient: CloudWatchLogsClient, logGroupName: string) => Promise<DescribeSubscriptionFiltersCommandOutput>;
export declare const untagResource: (stepFunctionsClient: SFNClient, tagKeys: string[], stepFunctionArn: string, context: BaseContext, dryRun: boolean) => Promise<UntagResourceCommandOutput | undefined>;
