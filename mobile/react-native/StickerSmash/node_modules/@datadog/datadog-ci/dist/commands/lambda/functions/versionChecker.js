"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isTracerCompatibleWithExtension = exports.isExtensionCompatibleWithUniversalInstrumentation = void 0;
const constants_1 = require("../constants");
const UNIVERSAL_INSTRUMENTATION_JAVA_EXTENSION_VERSION = 24;
const UNIVERSAL_INSTRUMENTATION_JAVA_TRACER_VERSION = 5;
const UNIVERSAL_INSTRUMENTATION_DOTNET_EXTENSION_VERSION = 24;
const UNIVERSAL_INSTRUMENTATION_DOTNET_TRACER_VERSION = 4;
const isExtensionCompatibleWithUniversalInstrumentation = (runtimeType, extensionVersion) => {
    if (extensionVersion === undefined) {
        return false;
    }
    switch (runtimeType) {
        case constants_1.RuntimeType.JAVA:
            return extensionVersion >= UNIVERSAL_INSTRUMENTATION_JAVA_EXTENSION_VERSION;
        case constants_1.RuntimeType.DOTNET:
            return extensionVersion >= UNIVERSAL_INSTRUMENTATION_DOTNET_EXTENSION_VERSION;
        default:
            return true;
    }
};
exports.isExtensionCompatibleWithUniversalInstrumentation = isExtensionCompatibleWithUniversalInstrumentation;
const isTracerCompatibleWithExtension = (runtimeType, traceVersion) => {
    // More complex compatbility rules can be configured for each extension version if necessary
    if (traceVersion === undefined) {
        return true;
    }
    switch (runtimeType) {
        case constants_1.RuntimeType.JAVA:
            return traceVersion >= UNIVERSAL_INSTRUMENTATION_JAVA_TRACER_VERSION;
        case constants_1.RuntimeType.DOTNET:
            return traceVersion >= UNIVERSAL_INSTRUMENTATION_DOTNET_TRACER_VERSION;
        default:
            return true;
    }
};
exports.isTracerCompatibleWithExtension = isTracerCompatibleWithExtension;
//# sourceMappingURL=versionChecker.js.map