declare const nonCriticalErrorCodes: readonly ["NO_TESTS_TO_RUN", "MISSING_TESTS", "UNAUTHORIZED_TESTS"];
export type NonCriticalCiErrorCode = typeof nonCriticalErrorCodes[number];
declare const criticalErrorCodes: readonly ["AUTHORIZATION_ERROR", "INVALID_CONFIG", "MISSING_API_KEY", "MISSING_APP_KEY", "POLL_RESULTS_FAILED", "BATCH_TIMEOUT_RUNAWAY", "TOO_MANY_TESTS_TO_TRIGGER", "TRIGGER_TESTS_FAILED", "TUNNEL_START_FAILED", "TUNNEL_NOT_SUPPORTED", "UNAVAILABLE_TEST_CONFIG", "UNAVAILABLE_TUNNEL_CONFIG", "UPLOAD_MOBILE_APPLICATION_TESTS_FAILED", "MISSING_MOBILE_APPLICATION_PATH", "MISSING_MOBILE_APPLICATION_ID", "MISSING_MOBILE_VERSION_NAME", "INVALID_MOBILE_APP", "INVALID_MOBILE_APP_UPLOAD_PARAMETERS", "MOBILE_APP_UPLOAD_TIMEOUT", "UNKNOWN_MOBILE_APP_UPLOAD_FAILURE", "LTD_MULTILOCATORS_UPDATE_FAILED"];
export type CriticalCiErrorCode = typeof criticalErrorCodes[number];
export type CiErrorCode = NonCriticalCiErrorCode | CriticalCiErrorCode;
export declare class CiError extends Error {
    code: CiErrorCode;
    constructor(code: CiErrorCode, message?: string);
    toJson(): {
        code: CiErrorCode;
        message: string;
    };
}
export declare class CriticalError extends CiError {
    code: CriticalCiErrorCode;
    constructor(code: CriticalCiErrorCode, message?: string);
}
export declare class BatchTimeoutRunawayError extends CriticalError {
    constructor();
}
export {};
