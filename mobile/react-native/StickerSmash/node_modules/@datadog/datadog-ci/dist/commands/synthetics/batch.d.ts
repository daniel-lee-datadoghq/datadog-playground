import { Metadata } from '../../helpers/interfaces';
import { APIHelper } from './api';
import { Batch, MainReporter, Result, ResultDisplayInfo, ResultInBatch, Test, TestPayload, TriggerInfo } from './interfaces';
import { Tunnel } from './tunnel';
export declare const DEFAULT_BATCH_TIMEOUT: number;
export declare const runTests: (api: APIHelper, testsToTrigger: TestPayload[], reporter: MainReporter, metadata?: Metadata, failOnMissingTests?: boolean, selectiveRerun?: boolean, batchTimeout?: number) => Promise<TriggerInfo>;
export declare const waitForResults: (api: APIHelper, trigger: TriggerInfo, tests: Test[], options: ResultDisplayInfo['options'], reporter: MainReporter, tunnel?: Tunnel) => Promise<Result[]>;
export declare const getResultsToReport: (shouldContinuePolling: boolean, batch: Batch, newlyReceivedResults: ResultInBatch[], emittedResultIds: Set<string>, oldIncompleteResultIds: Set<string>, incompleteResultIds: Set<string>, reporter: MainReporter) => ResultInBatch[];
export declare const reportReceivedResults: (batch: Batch, emittedResultIds: Set<string>, reporter: MainReporter) => ResultInBatch[];
