import { UploadStatus } from '../../helpers/upload';
import { RNSourcemap } from './interfaces';
export declare const renderGitWarning: (errorMessage: string) => string;
export declare const renderGitDataNotAttachedWarning: (sourcemap: string, errorMessage: string) => string;
export declare const renderSourcesNotFoundWarning: (sourcemap: string) => string;
export declare const renderConfigurationError: (error: Error) => string;
export declare const renderFailedUpload: (sourcemap: RNSourcemap, errorMessage: string) => string;
export declare const renderRetriedUpload: (payload: RNSourcemap, errorMessage: string, attempt: number) => string;
export declare const renderRemoveSourcesContentWarning: () => string;
export declare const renderFailedSourcesContentRemovalError: (payload: RNSourcemap, errorMessage: string) => string;
/**
 * As of now, this command takes an array of one signe UploadStatus element since we only support upload
 * of a single sourcemap.
 * We considered it was preferable to leave it this way so it's ready for multiple sourcemaps uploads,
 * rather than investing into adapting it for this purpose.
 * This comment should be removed once the multiple file upload is available.
 */
export declare const renderSuccessfulCommand: (statuses: UploadStatus[], duration: number, dryRun: boolean) => string;
export declare const renderCommandInfo: (bundlePath: string | undefined, sourcemapPath: string, platform: string, releaseVersion: string, service: string, poolLimit: number, dryRun: boolean, projectPath: string, buildVersion: string, bundleName: string) => string;
export declare const renderUpload: (sourcemap: RNSourcemap) => string;
