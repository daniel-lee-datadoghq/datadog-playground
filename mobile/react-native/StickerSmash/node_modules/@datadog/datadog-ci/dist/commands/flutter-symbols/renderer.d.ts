import { UploadStatus } from '../../helpers/upload';
export interface UploadInfo {
    fileType: string;
    location: string;
    platform: string;
}
export declare const renderCommandInfo: (dryRun: boolean, version: string, service: string, flavor: string, uploadInfo: UploadInfo[]) => string;
export declare const renderCommandSummary: (statuses: UploadStatus[], duration: number, dryRun: boolean) => string;
export declare const renderGitWarning: (errorMessage: string) => string;
export declare const renderArgumentMissingError: (argumentName: string) => string;
export declare const renderMinifiedPathPrefixRequired: () => string;
export declare const renderMissingPubspecError: (pubspecLocation: string) => string;
export declare const renderInvalidPubspecError: (pubspecLocation: string) => string;
export declare const renderPubspecMissingVersionError: (pubspecLocation: string) => string;
export declare const renderVersionNotSemver: (pubspecLocation: string, versionNumber: string | undefined) => string;
export declare const renderVersionBuildNumberWarning: (pubspecLocation: string) => string;
export declare const renderMissingDartSymbolsDir: (symbolsDirectory: string) => string;
export declare const renderInvalidSymbolsDir: (symbolsDirectory: string) => string;
export declare const renderMissingAndroidMappingFile: (mappingLocation: string) => string;
export declare const renderGeneralizedError: (error: any) => string;
export declare const renderFailedUpload: (filePath: string, errorMessage: string) => string;
export declare const renderRetriedUpload: (filePath: string, errorMessage: string, attempt: number) => string;
export declare const renderUpload: (type: string, filePath: string) => string;
