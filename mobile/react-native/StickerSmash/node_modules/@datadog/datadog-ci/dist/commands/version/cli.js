"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const clipanion_1 = require("clipanion");
const version_1 = require("../../helpers/version");
class VersionCommand extends clipanion_1.Command {
    execute() {
        return __awaiter(this, void 0, void 0, function* () {
            this.context.stdout.write(`v${version_1.version}\n`);
            return 0;
        });
    }
}
VersionCommand.paths = [['version']];
VersionCommand.usage = clipanion_1.Command.Usage({
    // This description is longer than usual because this is valuable information, and it's unlikely
    // that the user is going to run `datadog-ci version --help`. This description will show in `datadog-ci --help` instead.
    description: 'Get the current version of datadog-ci. This command outputs a prefixed version, e.g. `v1.0.0`. If you want the raw version, use `datadog-ci --version`.',
});
module.exports = [VersionCommand];
//# sourceMappingURL=cli.js.map