"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validatePayload = exports.InvalidPayload = void 0;
const validation_1 = require("../../helpers/validation");
class InvalidPayload extends Error {
    constructor(reason, message) {
        super(message);
        this.reason = reason;
    }
}
exports.InvalidPayload = InvalidPayload;
const validatePayload = (sourcemap) => {
    // Check existence of sourcemap file
    const sourcemapCheck = (0, validation_1.checkFile)(sourcemap.sourcemapPath);
    if (!sourcemapCheck.exists) {
        // This case should not happen as all collected sourcemaps should point to correct files
        throw new InvalidPayload('missing_sourcemap', `Skipping missing sourcemap (${sourcemap.sourcemapPath})`);
    }
    if (sourcemapCheck.empty) {
        throw new InvalidPayload('empty_sourcemap', `Skipping empty sourcemap (${sourcemap.sourcemapPath})`);
    }
};
exports.validatePayload = validatePayload;
//# sourceMappingURL=validation.js.map