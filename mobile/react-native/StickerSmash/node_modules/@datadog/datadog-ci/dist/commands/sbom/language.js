"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLanguageFromComponent = void 0;
const types_1 = require("./types");
// Attempt to find the language from a SBOM component. For now, we get the source either from
// the bom-ref or the purl property of the SBOM.
const getLanguageFromComponent = (component) => {
    const componentName = component['name'];
    let purlDisplay = 'N/A';
    if (component['bom-ref']) {
        if (component['purl']) {
            purlDisplay = component['purl'];
        }
        if (component['bom-ref'].includes('pkg:npm') || component['purl'].includes('pkg:npm')) {
            return types_1.DependencyLanguage.NPM;
        }
        if (component['purl'].includes('pkg:composer')) {
            return types_1.DependencyLanguage.PHP;
        }
        if (component['purl'].includes('pkg:cargo')) {
            return types_1.DependencyLanguage.RUST;
        }
        if (component['purl'].includes('pkg:gem')) {
            return types_1.DependencyLanguage.RUBY;
        }
        if (component['purl'].includes('pkg:maven')) {
            return types_1.DependencyLanguage.JVM;
        }
        if (component['purl'].includes('pkg:golang')) {
            return types_1.DependencyLanguage.GO;
        }
        if (component['purl'].includes('pkg:pypi')) {
            return types_1.DependencyLanguage.PYTHON;
        }
        if (component['purl'].includes('pkg:nuget')) {
            return types_1.DependencyLanguage.DOTNET;
        }
        if (component['purl'].includes('pkg:conan')) {
            return types_1.DependencyLanguage.C_CPP;
        }
    }
    console.debug(`language not detected for ${componentName} with due to purl (${purlDisplay})`);
    return undefined;
};
exports.getLanguageFromComponent = getLanguageFromComponent;
//# sourceMappingURL=language.js.map