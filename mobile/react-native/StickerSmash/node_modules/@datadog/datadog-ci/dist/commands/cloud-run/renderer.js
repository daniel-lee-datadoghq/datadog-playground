"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.withSpinner = exports.dryRunPrefix = exports.renderAuthenticationInstructions = void 0;
const chalk_1 = __importDefault(require("chalk"));
const ora_1 = __importDefault(require("ora"));
const helpersRenderer = __importStar(require("../../helpers/renderer"));
const renderer_1 = require("../../helpers/renderer");
const AUTHENTICATION_INSTRUCTIONS = [
    '\n' + helpersRenderer.renderError('Unable to authenticate with GCP.'),
    'To authenticate with GCP, please follow these steps:',
    "1. If you haven't already, install the Google Cloud SDK: https://cloud.google.com/sdk/docs/install",
    '2. Run "gcloud auth application-default login" and follow the prompts in your browser to log in.',
    '3. After logging in, run the `datadog-ci cloud-run flare` command again.\n',
];
/**
 * @returns instructions on how to authenticate with GCP.
 */
const renderAuthenticationInstructions = () => {
    return AUTHENTICATION_INSTRUCTIONS.join('\n');
};
exports.renderAuthenticationInstructions = renderAuthenticationInstructions;
const dryRunPrefix = (isDryRun) => (isDryRun ? `${renderer_1.dryRunTag} ` : '');
exports.dryRunPrefix = dryRunPrefix;
/**
 * Executes an async operation with a spinner
 * @param text - The text to display while spinning
 * @param operation - The async operation to execute
 * @param successText - Success message
 * @returns Promise that resolves with the operation result
 */
const withSpinner = (text, operation, successText) => __awaiter(void 0, void 0, void 0, function* () {
    const spinner = (0, ora_1.default)({
        color: 'magenta',
        discardStdin: false,
        text,
    });
    spinner.start();
    try {
        const result = yield operation();
        spinner.succeed(chalk_1.default.green(`${successText}`));
        return result;
    }
    catch (error) {
        // Drop any ... from end of text
        const failText = text.replace(/\.\.\.$/, '');
        spinner.fail(chalk_1.default.red(`${failText}`));
        throw error;
    }
});
exports.withSpinner = withSpinner;
//# sourceMappingURL=renderer.js.map