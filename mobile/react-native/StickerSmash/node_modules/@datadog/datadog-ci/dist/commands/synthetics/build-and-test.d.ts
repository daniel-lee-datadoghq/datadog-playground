/// <reference types="node" />
import http from 'http';
import { MainReporter } from './interfaces';
interface ReportedBuild {
    outputDirectory: string;
    publicPath: string;
}
export declare const UnconfiguredBuildPluginError: Error;
export declare const MalformedBuildError: Error;
declare const routeVerbs: readonly ["get", "post", "put", "patch", "delete"];
type RouteVerb = typeof routeVerbs[number];
export type Routes = Record<string, {
    [key in RouteVerb]?: (req: http.IncomingMessage, res: http.ServerResponse) => Promise<void>;
}>;
export type RequestHandlerOptions = {
    builds: ReportedBuild[];
    root?: string;
    routes?: Routes;
};
export declare const buildAssets: (buildCommand: string, reporter: MainReporter) => Promise<{
    builds: ReportedBuild[];
    devServerUrl: string;
    stop: () => Promise<void>;
}>;
export {};
