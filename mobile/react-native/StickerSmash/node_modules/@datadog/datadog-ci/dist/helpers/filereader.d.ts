/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
import fs from 'fs';
export interface Reader {
    read(length: number, position?: number): Promise<Buffer>;
    close(): Promise<void>;
}
export declare class FileReader implements Reader {
    private fd;
    private buffer?;
    constructor(fd: fs.promises.FileHandle);
    read(length: number, position?: number): Promise<Buffer>;
    close(): Promise<void>;
}
export declare const createReaderFromFile: (filename: string) => Promise<FileReader>;
export declare const createReadFunctions: (buffer: Buffer, littleEndian: boolean, is32bit: boolean) => {
    readUInt16: () => number;
    readUInt32: () => number;
    readBigUInt32Or64: () => bigint;
};
