"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getUserCISpanTags = exports.getUserGitSpanTags = void 0;
const tags_1 = require("./tags");
const utils_1 = require("./utils");
const getUserGitSpanTags = () => {
    const { DD_GIT_REPOSITORY_URL, DD_GIT_COMMIT_SHA, DD_GIT_BRANCH, DD_GIT_TAG, DD_GIT_COMMIT_MESSAGE, DD_GIT_COMMIT_AUTHOR_NAME, DD_GIT_COMMIT_AUTHOR_EMAIL, DD_GIT_COMMIT_AUTHOR_DATE, DD_GIT_COMMIT_COMMITTER_NAME, DD_GIT_COMMIT_COMMITTER_EMAIL, DD_GIT_COMMIT_COMMITTER_DATE, DD_GIT_PULL_REQUEST_BASE_BRANCH, DD_GIT_PULL_REQUEST_BASE_BRANCH_SHA, DD_GIT_COMMIT_HEAD_SHA, DD_PR_NUMBER, } = process.env;
    let branch = (0, utils_1.normalizeRef)(DD_GIT_BRANCH);
    let tag = (0, utils_1.normalizeRef)(DD_GIT_TAG);
    if ((DD_GIT_BRANCH === null || DD_GIT_BRANCH === void 0 ? void 0 : DD_GIT_BRANCH.includes('origin/tags')) || (DD_GIT_BRANCH === null || DD_GIT_BRANCH === void 0 ? void 0 : DD_GIT_BRANCH.includes('refs/heads/tags'))) {
        branch = undefined;
        tag = (0, utils_1.normalizeRef)(DD_GIT_BRANCH);
    }
    return (0, utils_1.removeEmptyValues)({
        [tags_1.GIT_REPOSITORY_URL]: (0, utils_1.filterSensitiveInfoFromRepository)(DD_GIT_REPOSITORY_URL),
        [tags_1.GIT_BRANCH]: branch,
        [tags_1.GIT_SHA]: DD_GIT_COMMIT_SHA,
        [tags_1.GIT_TAG]: tag,
        [tags_1.GIT_COMMIT_MESSAGE]: DD_GIT_COMMIT_MESSAGE,
        [tags_1.GIT_COMMIT_COMMITTER_DATE]: DD_GIT_COMMIT_COMMITTER_DATE,
        [tags_1.GIT_COMMIT_COMMITTER_EMAIL]: DD_GIT_COMMIT_COMMITTER_EMAIL,
        [tags_1.GIT_COMMIT_COMMITTER_NAME]: DD_GIT_COMMIT_COMMITTER_NAME,
        [tags_1.GIT_COMMIT_AUTHOR_DATE]: DD_GIT_COMMIT_AUTHOR_DATE,
        [tags_1.GIT_COMMIT_AUTHOR_EMAIL]: DD_GIT_COMMIT_AUTHOR_EMAIL,
        [tags_1.GIT_COMMIT_AUTHOR_NAME]: DD_GIT_COMMIT_AUTHOR_NAME,
        [tags_1.GIT_PULL_REQUEST_BASE_BRANCH]: DD_GIT_PULL_REQUEST_BASE_BRANCH,
        [tags_1.GIT_PULL_REQUEST_BASE_BRANCH_SHA]: DD_GIT_PULL_REQUEST_BASE_BRANCH_SHA,
        [tags_1.GIT_HEAD_SHA]: DD_GIT_COMMIT_HEAD_SHA,
        [tags_1.PR_NUMBER]: DD_PR_NUMBER,
    });
};
exports.getUserGitSpanTags = getUserGitSpanTags;
const getUserCISpanTags = () => {
    const { DD_CI_JOB_NAME, DD_CI_JOB_URL, DD_CI_PIPELINE_ID, DD_CI_PIPELINE_NAME, DD_CI_PIPELINE_NUMBER, DD_CI_PIPELINE_URL, DD_CI_PROVIDER_NAME, DD_CI_STAGE_NAME, DD_CI_WORKSPACE_PATH, } = process.env;
    return (0, utils_1.removeEmptyValues)({
        [tags_1.CI_JOB_NAME]: DD_CI_JOB_NAME,
        [tags_1.CI_JOB_URL]: DD_CI_JOB_URL,
        [tags_1.CI_PIPELINE_ID]: DD_CI_PIPELINE_ID,
        [tags_1.CI_PIPELINE_NAME]: DD_CI_PIPELINE_NAME,
        [tags_1.CI_PIPELINE_NUMBER]: DD_CI_PIPELINE_NUMBER,
        [tags_1.CI_PIPELINE_URL]: DD_CI_PIPELINE_URL,
        [tags_1.CI_PROVIDER_NAME]: DD_CI_PROVIDER_NAME,
        [tags_1.CI_STAGE_NAME]: DD_CI_STAGE_NAME,
        [tags_1.CI_WORKSPACE_PATH]: DD_CI_WORKSPACE_PATH,
    });
};
exports.getUserCISpanTags = getUserCISpanTags;
//# sourceMappingURL=user-provided-git.js.map