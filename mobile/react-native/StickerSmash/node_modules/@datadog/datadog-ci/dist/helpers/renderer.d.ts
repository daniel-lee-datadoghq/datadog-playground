export declare const dryRunTag: string;
export declare const errorTag: string;
export declare const warningTag: string;
export declare const warningExclamationSignTag: string;
export declare const successCheckmarkTag: string;
export declare const failCrossTag: string;
/**
 * @param error an error message or an object of type `unknown`*.
 * @returns the provided error prefixed by {@link errorTag}.
 *
 * * Using unknown since we're not type guarding.
 *
 * ```txt
 * [Error] The provided error goes here!
 * ```
 */
export declare const renderError: (error: unknown) => string;
/**
 * @param warning the message to warn about.
 * @returns the provided warning prefixed by {@link warningExclamationSignTag}.
 *
 * ```txt
 * [!] The provided warning goes here!
 * ```
 */
export declare const renderSoftWarning: (warning: string) => string;
/**
 * @returns a header indicating on which platform the 'flare' command is being run.
 * @param platformName the name of the platform. E.g. 'Cloud Run' or 'Lambda'.
 * @param isDryRun whether or not the command is a dry run.
 *
 * ```txt
 * [Dry Run] 🐶 Instrumenting Lambda function
 * ```
 */
export declare const renderFlareHeader: (platformName: string, isDryRun: boolean) => string;
/**
 * @returns a message indicating which project files were found, or a different
 * message if no project files were found.
 * @param projectFilePaths list of project file paths that were discovered
 *
 * ```txt
 * ✅ Found project file(s) in /Users/current-directory:
 * • package.json
 * • tsconfig.json
 * ```
 */
export declare const renderProjectFiles: (projectFilePaths: Set<string>) => string;
/**
 * @returns a message indicating which additional files were added, or a different
 * message if no additional files were added.
 * @param additionalFilePaths list of additional file paths that were added
 *
 * ```txt
 * ✅ Found project file(s) in /Users/current-directory:
 * • package.json
 * • tsconfig.json
 * ```
 */
export declare const renderAdditionalFiles: (additionalFilePaths: Set<string>) => string;
