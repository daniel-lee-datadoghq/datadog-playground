type PlistNode = {
    [tagName: string]: [{
        [valueType: string]: string | number | PlistNode;
    }];
};
declare class PlistContent {
    private content;
    constructor(content: PlistNode[]);
    getContent: () => PlistNode[];
    /**
     *
     * @param propertyName
     * @returns
     */
    getPropertyValue: (propertyName: string) => string | number;
    /**
     * A key entry will be turned into element of the content looking like this:
     * ```
     * {
     *   "key": [
     *     {
     *       "#text": "CFBundleDevelopmentRegion",
     *     },
     *   ],
     * }
     * ```
     */
    private isKeyNode;
    /**
     * A string entry will be turned into element of the content looking like this:
     * ```
     * {
     *   "string": [
     *     {
     *       "#text": "1.0.3",
     *     },
     *   ],
     * }
     * ```
     */
    private isStringNode;
}
export declare const parsePlist: (plistPath: string) => PlistContent;
export {};
