/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache License Version 2.0.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2016-Present Datadog, Inc.
 */

/**
 * A configuration object to initialize Datadog's features.
 */
export class DdSdkConfiguration {
  constructor(clientToken, env, applicationId, nativeCrashReportEnabled, nativeLongTaskThresholdMs, longTaskThresholdMs, sampleRate, site, trackingConsent, additionalConfiguration, telemetrySampleRate, vitalsUpdateFrequency, uploadFrequency, batchSize, trackFrustrations, trackBackgroundEvents, customEndpoints, configurationForTelemetry, nativeViewTracking, nativeInteractionTracking, verbosity, proxyConfig, serviceName, firstPartyHosts, bundleLogsWithRum, bundleLogsWithTraces, trackNonFatalAnrs, appHangThreshold, resourceTracingSamplingRate, trackWatchdogTerminations, batchProcessingLevel,
  // eslint-disable-next-line no-empty-function
  initialResourceThreshold) {
    this.clientToken = clientToken;
    this.env = env;
    this.applicationId = applicationId;
    this.nativeCrashReportEnabled = nativeCrashReportEnabled;
    this.nativeLongTaskThresholdMs = nativeLongTaskThresholdMs;
    this.longTaskThresholdMs = longTaskThresholdMs;
    this.sampleRate = sampleRate;
    this.site = site;
    this.trackingConsent = trackingConsent;
    this.additionalConfiguration = additionalConfiguration;
    this.telemetrySampleRate = telemetrySampleRate;
    this.vitalsUpdateFrequency = vitalsUpdateFrequency;
    this.uploadFrequency = uploadFrequency;
    this.batchSize = batchSize;
    this.trackFrustrations = trackFrustrations;
    this.trackBackgroundEvents = trackBackgroundEvents;
    this.customEndpoints = customEndpoints;
    this.configurationForTelemetry = configurationForTelemetry;
    this.nativeViewTracking = nativeViewTracking;
    this.nativeInteractionTracking = nativeInteractionTracking;
    this.verbosity = verbosity;
    this.proxyConfig = proxyConfig;
    this.serviceName = serviceName;
    this.firstPartyHosts = firstPartyHosts;
    this.bundleLogsWithRum = bundleLogsWithRum;
    this.bundleLogsWithTraces = bundleLogsWithTraces;
    this.trackNonFatalAnrs = trackNonFatalAnrs;
    this.appHangThreshold = appHangThreshold;
    this.resourceTracingSamplingRate = resourceTracingSamplingRate;
    this.trackWatchdogTerminations = trackWatchdogTerminations;
    this.batchProcessingLevel = batchProcessingLevel;
    this.initialResourceThreshold = initialResourceThreshold;
  }
}

/**
 * The entry point to initialize Datadog's features.
 */

/**
 * The entry point to use Datadog's Trace feature.
 */
//# sourceMappingURL=types.js.map