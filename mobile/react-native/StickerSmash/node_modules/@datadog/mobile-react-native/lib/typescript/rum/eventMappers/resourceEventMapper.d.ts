import type { AdditionalEventDataForMapper } from '../../sdk/EventMappers/EventMapper';
import { EventMapper } from '../../sdk/EventMappers/EventMapper';
import type { ResourceKind } from '../types';
type RawResource = {
    readonly key: string;
    readonly statusCode: number;
    readonly kind: ResourceKind;
    readonly size: number;
    context: object;
    readonly timestampMs: number;
    resourceContext: XMLHttpRequest | undefined;
};
type ResourceEvent = RawResource & AdditionalEventDataForMapper;
type NativeResource = {
    key: string;
    statusCode: number;
    kind: ResourceKind;
    size: number;
    context: object;
    timestampMs: number;
};
export type ResourceEventMapper = (event: ResourceEvent) => ResourceEvent | null;
export declare const generateResourceEventMapper: (eventMapper: ResourceEventMapper | undefined) => EventMapper<RawResource, ResourceEvent, NativeResource>;
export {};
//# sourceMappingURL=resourceEventMapper.d.ts.map