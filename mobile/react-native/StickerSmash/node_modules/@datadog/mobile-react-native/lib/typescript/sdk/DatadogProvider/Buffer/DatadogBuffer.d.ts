export declare abstract class DatadogBuffer {
    /**
     * Add a callback that takes no input and yields no output to the buffer.
     */
    abstract addCallback: (callback: () => Promise<void>) => Promise<void>;
    /**
     * Add a callback that returns an id to the buffer.
     * This method also returns an id (possibly different), to be passed to addCallbackWithId.
     */
    abstract addCallbackReturningId: (callback: () => Promise<string>) => Promise<string>;
    /**
     * Add a callback that takes an id as input to the buffer.
     * This id must be obtained by calling addCallbackReturningId.
     */
    abstract addCallbackWithId: (callback: (id: string) => Promise<void>, id: string) => Promise<void>;
    /**
     * Execute all callbacks in the buffer.
     */
    abstract drain: () => void;
}
//# sourceMappingURL=DatadogBuffer.d.ts.map