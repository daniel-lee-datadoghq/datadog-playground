import type { EventsInterceptor } from './EventsInterceptor';
export declare const UNKNOWN_TARGET_NAME = "unknown_target";
export type DdEventsInterceptorOptions = {
    /**
     * Specifies a custom prop to name RUM actions on elements having an `onPress` prop
     * */
    actionNameAttribute?: string;
    /**
     * Determines whether the accessibility label can be used to resolve the action name.
     * */
    useAccessibilityLabel?: boolean;
};
export declare class DdEventsInterceptor implements EventsInterceptor {
    static ACTION_EVENT_DROPPED_DEBUG_MESSAGE: string;
    private debouncingStartedTimestamp;
    private actionNameAttribute?;
    private useAccessibilityLabel;
    constructor(options?: DdEventsInterceptorOptions);
    interceptOnPress(...args: any[]): void;
    private handleTargetEvent;
    private resolveTargetName;
    private resolveElementTypeName;
    private findClosestActionLabel;
}
//# sourceMappingURL=DdEventsInterceptor.d.ts.map