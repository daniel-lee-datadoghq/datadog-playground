import { PropagatorType } from '../../../types';
import type { FirstPartyHost } from '../../../types';
import { DatadogTracingContext } from './DatadogTracingContext';
import type { DdRumResourceTracingAttributes } from './distributedTracing';
export declare const SAMPLING_PRIORITY_HEADER_KEY = "x-datadog-sampling-priority";
/**
 * Datadog headers
 */
export declare const ORIGIN_HEADER_KEY = "x-datadog-origin";
export declare const ORIGIN_RUM = "rum";
export declare const TRACE_ID_HEADER_KEY = "x-datadog-trace-id";
export declare const PARENT_ID_HEADER_KEY = "x-datadog-parent-id";
export declare const TAGS_HEADER_KEY = "x-datadog-tags";
export declare const DD_TRACE_ID_TAG = "_dd.p.tid";
export declare const DD_RUM_SESSION_ID_TAG = "session.id";
/**
 * OTel headers
 */
export declare const TRACECONTEXT_HEADER_KEY = "traceparent";
export declare const TRACESTATE_HEADER_KEY = "tracestate";
export declare const BAGGAGE_HEADER_KEY = "baggage";
export declare const B3_HEADER_KEY = "b3";
export declare const B3_MULTI_TRACE_ID_HEADER_KEY = "X-B3-TraceId";
export declare const B3_MULTI_SPAN_ID_HEADER_KEY = "X-B3-SpanId";
export declare const B3_MULTI_SAMPLED_HEADER_KEY = "X-B3-Sampled";
export declare const getTracingHeadersFromAttributes: (tracingAttributes: DdRumResourceTracingAttributes) => {
    header: string;
    value: string;
}[];
export declare const getTracingContext: (url: string, tracingSamplingRate: number, firstPartyHosts: FirstPartyHost[], rumSessionId?: string) => DatadogTracingContext;
export declare const getTracingContextForPropagators: (propagators: PropagatorType[], tracingSamplingRate: number, rumSessionId?: string) => DatadogTracingContext;
//# sourceMappingURL=distributedTracingHeaders.d.ts.map