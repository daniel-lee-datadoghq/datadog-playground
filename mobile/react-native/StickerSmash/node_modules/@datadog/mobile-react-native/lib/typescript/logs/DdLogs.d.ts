import type { DdLogsType, LogArguments, LogEventMapper, LogWithErrorArguments } from './types';
declare class DdLogsWrapper implements DdLogsType {
    private nativeLogs;
    private logEventMapper;
    debug: (...args: LogArguments | LogWithErrorArguments) => Promise<void>;
    info: (...args: LogArguments | LogWithErrorArguments) => Promise<void>;
    warn: (...args: LogArguments | LogWithErrorArguments) => Promise<void>;
    error: (...args: LogArguments | LogWithErrorArguments) => Promise<void>;
    /**
     * Since the InternalLog does not have a verbosity set yet in this case,
     * we use console.warn to warn the user in dev mode.
     */
    private printLogDroppedSdkNotInitialized;
    private printLogDroppedByMapper;
    private printLogTracked;
    private log;
    private logWithError;
    registerLogEventMapper(logEventMapper: LogEventMapper): void;
    unregisterLogEventMapper(): void;
}
export declare const DdLogs: DdLogsWrapper;
export {};
//# sourceMappingURL=DdLogs.d.ts.map