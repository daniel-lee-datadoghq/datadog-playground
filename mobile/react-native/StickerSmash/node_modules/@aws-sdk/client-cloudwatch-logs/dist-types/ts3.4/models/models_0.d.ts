import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { CloudWatchLogsServiceException as __BaseException } from "./CloudWatchLogsServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export declare const PolicyType: {
  readonly DATA_PROTECTION_POLICY: "DATA_PROTECTION_POLICY";
  readonly FIELD_INDEX_POLICY: "FIELD_INDEX_POLICY";
  readonly METRIC_EXTRACTION_POLICY: "METRIC_EXTRACTION_POLICY";
  readonly SUBSCRIPTION_FILTER_POLICY: "SUBSCRIPTION_FILTER_POLICY";
  readonly TRANSFORMER_POLICY: "TRANSFORMER_POLICY";
};
export type PolicyType = (typeof PolicyType)[keyof typeof PolicyType];
export declare const Scope: {
  readonly ALL: "ALL";
};
export type Scope = (typeof Scope)[keyof typeof Scope];
export interface AccountPolicy {
  policyName?: string | undefined;
  policyDocument?: string | undefined;
  lastUpdatedTime?: number | undefined;
  policyType?: PolicyType | undefined;
  scope?: Scope | undefined;
  selectionCriteria?: string | undefined;
  accountId?: string | undefined;
}
export interface AddKeyEntry {
  key: string | undefined;
  value: string | undefined;
  overwriteIfExists?: boolean | undefined;
}
export interface AddKeys {
  entries: AddKeyEntry[] | undefined;
}
export interface RecordField {
  name?: string | undefined;
  mandatory?: boolean | undefined;
}
export interface LogEvent {
  timestamp?: number | undefined;
  message?: string | undefined;
}
export interface PatternToken {
  dynamicTokenPosition?: number | undefined;
  isDynamic?: boolean | undefined;
  tokenString?: string | undefined;
  enumerations?: Record<string, number> | undefined;
  inferredTokenName?: string | undefined;
}
export declare const State: {
  readonly Active: "Active";
  readonly Baseline: "Baseline";
  readonly Suppressed: "Suppressed";
};
export type State = (typeof State)[keyof typeof State];
export interface Anomaly {
  anomalyId: string | undefined;
  patternId: string | undefined;
  anomalyDetectorArn: string | undefined;
  patternString: string | undefined;
  patternRegex?: string | undefined;
  priority?: string | undefined;
  firstSeen: number | undefined;
  lastSeen: number | undefined;
  description: string | undefined;
  active: boolean | undefined;
  state: State | undefined;
  histogram: Record<string, number> | undefined;
  logSamples: LogEvent[] | undefined;
  patternTokens: PatternToken[] | undefined;
  logGroupArnList: string[] | undefined;
  suppressed?: boolean | undefined;
  suppressedDate?: number | undefined;
  suppressedUntil?: number | undefined;
  isPatternLevelSuppression?: boolean | undefined;
}
export declare const AnomalyDetectorStatus: {
  readonly ANALYZING: "ANALYZING";
  readonly DELETED: "DELETED";
  readonly FAILED: "FAILED";
  readonly INITIALIZING: "INITIALIZING";
  readonly PAUSED: "PAUSED";
  readonly TRAINING: "TRAINING";
};
export type AnomalyDetectorStatus =
  (typeof AnomalyDetectorStatus)[keyof typeof AnomalyDetectorStatus];
export declare const EvaluationFrequency: {
  readonly FIFTEEN_MIN: "FIFTEEN_MIN";
  readonly FIVE_MIN: "FIVE_MIN";
  readonly ONE_HOUR: "ONE_HOUR";
  readonly ONE_MIN: "ONE_MIN";
  readonly TEN_MIN: "TEN_MIN";
  readonly THIRTY_MIN: "THIRTY_MIN";
};
export type EvaluationFrequency =
  (typeof EvaluationFrequency)[keyof typeof EvaluationFrequency];
export interface AnomalyDetector {
  anomalyDetectorArn?: string | undefined;
  detectorName?: string | undefined;
  logGroupArnList?: string[] | undefined;
  evaluationFrequency?: EvaluationFrequency | undefined;
  filterPattern?: string | undefined;
  anomalyDetectorStatus?: AnomalyDetectorStatus | undefined;
  kmsKeyId?: string | undefined;
  creationTimeStamp?: number | undefined;
  lastModifiedTimeStamp?: number | undefined;
  anomalyVisibilityTime?: number | undefined;
}
export interface AssociateKmsKeyRequest {
  logGroupName?: string | undefined;
  kmsKeyId: string | undefined;
  resourceIdentifier?: string | undefined;
}
export declare class InvalidParameterException extends __BaseException {
  readonly name: "InvalidParameterException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidParameterException, __BaseException>
  );
}
export declare class OperationAbortedException extends __BaseException {
  readonly name: "OperationAbortedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<OperationAbortedException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceUnavailableException extends __BaseException {
  readonly name: "ServiceUnavailableException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>
  );
}
export interface CancelExportTaskRequest {
  taskId: string | undefined;
}
export declare class InvalidOperationException extends __BaseException {
  readonly name: "InvalidOperationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidOperationException, __BaseException>
  );
}
export declare const OutputFormat: {
  readonly JSON: "json";
  readonly PARQUET: "parquet";
  readonly PLAIN: "plain";
  readonly RAW: "raw";
  readonly W3C: "w3c";
};
export type OutputFormat = (typeof OutputFormat)[keyof typeof OutputFormat];
export interface S3DeliveryConfiguration {
  suffixPath?: string | undefined;
  enableHiveCompatiblePath?: boolean | undefined;
}
export interface ConfigurationTemplateDeliveryConfigValues {
  recordFields?: string[] | undefined;
  fieldDelimiter?: string | undefined;
  s3DeliveryConfiguration?: S3DeliveryConfiguration | undefined;
}
export declare const DeliveryDestinationType: {
  readonly CWL: "CWL";
  readonly FH: "FH";
  readonly S3: "S3";
  readonly XRAY: "XRAY";
};
export type DeliveryDestinationType =
  (typeof DeliveryDestinationType)[keyof typeof DeliveryDestinationType];
export interface ConfigurationTemplate {
  service?: string | undefined;
  logType?: string | undefined;
  resourceType?: string | undefined;
  deliveryDestinationType?: DeliveryDestinationType | undefined;
  defaultDeliveryConfigValues?:
    | ConfigurationTemplateDeliveryConfigValues
    | undefined;
  allowedFields?: RecordField[] | undefined;
  allowedOutputFormats?: OutputFormat[] | undefined;
  allowedActionForAllowVendedLogsDeliveryForResource?: string | undefined;
  allowedFieldDelimiters?: string[] | undefined;
  allowedSuffixPathFields?: string[] | undefined;
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface CopyValueEntry {
  source: string | undefined;
  target: string | undefined;
  overwriteIfExists?: boolean | undefined;
}
export interface CopyValue {
  entries: CopyValueEntry[] | undefined;
}
export interface CreateDeliveryRequest {
  deliverySourceName: string | undefined;
  deliveryDestinationArn: string | undefined;
  recordFields?: string[] | undefined;
  fieldDelimiter?: string | undefined;
  s3DeliveryConfiguration?: S3DeliveryConfiguration | undefined;
  tags?: Record<string, string> | undefined;
}
export interface Delivery {
  id?: string | undefined;
  arn?: string | undefined;
  deliverySourceName?: string | undefined;
  deliveryDestinationArn?: string | undefined;
  deliveryDestinationType?: DeliveryDestinationType | undefined;
  recordFields?: string[] | undefined;
  fieldDelimiter?: string | undefined;
  s3DeliveryConfiguration?: S3DeliveryConfiguration | undefined;
  tags?: Record<string, string> | undefined;
}
export interface CreateDeliveryResponse {
  delivery?: Delivery | undefined;
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface CreateExportTaskRequest {
  taskName?: string | undefined;
  logGroupName: string | undefined;
  logStreamNamePrefix?: string | undefined;
  from: number | undefined;
  to: number | undefined;
  destination: string | undefined;
  destinationPrefix?: string | undefined;
}
export interface CreateExportTaskResponse {
  taskId?: string | undefined;
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare class ResourceAlreadyExistsException extends __BaseException {
  readonly name: "ResourceAlreadyExistsException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceAlreadyExistsException, __BaseException>
  );
}
export interface CreateLogAnomalyDetectorRequest {
  logGroupArnList: string[] | undefined;
  detectorName?: string | undefined;
  evaluationFrequency?: EvaluationFrequency | undefined;
  filterPattern?: string | undefined;
  kmsKeyId?: string | undefined;
  anomalyVisibilityTime?: number | undefined;
  tags?: Record<string, string> | undefined;
}
export interface CreateLogAnomalyDetectorResponse {
  anomalyDetectorArn?: string | undefined;
}
export declare const LogGroupClass: {
  readonly DELIVERY: "DELIVERY";
  readonly INFREQUENT_ACCESS: "INFREQUENT_ACCESS";
  readonly STANDARD: "STANDARD";
};
export type LogGroupClass = (typeof LogGroupClass)[keyof typeof LogGroupClass];
export interface CreateLogGroupRequest {
  logGroupName: string | undefined;
  kmsKeyId?: string | undefined;
  tags?: Record<string, string> | undefined;
  logGroupClass?: LogGroupClass | undefined;
}
export interface CreateLogStreamRequest {
  logGroupName: string | undefined;
  logStreamName: string | undefined;
}
export interface CSV {
  quoteCharacter?: string | undefined;
  delimiter?: string | undefined;
  columns?: string[] | undefined;
  source?: string | undefined;
}
export declare class DataAlreadyAcceptedException extends __BaseException {
  readonly name: "DataAlreadyAcceptedException";
  readonly $fault: "client";
  expectedSequenceToken?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<DataAlreadyAcceptedException, __BaseException>
  );
}
export declare const DataProtectionStatus: {
  readonly ACTIVATED: "ACTIVATED";
  readonly ARCHIVED: "ARCHIVED";
  readonly DELETED: "DELETED";
  readonly DISABLED: "DISABLED";
};
export type DataProtectionStatus =
  (typeof DataProtectionStatus)[keyof typeof DataProtectionStatus];
export interface DateTimeConverter {
  source: string | undefined;
  target: string | undefined;
  targetFormat?: string | undefined;
  matchPatterns: string[] | undefined;
  sourceTimezone?: string | undefined;
  targetTimezone?: string | undefined;
  locale?: string | undefined;
}
export interface DeleteAccountPolicyRequest {
  policyName: string | undefined;
  policyType: PolicyType | undefined;
}
export interface DeleteDataProtectionPolicyRequest {
  logGroupIdentifier: string | undefined;
}
export interface DeleteDeliveryRequest {
  id: string | undefined;
}
export interface DeleteDeliveryDestinationRequest {
  name: string | undefined;
}
export interface DeleteDeliveryDestinationPolicyRequest {
  deliveryDestinationName: string | undefined;
}
export interface DeleteDeliverySourceRequest {
  name: string | undefined;
}
export interface DeleteDestinationRequest {
  destinationName: string | undefined;
}
export interface DeleteIndexPolicyRequest {
  logGroupIdentifier: string | undefined;
}
export interface DeleteIndexPolicyResponse {}
export interface DeleteIntegrationRequest {
  integrationName: string | undefined;
  force?: boolean | undefined;
}
export interface DeleteIntegrationResponse {}
export interface DeleteKeys {
  withKeys: string[] | undefined;
}
export interface DeleteLogAnomalyDetectorRequest {
  anomalyDetectorArn: string | undefined;
}
export interface DeleteLogGroupRequest {
  logGroupName: string | undefined;
}
export interface DeleteLogStreamRequest {
  logGroupName: string | undefined;
  logStreamName: string | undefined;
}
export interface DeleteMetricFilterRequest {
  logGroupName: string | undefined;
  filterName: string | undefined;
}
export interface DeleteQueryDefinitionRequest {
  queryDefinitionId: string | undefined;
}
export interface DeleteQueryDefinitionResponse {
  success?: boolean | undefined;
}
export interface DeleteResourcePolicyRequest {
  policyName?: string | undefined;
  resourceArn?: string | undefined;
  expectedRevisionId?: string | undefined;
}
export interface DeleteRetentionPolicyRequest {
  logGroupName: string | undefined;
}
export interface DeleteSubscriptionFilterRequest {
  logGroupName: string | undefined;
  filterName: string | undefined;
}
export interface DeleteTransformerRequest {
  logGroupIdentifier: string | undefined;
}
export interface DeliveryDestinationConfiguration {
  destinationResourceArn: string | undefined;
}
export interface DeliveryDestination {
  name?: string | undefined;
  arn?: string | undefined;
  deliveryDestinationType?: DeliveryDestinationType | undefined;
  outputFormat?: OutputFormat | undefined;
  deliveryDestinationConfiguration?:
    | DeliveryDestinationConfiguration
    | undefined;
  tags?: Record<string, string> | undefined;
}
export interface DeliverySource {
  name?: string | undefined;
  arn?: string | undefined;
  resourceArns?: string[] | undefined;
  service?: string | undefined;
  logType?: string | undefined;
  tags?: Record<string, string> | undefined;
}
export interface DescribeAccountPoliciesRequest {
  policyType: PolicyType | undefined;
  policyName?: string | undefined;
  accountIdentifiers?: string[] | undefined;
  nextToken?: string | undefined;
}
export interface DescribeAccountPoliciesResponse {
  accountPolicies?: AccountPolicy[] | undefined;
  nextToken?: string | undefined;
}
export interface DescribeConfigurationTemplatesRequest {
  service?: string | undefined;
  logTypes?: string[] | undefined;
  resourceTypes?: string[] | undefined;
  deliveryDestinationTypes?: DeliveryDestinationType[] | undefined;
  nextToken?: string | undefined;
  limit?: number | undefined;
}
export interface DescribeConfigurationTemplatesResponse {
  configurationTemplates?: ConfigurationTemplate[] | undefined;
  nextToken?: string | undefined;
}
export interface DescribeDeliveriesRequest {
  nextToken?: string | undefined;
  limit?: number | undefined;
}
export interface DescribeDeliveriesResponse {
  deliveries?: Delivery[] | undefined;
  nextToken?: string | undefined;
}
export interface DescribeDeliveryDestinationsRequest {
  nextToken?: string | undefined;
  limit?: number | undefined;
}
export interface DescribeDeliveryDestinationsResponse {
  deliveryDestinations?: DeliveryDestination[] | undefined;
  nextToken?: string | undefined;
}
export interface DescribeDeliverySourcesRequest {
  nextToken?: string | undefined;
  limit?: number | undefined;
}
export interface DescribeDeliverySourcesResponse {
  deliverySources?: DeliverySource[] | undefined;
  nextToken?: string | undefined;
}
export interface DescribeDestinationsRequest {
  DestinationNamePrefix?: string | undefined;
  nextToken?: string | undefined;
  limit?: number | undefined;
}
export interface Destination {
  destinationName?: string | undefined;
  targetArn?: string | undefined;
  roleArn?: string | undefined;
  accessPolicy?: string | undefined;
  arn?: string | undefined;
  creationTime?: number | undefined;
}
export interface DescribeDestinationsResponse {
  destinations?: Destination[] | undefined;
  nextToken?: string | undefined;
}
export declare const ExportTaskStatusCode: {
  readonly CANCELLED: "CANCELLED";
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly PENDING: "PENDING";
  readonly PENDING_CANCEL: "PENDING_CANCEL";
  readonly RUNNING: "RUNNING";
};
export type ExportTaskStatusCode =
  (typeof ExportTaskStatusCode)[keyof typeof ExportTaskStatusCode];
export interface DescribeExportTasksRequest {
  taskId?: string | undefined;
  statusCode?: ExportTaskStatusCode | undefined;
  nextToken?: string | undefined;
  limit?: number | undefined;
}
export interface ExportTaskExecutionInfo {
  creationTime?: number | undefined;
  completionTime?: number | undefined;
}
export interface ExportTaskStatus {
  code?: ExportTaskStatusCode | undefined;
  message?: string | undefined;
}
export interface ExportTask {
  taskId?: string | undefined;
  taskName?: string | undefined;
  logGroupName?: string | undefined;
  from?: number | undefined;
  to?: number | undefined;
  destination?: string | undefined;
  destinationPrefix?: string | undefined;
  status?: ExportTaskStatus | undefined;
  executionInfo?: ExportTaskExecutionInfo | undefined;
}
export interface DescribeExportTasksResponse {
  exportTasks?: ExportTask[] | undefined;
  nextToken?: string | undefined;
}
export interface DescribeFieldIndexesRequest {
  logGroupIdentifiers: string[] | undefined;
  nextToken?: string | undefined;
}
export interface FieldIndex {
  logGroupIdentifier?: string | undefined;
  fieldIndexName?: string | undefined;
  lastScanTime?: number | undefined;
  firstEventTime?: number | undefined;
  lastEventTime?: number | undefined;
}
export interface DescribeFieldIndexesResponse {
  fieldIndexes?: FieldIndex[] | undefined;
  nextToken?: string | undefined;
}
export interface DescribeIndexPoliciesRequest {
  logGroupIdentifiers: string[] | undefined;
  nextToken?: string | undefined;
}
export declare const IndexSource: {
  readonly ACCOUNT: "ACCOUNT";
  readonly LOG_GROUP: "LOG_GROUP";
};
export type IndexSource = (typeof IndexSource)[keyof typeof IndexSource];
export interface IndexPolicy {
  logGroupIdentifier?: string | undefined;
  lastUpdateTime?: number | undefined;
  policyDocument?: string | undefined;
  policyName?: string | undefined;
  source?: IndexSource | undefined;
}
export interface DescribeIndexPoliciesResponse {
  indexPolicies?: IndexPolicy[] | undefined;
  nextToken?: string | undefined;
}
export interface DescribeLogGroupsRequest {
  accountIdentifiers?: string[] | undefined;
  logGroupNamePrefix?: string | undefined;
  logGroupNamePattern?: string | undefined;
  nextToken?: string | undefined;
  limit?: number | undefined;
  includeLinkedAccounts?: boolean | undefined;
  logGroupClass?: LogGroupClass | undefined;
  logGroupIdentifiers?: string[] | undefined;
}
export declare const InheritedProperty: {
  readonly ACCOUNT_DATA_PROTECTION: "ACCOUNT_DATA_PROTECTION";
};
export type InheritedProperty =
  (typeof InheritedProperty)[keyof typeof InheritedProperty];
export interface LogGroup {
  logGroupName?: string | undefined;
  creationTime?: number | undefined;
  retentionInDays?: number | undefined;
  metricFilterCount?: number | undefined;
  arn?: string | undefined;
  storedBytes?: number | undefined;
  kmsKeyId?: string | undefined;
  dataProtectionStatus?: DataProtectionStatus | undefined;
  inheritedProperties?: InheritedProperty[] | undefined;
  logGroupClass?: LogGroupClass | undefined;
  logGroupArn?: string | undefined;
}
export interface DescribeLogGroupsResponse {
  logGroups?: LogGroup[] | undefined;
  nextToken?: string | undefined;
}
export declare const OrderBy: {
  readonly LastEventTime: "LastEventTime";
  readonly LogStreamName: "LogStreamName";
};
export type OrderBy = (typeof OrderBy)[keyof typeof OrderBy];
export interface DescribeLogStreamsRequest {
  logGroupName?: string | undefined;
  logGroupIdentifier?: string | undefined;
  logStreamNamePrefix?: string | undefined;
  orderBy?: OrderBy | undefined;
  descending?: boolean | undefined;
  nextToken?: string | undefined;
  limit?: number | undefined;
}
export interface LogStream {
  logStreamName?: string | undefined;
  creationTime?: number | undefined;
  firstEventTimestamp?: number | undefined;
  lastEventTimestamp?: number | undefined;
  lastIngestionTime?: number | undefined;
  uploadSequenceToken?: string | undefined;
  arn?: string | undefined;
  storedBytes?: number | undefined;
}
export interface DescribeLogStreamsResponse {
  logStreams?: LogStream[] | undefined;
  nextToken?: string | undefined;
}
export interface DescribeMetricFiltersRequest {
  logGroupName?: string | undefined;
  filterNamePrefix?: string | undefined;
  nextToken?: string | undefined;
  limit?: number | undefined;
  metricName?: string | undefined;
  metricNamespace?: string | undefined;
}
export declare const StandardUnit: {
  readonly Bits: "Bits";
  readonly BitsSecond: "Bits/Second";
  readonly Bytes: "Bytes";
  readonly BytesSecond: "Bytes/Second";
  readonly Count: "Count";
  readonly CountSecond: "Count/Second";
  readonly Gigabits: "Gigabits";
  readonly GigabitsSecond: "Gigabits/Second";
  readonly Gigabytes: "Gigabytes";
  readonly GigabytesSecond: "Gigabytes/Second";
  readonly Kilobits: "Kilobits";
  readonly KilobitsSecond: "Kilobits/Second";
  readonly Kilobytes: "Kilobytes";
  readonly KilobytesSecond: "Kilobytes/Second";
  readonly Megabits: "Megabits";
  readonly MegabitsSecond: "Megabits/Second";
  readonly Megabytes: "Megabytes";
  readonly MegabytesSecond: "Megabytes/Second";
  readonly Microseconds: "Microseconds";
  readonly Milliseconds: "Milliseconds";
  readonly None: "None";
  readonly Percent: "Percent";
  readonly Seconds: "Seconds";
  readonly Terabits: "Terabits";
  readonly TerabitsSecond: "Terabits/Second";
  readonly Terabytes: "Terabytes";
  readonly TerabytesSecond: "Terabytes/Second";
};
export type StandardUnit = (typeof StandardUnit)[keyof typeof StandardUnit];
export interface MetricTransformation {
  metricName: string | undefined;
  metricNamespace: string | undefined;
  metricValue: string | undefined;
  defaultValue?: number | undefined;
  dimensions?: Record<string, string> | undefined;
  unit?: StandardUnit | undefined;
}
export interface MetricFilter {
  filterName?: string | undefined;
  filterPattern?: string | undefined;
  metricTransformations?: MetricTransformation[] | undefined;
  creationTime?: number | undefined;
  logGroupName?: string | undefined;
  applyOnTransformedLogs?: boolean | undefined;
}
export interface DescribeMetricFiltersResponse {
  metricFilters?: MetricFilter[] | undefined;
  nextToken?: string | undefined;
}
export declare const QueryLanguage: {
  readonly CWLI: "CWLI";
  readonly PPL: "PPL";
  readonly SQL: "SQL";
};
export type QueryLanguage = (typeof QueryLanguage)[keyof typeof QueryLanguage];
export declare const QueryStatus: {
  readonly Cancelled: "Cancelled";
  readonly Complete: "Complete";
  readonly Failed: "Failed";
  readonly Running: "Running";
  readonly Scheduled: "Scheduled";
  readonly Timeout: "Timeout";
  readonly Unknown: "Unknown";
};
export type QueryStatus = (typeof QueryStatus)[keyof typeof QueryStatus];
export interface DescribeQueriesRequest {
  logGroupName?: string | undefined;
  status?: QueryStatus | undefined;
  maxResults?: number | undefined;
  nextToken?: string | undefined;
  queryLanguage?: QueryLanguage | undefined;
}
export interface QueryInfo {
  queryLanguage?: QueryLanguage | undefined;
  queryId?: string | undefined;
  queryString?: string | undefined;
  status?: QueryStatus | undefined;
  createTime?: number | undefined;
  logGroupName?: string | undefined;
}
export interface DescribeQueriesResponse {
  queries?: QueryInfo[] | undefined;
  nextToken?: string | undefined;
}
export interface DescribeQueryDefinitionsRequest {
  queryLanguage?: QueryLanguage | undefined;
  queryDefinitionNamePrefix?: string | undefined;
  maxResults?: number | undefined;
  nextToken?: string | undefined;
}
export interface QueryDefinition {
  queryLanguage?: QueryLanguage | undefined;
  queryDefinitionId?: string | undefined;
  name?: string | undefined;
  queryString?: string | undefined;
  lastModified?: number | undefined;
  logGroupNames?: string[] | undefined;
}
export interface DescribeQueryDefinitionsResponse {
  queryDefinitions?: QueryDefinition[] | undefined;
  nextToken?: string | undefined;
}
export declare const PolicyScope: {
  readonly ACCOUNT: "ACCOUNT";
  readonly RESOURCE: "RESOURCE";
};
export type PolicyScope = (typeof PolicyScope)[keyof typeof PolicyScope];
export interface DescribeResourcePoliciesRequest {
  nextToken?: string | undefined;
  limit?: number | undefined;
  resourceArn?: string | undefined;
  policyScope?: PolicyScope | undefined;
}
export interface ResourcePolicy {
  policyName?: string | undefined;
  policyDocument?: string | undefined;
  lastUpdatedTime?: number | undefined;
  policyScope?: PolicyScope | undefined;
  resourceArn?: string | undefined;
  revisionId?: string | undefined;
}
export interface DescribeResourcePoliciesResponse {
  resourcePolicies?: ResourcePolicy[] | undefined;
  nextToken?: string | undefined;
}
export interface DescribeSubscriptionFiltersRequest {
  logGroupName: string | undefined;
  filterNamePrefix?: string | undefined;
  nextToken?: string | undefined;
  limit?: number | undefined;
}
export declare const Distribution: {
  readonly ByLogStream: "ByLogStream";
  readonly Random: "Random";
};
export type Distribution = (typeof Distribution)[keyof typeof Distribution];
export interface SubscriptionFilter {
  filterName?: string | undefined;
  logGroupName?: string | undefined;
  filterPattern?: string | undefined;
  destinationArn?: string | undefined;
  roleArn?: string | undefined;
  distribution?: Distribution | undefined;
  applyOnTransformedLogs?: boolean | undefined;
  creationTime?: number | undefined;
}
export interface DescribeSubscriptionFiltersResponse {
  subscriptionFilters?: SubscriptionFilter[] | undefined;
  nextToken?: string | undefined;
}
export interface DisassociateKmsKeyRequest {
  logGroupName?: string | undefined;
  resourceIdentifier?: string | undefined;
}
export interface Entity {
  keyAttributes?: Record<string, string> | undefined;
  attributes?: Record<string, string> | undefined;
}
export declare const EntityRejectionErrorType: {
  readonly ENTITY_SIZE_TOO_LARGE: "EntitySizeTooLarge";
  readonly INVALID_ATTRIBUTES: "InvalidAttributes";
  readonly INVALID_ENTITY: "InvalidEntity";
  readonly INVALID_KEY_ATTRIBUTE: "InvalidKeyAttributes";
  readonly INVALID_TYPE_VALUE: "InvalidTypeValue";
  readonly MISSING_REQUIRED_FIELDS: "MissingRequiredFields";
  readonly UNSUPPORTED_LOG_GROUP_TYPE: "UnsupportedLogGroupType";
};
export type EntityRejectionErrorType =
  (typeof EntityRejectionErrorType)[keyof typeof EntityRejectionErrorType];
export declare const EventSource: {
  readonly AWSWAF: "AWSWAF";
  readonly CLOUD_TRAIL: "CloudTrail";
  readonly EKS_AUDIT: "EKSAudit";
  readonly ROUTE53_RESOLVER: "Route53Resolver";
  readonly VPC_FLOW: "VPCFlow";
};
export type EventSource = (typeof EventSource)[keyof typeof EventSource];
export interface FieldsData {
  data?: Uint8Array | undefined;
}
export interface FilteredLogEvent {
  logStreamName?: string | undefined;
  timestamp?: number | undefined;
  message?: string | undefined;
  ingestionTime?: number | undefined;
  eventId?: string | undefined;
}
export interface FilterLogEventsRequest {
  logGroupName?: string | undefined;
  logGroupIdentifier?: string | undefined;
  logStreamNames?: string[] | undefined;
  logStreamNamePrefix?: string | undefined;
  startTime?: number | undefined;
  endTime?: number | undefined;
  filterPattern?: string | undefined;
  nextToken?: string | undefined;
  limit?: number | undefined;
  interleaved?: boolean | undefined;
  unmask?: boolean | undefined;
}
export interface SearchedLogStream {
  logStreamName?: string | undefined;
  searchedCompletely?: boolean | undefined;
}
export interface FilterLogEventsResponse {
  events?: FilteredLogEvent[] | undefined;
  searchedLogStreams?: SearchedLogStream[] | undefined;
  nextToken?: string | undefined;
}
export declare const FlattenedElement: {
  readonly FIRST: "first";
  readonly LAST: "last";
};
export type FlattenedElement =
  (typeof FlattenedElement)[keyof typeof FlattenedElement];
export interface GetDataProtectionPolicyRequest {
  logGroupIdentifier: string | undefined;
}
export interface GetDataProtectionPolicyResponse {
  logGroupIdentifier?: string | undefined;
  policyDocument?: string | undefined;
  lastUpdatedTime?: number | undefined;
}
export interface GetDeliveryRequest {
  id: string | undefined;
}
export interface GetDeliveryResponse {
  delivery?: Delivery | undefined;
}
export interface GetDeliveryDestinationRequest {
  name: string | undefined;
}
export interface GetDeliveryDestinationResponse {
  deliveryDestination?: DeliveryDestination | undefined;
}
export interface GetDeliveryDestinationPolicyRequest {
  deliveryDestinationName: string | undefined;
}
export interface Policy {
  deliveryDestinationPolicy?: string | undefined;
}
export interface GetDeliveryDestinationPolicyResponse {
  policy?: Policy | undefined;
}
export interface GetDeliverySourceRequest {
  name: string | undefined;
}
export interface GetDeliverySourceResponse {
  deliverySource?: DeliverySource | undefined;
}
export interface GetIntegrationRequest {
  integrationName: string | undefined;
}
export declare const OpenSearchResourceStatusType: {
  readonly ACTIVE: "ACTIVE";
  readonly ERROR: "ERROR";
  readonly NOT_FOUND: "NOT_FOUND";
};
export type OpenSearchResourceStatusType =
  (typeof OpenSearchResourceStatusType)[keyof typeof OpenSearchResourceStatusType];
export interface OpenSearchResourceStatus {
  status?: OpenSearchResourceStatusType | undefined;
  statusMessage?: string | undefined;
}
export interface OpenSearchDataAccessPolicy {
  policyName?: string | undefined;
  status?: OpenSearchResourceStatus | undefined;
}
export interface OpenSearchApplication {
  applicationEndpoint?: string | undefined;
  applicationArn?: string | undefined;
  applicationId?: string | undefined;
  status?: OpenSearchResourceStatus | undefined;
}
export interface OpenSearchCollection {
  collectionEndpoint?: string | undefined;
  collectionArn?: string | undefined;
  status?: OpenSearchResourceStatus | undefined;
}
export interface OpenSearchDataSource {
  dataSourceName?: string | undefined;
  status?: OpenSearchResourceStatus | undefined;
}
export interface OpenSearchEncryptionPolicy {
  policyName?: string | undefined;
  status?: OpenSearchResourceStatus | undefined;
}
export interface OpenSearchLifecyclePolicy {
  policyName?: string | undefined;
  status?: OpenSearchResourceStatus | undefined;
}
export interface OpenSearchNetworkPolicy {
  policyName?: string | undefined;
  status?: OpenSearchResourceStatus | undefined;
}
export interface OpenSearchWorkspace {
  workspaceId?: string | undefined;
  status?: OpenSearchResourceStatus | undefined;
}
export interface OpenSearchIntegrationDetails {
  dataSource?: OpenSearchDataSource | undefined;
  application?: OpenSearchApplication | undefined;
  collection?: OpenSearchCollection | undefined;
  workspace?: OpenSearchWorkspace | undefined;
  encryptionPolicy?: OpenSearchEncryptionPolicy | undefined;
  networkPolicy?: OpenSearchNetworkPolicy | undefined;
  accessPolicy?: OpenSearchDataAccessPolicy | undefined;
  lifecyclePolicy?: OpenSearchLifecyclePolicy | undefined;
}
export type IntegrationDetails =
  | IntegrationDetails.OpenSearchIntegrationDetailsMember
  | IntegrationDetails.$UnknownMember;
export declare namespace IntegrationDetails {
  interface OpenSearchIntegrationDetailsMember {
    openSearchIntegrationDetails: OpenSearchIntegrationDetails;
    $unknown?: never;
  }
  interface $UnknownMember {
    openSearchIntegrationDetails?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    openSearchIntegrationDetails: (value: OpenSearchIntegrationDetails) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: IntegrationDetails, visitor: Visitor<T>) => T;
}
export declare const IntegrationStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly FAILED: "FAILED";
  readonly PROVISIONING: "PROVISIONING";
};
export type IntegrationStatus =
  (typeof IntegrationStatus)[keyof typeof IntegrationStatus];
export declare const IntegrationType: {
  readonly OPENSEARCH: "OPENSEARCH";
};
export type IntegrationType =
  (typeof IntegrationType)[keyof typeof IntegrationType];
export interface GetIntegrationResponse {
  integrationName?: string | undefined;
  integrationType?: IntegrationType | undefined;
  integrationStatus?: IntegrationStatus | undefined;
  integrationDetails?: IntegrationDetails | undefined;
}
export interface GetLogAnomalyDetectorRequest {
  anomalyDetectorArn: string | undefined;
}
export interface GetLogAnomalyDetectorResponse {
  detectorName?: string | undefined;
  logGroupArnList?: string[] | undefined;
  evaluationFrequency?: EvaluationFrequency | undefined;
  filterPattern?: string | undefined;
  anomalyDetectorStatus?: AnomalyDetectorStatus | undefined;
  kmsKeyId?: string | undefined;
  creationTimeStamp?: number | undefined;
  lastModifiedTimeStamp?: number | undefined;
  anomalyVisibilityTime?: number | undefined;
}
export interface GetLogEventsRequest {
  logGroupName?: string | undefined;
  logGroupIdentifier?: string | undefined;
  logStreamName: string | undefined;
  startTime?: number | undefined;
  endTime?: number | undefined;
  nextToken?: string | undefined;
  limit?: number | undefined;
  startFromHead?: boolean | undefined;
  unmask?: boolean | undefined;
}
export interface OutputLogEvent {
  timestamp?: number | undefined;
  message?: string | undefined;
  ingestionTime?: number | undefined;
}
export interface GetLogEventsResponse {
  events?: OutputLogEvent[] | undefined;
  nextForwardToken?: string | undefined;
  nextBackwardToken?: string | undefined;
}
export interface GetLogGroupFieldsRequest {
  logGroupName?: string | undefined;
  time?: number | undefined;
  logGroupIdentifier?: string | undefined;
}
export interface LogGroupField {
  name?: string | undefined;
  percent?: number | undefined;
}
export interface GetLogGroupFieldsResponse {
  logGroupFields?: LogGroupField[] | undefined;
}
export interface GetLogObjectRequest {
  unmask?: boolean | undefined;
  logObjectPointer: string | undefined;
}
export declare class InternalStreamingException extends __BaseException {
  readonly name: "InternalStreamingException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InternalStreamingException, __BaseException>
  );
}
export type GetLogObjectResponseStream =
  | GetLogObjectResponseStream.InternalStreamingExceptionMember
  | GetLogObjectResponseStream.FieldsMember
  | GetLogObjectResponseStream.$UnknownMember;
export declare namespace GetLogObjectResponseStream {
  interface FieldsMember {
    fields: FieldsData;
    InternalStreamingException?: never;
    $unknown?: never;
  }
  interface InternalStreamingExceptionMember {
    fields?: never;
    InternalStreamingException: InternalStreamingException;
    $unknown?: never;
  }
  interface $UnknownMember {
    fields?: never;
    InternalStreamingException?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    fields: (value: FieldsData) => T;
    InternalStreamingException: (value: InternalStreamingException) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: GetLogObjectResponseStream, visitor: Visitor<T>) => T;
}
export interface GetLogObjectResponse {
  fieldStream?: AsyncIterable<GetLogObjectResponseStream> | undefined;
}
export interface GetLogRecordRequest {
  logRecordPointer: string | undefined;
  unmask?: boolean | undefined;
}
export interface GetLogRecordResponse {
  logRecord?: Record<string, string> | undefined;
}
export interface GetQueryResultsRequest {
  queryId: string | undefined;
}
export interface ResultField {
  field?: string | undefined;
  value?: string | undefined;
}
export interface QueryStatistics {
  recordsMatched?: number | undefined;
  recordsScanned?: number | undefined;
  estimatedRecordsSkipped?: number | undefined;
  bytesScanned?: number | undefined;
  estimatedBytesSkipped?: number | undefined;
  logGroupsScanned?: number | undefined;
}
export interface GetQueryResultsResponse {
  queryLanguage?: QueryLanguage | undefined;
  results?: ResultField[][] | undefined;
  statistics?: QueryStatistics | undefined;
  status?: QueryStatus | undefined;
  encryptionKey?: string | undefined;
}
export interface GetTransformerRequest {
  logGroupIdentifier: string | undefined;
}
export interface Grok {
  source?: string | undefined;
  match: string | undefined;
}
export interface ListToMap {
  source: string | undefined;
  key: string | undefined;
  valueKey?: string | undefined;
  target?: string | undefined;
  flatten?: boolean | undefined;
  flattenedElement?: FlattenedElement | undefined;
}
export interface LowerCaseString {
  withKeys: string[] | undefined;
}
export interface MoveKeyEntry {
  source: string | undefined;
  target: string | undefined;
  overwriteIfExists?: boolean | undefined;
}
export interface MoveKeys {
  entries: MoveKeyEntry[] | undefined;
}
export interface ParseCloudfront {
  source?: string | undefined;
}
export interface ParseJSON {
  source?: string | undefined;
  destination?: string | undefined;
}
export interface ParseKeyValue {
  source?: string | undefined;
  destination?: string | undefined;
  fieldDelimiter?: string | undefined;
  keyValueDelimiter?: string | undefined;
  keyPrefix?: string | undefined;
  nonMatchValue?: string | undefined;
  overwriteIfExists?: boolean | undefined;
}
export interface ParsePostgres {
  source?: string | undefined;
}
export interface ParseRoute53 {
  source?: string | undefined;
}
export declare const OCSFVersion: {
  readonly V1_1: "V1.1";
};
export type OCSFVersion = (typeof OCSFVersion)[keyof typeof OCSFVersion];
export interface ParseToOCSF {
  source?: string | undefined;
  eventSource: EventSource | undefined;
  ocsfVersion: OCSFVersion | undefined;
}
export interface ParseVPC {
  source?: string | undefined;
}
export interface ParseWAF {
  source?: string | undefined;
}
export interface RenameKeyEntry {
  key: string | undefined;
  renameTo: string | undefined;
  overwriteIfExists?: boolean | undefined;
}
export interface RenameKeys {
  entries: RenameKeyEntry[] | undefined;
}
export interface SplitStringEntry {
  source: string | undefined;
  delimiter: string | undefined;
}
export interface SplitString {
  entries: SplitStringEntry[] | undefined;
}
export interface SubstituteStringEntry {
  source: string | undefined;
  from: string | undefined;
  to: string | undefined;
}
export interface SubstituteString {
  entries: SubstituteStringEntry[] | undefined;
}
export interface TrimString {
  withKeys: string[] | undefined;
}
export declare const Type: {
  readonly BOOLEAN: "boolean";
  readonly DOUBLE: "double";
  readonly INTEGER: "integer";
  readonly STRING: "string";
};
export type Type = (typeof Type)[keyof typeof Type];
export interface TypeConverterEntry {
  key: string | undefined;
  type: Type | undefined;
}
export interface TypeConverter {
  entries: TypeConverterEntry[] | undefined;
}
export interface UpperCaseString {
  withKeys: string[] | undefined;
}
export interface Processor {
  addKeys?: AddKeys | undefined;
  copyValue?: CopyValue | undefined;
  csv?: CSV | undefined;
  dateTimeConverter?: DateTimeConverter | undefined;
  deleteKeys?: DeleteKeys | undefined;
  grok?: Grok | undefined;
  listToMap?: ListToMap | undefined;
  lowerCaseString?: LowerCaseString | undefined;
  moveKeys?: MoveKeys | undefined;
  parseCloudfront?: ParseCloudfront | undefined;
  parseJSON?: ParseJSON | undefined;
  parseKeyValue?: ParseKeyValue | undefined;
  parseRoute53?: ParseRoute53 | undefined;
  parseToOCSF?: ParseToOCSF | undefined;
  parsePostgres?: ParsePostgres | undefined;
  parseVPC?: ParseVPC | undefined;
  parseWAF?: ParseWAF | undefined;
  renameKeys?: RenameKeys | undefined;
  splitString?: SplitString | undefined;
  substituteString?: SubstituteString | undefined;
  trimString?: TrimString | undefined;
  typeConverter?: TypeConverter | undefined;
  upperCaseString?: UpperCaseString | undefined;
}
export interface GetTransformerResponse {
  logGroupIdentifier?: string | undefined;
  creationTime?: number | undefined;
  lastModifiedTime?: number | undefined;
  transformerConfig?: Processor[] | undefined;
}
export interface InputLogEvent {
  timestamp: number | undefined;
  message: string | undefined;
}
export interface IntegrationSummary {
  integrationName?: string | undefined;
  integrationType?: IntegrationType | undefined;
  integrationStatus?: IntegrationStatus | undefined;
}
export declare class InvalidSequenceTokenException extends __BaseException {
  readonly name: "InvalidSequenceTokenException";
  readonly $fault: "client";
  expectedSequenceToken?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidSequenceTokenException, __BaseException>
  );
}
export declare const SuppressionState: {
  readonly SUPPRESSED: "SUPPRESSED";
  readonly UNSUPPRESSED: "UNSUPPRESSED";
};
export type SuppressionState =
  (typeof SuppressionState)[keyof typeof SuppressionState];
export interface ListAnomaliesRequest {
  anomalyDetectorArn?: string | undefined;
  suppressionState?: SuppressionState | undefined;
  limit?: number | undefined;
  nextToken?: string | undefined;
}
export interface ListAnomaliesResponse {
  anomalies?: Anomaly[] | undefined;
  nextToken?: string | undefined;
}
export interface ListIntegrationsRequest {
  integrationNamePrefix?: string | undefined;
  integrationType?: IntegrationType | undefined;
  integrationStatus?: IntegrationStatus | undefined;
}
export interface ListIntegrationsResponse {
  integrationSummaries?: IntegrationSummary[] | undefined;
}
export interface ListLogAnomalyDetectorsRequest {
  filterLogGroupArn?: string | undefined;
  limit?: number | undefined;
  nextToken?: string | undefined;
}
export interface ListLogAnomalyDetectorsResponse {
  anomalyDetectors?: AnomalyDetector[] | undefined;
  nextToken?: string | undefined;
}
export interface ListLogGroupsRequest {
  logGroupNamePattern?: string | undefined;
  logGroupClass?: LogGroupClass | undefined;
  includeLinkedAccounts?: boolean | undefined;
  accountIdentifiers?: string[] | undefined;
  nextToken?: string | undefined;
  limit?: number | undefined;
}
export interface LogGroupSummary {
  logGroupName?: string | undefined;
  logGroupArn?: string | undefined;
  logGroupClass?: LogGroupClass | undefined;
}
export interface ListLogGroupsResponse {
  logGroups?: LogGroupSummary[] | undefined;
  nextToken?: string | undefined;
}
export interface ListLogGroupsForQueryRequest {
  queryId: string | undefined;
  nextToken?: string | undefined;
  maxResults?: number | undefined;
}
export interface ListLogGroupsForQueryResponse {
  logGroupIdentifiers?: string[] | undefined;
  nextToken?: string | undefined;
}
export interface ListTagsForResourceRequest {
  resourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  tags?: Record<string, string> | undefined;
}
export interface ListTagsLogGroupRequest {
  logGroupName: string | undefined;
}
export interface ListTagsLogGroupResponse {
  tags?: Record<string, string> | undefined;
}
export interface LiveTailSessionLogEvent {
  logStreamName?: string | undefined;
  logGroupIdentifier?: string | undefined;
  message?: string | undefined;
  timestamp?: number | undefined;
  ingestionTime?: number | undefined;
}
export interface LiveTailSessionMetadata {
  sampled?: boolean | undefined;
}
export interface LiveTailSessionStart {
  requestId?: string | undefined;
  sessionId?: string | undefined;
  logGroupIdentifiers?: string[] | undefined;
  logStreamNames?: string[] | undefined;
  logStreamNamePrefixes?: string[] | undefined;
  logEventFilterPattern?: string | undefined;
}
export interface LiveTailSessionUpdate {
  sessionMetadata?: LiveTailSessionMetadata | undefined;
  sessionResults?: LiveTailSessionLogEvent[] | undefined;
}
export interface PutAccountPolicyRequest {
  policyName: string | undefined;
  policyDocument: string | undefined;
  policyType: PolicyType | undefined;
  scope?: Scope | undefined;
  selectionCriteria?: string | undefined;
}
export interface PutAccountPolicyResponse {
  accountPolicy?: AccountPolicy | undefined;
}
export interface PutDataProtectionPolicyRequest {
  logGroupIdentifier: string | undefined;
  policyDocument: string | undefined;
}
export interface PutDataProtectionPolicyResponse {
  logGroupIdentifier?: string | undefined;
  policyDocument?: string | undefined;
  lastUpdatedTime?: number | undefined;
}
export interface PutDeliveryDestinationRequest {
  name: string | undefined;
  outputFormat?: OutputFormat | undefined;
  deliveryDestinationConfiguration?:
    | DeliveryDestinationConfiguration
    | undefined;
  deliveryDestinationType?: DeliveryDestinationType | undefined;
  tags?: Record<string, string> | undefined;
}
export interface PutDeliveryDestinationResponse {
  deliveryDestination?: DeliveryDestination | undefined;
}
export interface PutDeliveryDestinationPolicyRequest {
  deliveryDestinationName: string | undefined;
  deliveryDestinationPolicy: string | undefined;
}
export interface PutDeliveryDestinationPolicyResponse {
  policy?: Policy | undefined;
}
export interface PutDeliverySourceRequest {
  name: string | undefined;
  resourceArn: string | undefined;
  logType: string | undefined;
  tags?: Record<string, string> | undefined;
}
export interface PutDeliverySourceResponse {
  deliverySource?: DeliverySource | undefined;
}
export interface PutDestinationRequest {
  destinationName: string | undefined;
  targetArn: string | undefined;
  roleArn: string | undefined;
  tags?: Record<string, string> | undefined;
}
export interface PutDestinationResponse {
  destination?: Destination | undefined;
}
export interface PutDestinationPolicyRequest {
  destinationName: string | undefined;
  accessPolicy: string | undefined;
  forceUpdate?: boolean | undefined;
}
export interface PutIndexPolicyRequest {
  logGroupIdentifier: string | undefined;
  policyDocument: string | undefined;
}
export interface PutIndexPolicyResponse {
  indexPolicy?: IndexPolicy | undefined;
}
export interface OpenSearchResourceConfig {
  kmsKeyArn?: string | undefined;
  dataSourceRoleArn: string | undefined;
  dashboardViewerPrincipals: string[] | undefined;
  applicationArn?: string | undefined;
  retentionDays: number | undefined;
}
export type ResourceConfig =
  | ResourceConfig.OpenSearchResourceConfigMember
  | ResourceConfig.$UnknownMember;
export declare namespace ResourceConfig {
  interface OpenSearchResourceConfigMember {
    openSearchResourceConfig: OpenSearchResourceConfig;
    $unknown?: never;
  }
  interface $UnknownMember {
    openSearchResourceConfig?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    openSearchResourceConfig: (value: OpenSearchResourceConfig) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: ResourceConfig, visitor: Visitor<T>) => T;
}
export interface PutIntegrationRequest {
  integrationName: string | undefined;
  resourceConfig: ResourceConfig | undefined;
  integrationType: IntegrationType | undefined;
}
export interface PutIntegrationResponse {
  integrationName?: string | undefined;
  integrationStatus?: IntegrationStatus | undefined;
}
export interface PutLogEventsRequest {
  logGroupName: string | undefined;
  logStreamName: string | undefined;
  logEvents: InputLogEvent[] | undefined;
  sequenceToken?: string | undefined;
  entity?: Entity | undefined;
}
export interface RejectedEntityInfo {
  errorType: EntityRejectionErrorType | undefined;
}
export interface RejectedLogEventsInfo {
  tooNewLogEventStartIndex?: number | undefined;
  tooOldLogEventEndIndex?: number | undefined;
  expiredLogEventEndIndex?: number | undefined;
}
export interface PutLogEventsResponse {
  nextSequenceToken?: string | undefined;
  rejectedLogEventsInfo?: RejectedLogEventsInfo | undefined;
  rejectedEntityInfo?: RejectedEntityInfo | undefined;
}
export declare class UnrecognizedClientException extends __BaseException {
  readonly name: "UnrecognizedClientException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<UnrecognizedClientException, __BaseException>
  );
}
export interface PutMetricFilterRequest {
  logGroupName: string | undefined;
  filterName: string | undefined;
  filterPattern: string | undefined;
  metricTransformations: MetricTransformation[] | undefined;
  applyOnTransformedLogs?: boolean | undefined;
}
export interface PutQueryDefinitionRequest {
  queryLanguage?: QueryLanguage | undefined;
  name: string | undefined;
  queryDefinitionId?: string | undefined;
  logGroupNames?: string[] | undefined;
  queryString: string | undefined;
  clientToken?: string | undefined;
}
export interface PutQueryDefinitionResponse {
  queryDefinitionId?: string | undefined;
}
export interface PutResourcePolicyRequest {
  policyName?: string | undefined;
  policyDocument?: string | undefined;
  resourceArn?: string | undefined;
  expectedRevisionId?: string | undefined;
}
export interface PutResourcePolicyResponse {
  resourcePolicy?: ResourcePolicy | undefined;
  revisionId?: string | undefined;
}
export interface PutRetentionPolicyRequest {
  logGroupName: string | undefined;
  retentionInDays: number | undefined;
}
export interface PutSubscriptionFilterRequest {
  logGroupName: string | undefined;
  filterName: string | undefined;
  filterPattern: string | undefined;
  destinationArn: string | undefined;
  roleArn?: string | undefined;
  distribution?: Distribution | undefined;
  applyOnTransformedLogs?: boolean | undefined;
}
export interface PutTransformerRequest {
  logGroupIdentifier: string | undefined;
  transformerConfig: Processor[] | undefined;
}
export interface StartLiveTailRequest {
  logGroupIdentifiers: string[] | undefined;
  logStreamNames?: string[] | undefined;
  logStreamNamePrefixes?: string[] | undefined;
  logEventFilterPattern?: string | undefined;
}
export declare class SessionStreamingException extends __BaseException {
  readonly name: "SessionStreamingException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<SessionStreamingException, __BaseException>
  );
}
export declare class SessionTimeoutException extends __BaseException {
  readonly name: "SessionTimeoutException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<SessionTimeoutException, __BaseException>
  );
}
export type StartLiveTailResponseStream =
  | StartLiveTailResponseStream.SessionStreamingExceptionMember
  | StartLiveTailResponseStream.SessionTimeoutExceptionMember
  | StartLiveTailResponseStream.SessionStartMember
  | StartLiveTailResponseStream.SessionUpdateMember
  | StartLiveTailResponseStream.$UnknownMember;
export declare namespace StartLiveTailResponseStream {
  interface SessionStartMember {
    sessionStart: LiveTailSessionStart;
    sessionUpdate?: never;
    SessionTimeoutException?: never;
    SessionStreamingException?: never;
    $unknown?: never;
  }
  interface SessionUpdateMember {
    sessionStart?: never;
    sessionUpdate: LiveTailSessionUpdate;
    SessionTimeoutException?: never;
    SessionStreamingException?: never;
    $unknown?: never;
  }
  interface SessionTimeoutExceptionMember {
    sessionStart?: never;
    sessionUpdate?: never;
    SessionTimeoutException: SessionTimeoutException;
    SessionStreamingException?: never;
    $unknown?: never;
  }
  interface SessionStreamingExceptionMember {
    sessionStart?: never;
    sessionUpdate?: never;
    SessionTimeoutException?: never;
    SessionStreamingException: SessionStreamingException;
    $unknown?: never;
  }
  interface $UnknownMember {
    sessionStart?: never;
    sessionUpdate?: never;
    SessionTimeoutException?: never;
    SessionStreamingException?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    sessionStart: (value: LiveTailSessionStart) => T;
    sessionUpdate: (value: LiveTailSessionUpdate) => T;
    SessionTimeoutException: (value: SessionTimeoutException) => T;
    SessionStreamingException: (value: SessionStreamingException) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(
    value: StartLiveTailResponseStream,
    visitor: Visitor<T>
  ) => T;
}
export interface StartLiveTailResponse {
  responseStream?: AsyncIterable<StartLiveTailResponseStream> | undefined;
}
export interface QueryCompileErrorLocation {
  startCharOffset?: number | undefined;
  endCharOffset?: number | undefined;
}
export interface QueryCompileError {
  location?: QueryCompileErrorLocation | undefined;
  message?: string | undefined;
}
export declare class MalformedQueryException extends __BaseException {
  readonly name: "MalformedQueryException";
  readonly $fault: "client";
  queryCompileError?: QueryCompileError | undefined;
  constructor(
    opts: __ExceptionOptionType<MalformedQueryException, __BaseException>
  );
}
export interface StartQueryRequest {
  queryLanguage?: QueryLanguage | undefined;
  logGroupName?: string | undefined;
  logGroupNames?: string[] | undefined;
  logGroupIdentifiers?: string[] | undefined;
  startTime: number | undefined;
  endTime: number | undefined;
  queryString: string | undefined;
  limit?: number | undefined;
}
export interface StartQueryResponse {
  queryId?: string | undefined;
}
export interface StopQueryRequest {
  queryId: string | undefined;
}
export interface StopQueryResponse {
  success?: boolean | undefined;
}
export interface TagLogGroupRequest {
  logGroupName: string | undefined;
  tags: Record<string, string> | undefined;
}
export interface TagResourceRequest {
  resourceArn: string | undefined;
  tags: Record<string, string> | undefined;
}
export declare class TooManyTagsException extends __BaseException {
  readonly name: "TooManyTagsException";
  readonly $fault: "client";
  resourceName?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TooManyTagsException, __BaseException>
  );
}
export interface TestMetricFilterRequest {
  filterPattern: string | undefined;
  logEventMessages: string[] | undefined;
}
export interface MetricFilterMatchRecord {
  eventNumber?: number | undefined;
  eventMessage?: string | undefined;
  extractedValues?: Record<string, string> | undefined;
}
export interface TestMetricFilterResponse {
  matches?: MetricFilterMatchRecord[] | undefined;
}
export interface TestTransformerRequest {
  transformerConfig: Processor[] | undefined;
  logEventMessages: string[] | undefined;
}
export interface TransformedLogRecord {
  eventNumber?: number | undefined;
  eventMessage?: string | undefined;
  transformedEventMessage?: string | undefined;
}
export interface TestTransformerResponse {
  transformedLogs?: TransformedLogRecord[] | undefined;
}
export interface UntagLogGroupRequest {
  logGroupName: string | undefined;
  tags: string[] | undefined;
}
export interface UntagResourceRequest {
  resourceArn: string | undefined;
  tagKeys: string[] | undefined;
}
export declare const SuppressionUnit: {
  readonly HOURS: "HOURS";
  readonly MINUTES: "MINUTES";
  readonly SECONDS: "SECONDS";
};
export type SuppressionUnit =
  (typeof SuppressionUnit)[keyof typeof SuppressionUnit];
export interface SuppressionPeriod {
  value?: number | undefined;
  suppressionUnit?: SuppressionUnit | undefined;
}
export declare const SuppressionType: {
  readonly INFINITE: "INFINITE";
  readonly LIMITED: "LIMITED";
};
export type SuppressionType =
  (typeof SuppressionType)[keyof typeof SuppressionType];
export interface UpdateAnomalyRequest {
  anomalyId?: string | undefined;
  patternId?: string | undefined;
  anomalyDetectorArn: string | undefined;
  suppressionType?: SuppressionType | undefined;
  suppressionPeriod?: SuppressionPeriod | undefined;
  baseline?: boolean | undefined;
}
export interface UpdateDeliveryConfigurationRequest {
  id: string | undefined;
  recordFields?: string[] | undefined;
  fieldDelimiter?: string | undefined;
  s3DeliveryConfiguration?: S3DeliveryConfiguration | undefined;
}
export interface UpdateDeliveryConfigurationResponse {}
export interface UpdateLogAnomalyDetectorRequest {
  anomalyDetectorArn: string | undefined;
  evaluationFrequency?: EvaluationFrequency | undefined;
  filterPattern?: string | undefined;
  anomalyVisibilityTime?: number | undefined;
  enabled: boolean | undefined;
}
export declare const GetLogObjectResponseStreamFilterSensitiveLog: (
  obj: GetLogObjectResponseStream
) => any;
export declare const GetLogObjectResponseFilterSensitiveLog: (
  obj: GetLogObjectResponse
) => any;
export declare const StartLiveTailResponseStreamFilterSensitiveLog: (
  obj: StartLiveTailResponseStream
) => any;
export declare const StartLiveTailResponseFilterSensitiveLog: (
  obj: StartLiveTailResponse
) => any;
