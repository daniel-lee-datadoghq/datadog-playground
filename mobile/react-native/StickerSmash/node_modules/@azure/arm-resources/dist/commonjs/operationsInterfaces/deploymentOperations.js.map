{"version":3,"file":"deploymentOperations.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/deploymentOperations.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport {\n  DeploymentOperation,\n  DeploymentOperationsListAtScopeOptionalParams,\n  DeploymentOperationsListAtTenantScopeOptionalParams,\n  DeploymentOperationsListAtManagementGroupScopeOptionalParams,\n  DeploymentOperationsListAtSubscriptionScopeOptionalParams,\n  DeploymentOperationsListOptionalParams,\n  DeploymentOperationsGetAtScopeOptionalParams,\n  DeploymentOperationsGetAtScopeResponse,\n  DeploymentOperationsGetAtTenantScopeOptionalParams,\n  DeploymentOperationsGetAtTenantScopeResponse,\n  DeploymentOperationsGetAtManagementGroupScopeOptionalParams,\n  DeploymentOperationsGetAtManagementGroupScopeResponse,\n  DeploymentOperationsGetAtSubscriptionScopeOptionalParams,\n  DeploymentOperationsGetAtSubscriptionScopeResponse,\n  DeploymentOperationsGetOptionalParams,\n  DeploymentOperationsGetResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a DeploymentOperations. */\nexport interface DeploymentOperations {\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  listAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtScopeOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentOperation>;\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  listAtTenantScope(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtTenantScopeOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentOperation>;\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  listAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentOperation>;\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  listAtSubscriptionScope(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentOperation>;\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentOperation>;\n  /**\n   * Gets a deployments operation.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtScope(\n    scope: string,\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetAtScopeOptionalParams,\n  ): Promise<DeploymentOperationsGetAtScopeResponse>;\n  /**\n   * Gets a deployments operation.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtTenantScope(\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetAtTenantScopeOptionalParams,\n  ): Promise<DeploymentOperationsGetAtTenantScopeResponse>;\n  /**\n   * Gets a deployments operation.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetAtManagementGroupScopeOptionalParams,\n  ): Promise<DeploymentOperationsGetAtManagementGroupScopeResponse>;\n  /**\n   * Gets a deployments operation.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtSubscriptionScope(\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetAtSubscriptionScopeOptionalParams,\n  ): Promise<DeploymentOperationsGetAtSubscriptionScopeResponse>;\n  /**\n   * Gets a deployments operation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetOptionalParams,\n  ): Promise<DeploymentOperationsGetResponse>;\n}\n"]}