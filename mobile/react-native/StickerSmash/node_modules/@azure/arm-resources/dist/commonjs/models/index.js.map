{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/models/index.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;AAuzCH,oFAAoF;AACpF,IAAY,gCAeX;AAfD,WAAY,gCAAgC;IAC1C,iDAAiD;IACjD,qDAAiB,CAAA;IACjB,mDAAmD;IACnD,+CAAW,CAAA;IACX,kDAAkD;IAClD,iDAAa,CAAA;IACb,iDAAiD;IACjD,mDAAe,CAAA;IACf,kDAAkD;IAClD,qDAAiB,CAAA;IACjB,wDAAwD;IACxD,iEAA6B,CAAA;IAC7B,wDAAwD;IACxD,iEAA6B,CAAA;AAC/B,CAAC,EAfW,gCAAgC,gDAAhC,gCAAgC,QAe3C;AAiBD,6FAA6F;AAC7F,IAAY,yCAOX;AAPD,WAAY,yCAAyC;IACnD,mBAAmB;IACnB,0EAA6B,CAAA;IAC7B,YAAY;IACZ,4DAAe,CAAA;IACf,YAAY;IACZ,4DAAe,CAAA;AACjB,CAAC,EAPW,yCAAyC,yDAAzC,yCAAyC,QAOpD;AAaD,wEAAwE;AACxE,IAAY,oBAOX;AAPD,WAAY,oBAAoB;IAC9B,oDAAoD;IACpD,6CAAqB,CAAA;IACrB,4MAA4M;IAC5M,6CAAqB,CAAA;IACrB,mNAAmN;IACnN,yDAAiC,CAAA;AACnC,CAAC,EAPW,oBAAoB,oCAApB,oBAAoB,QAO/B;AAaD,0EAA0E;AAC1E,IAAY,sBAyBX;AAzBD,WAAY,sBAAsB;IAChC,mBAAmB;IACnB,uDAA6B,CAAA;IAC7B,eAAe;IACf,+CAAqB,CAAA;IACrB,cAAc;IACd,6CAAmB,CAAA;IACnB,YAAY;IACZ,yCAAe,CAAA;IACf,eAAe;IACf,+CAAqB,CAAA;IACrB,cAAc;IACd,6CAAmB,CAAA;IACnB,eAAe;IACf,+CAAqB,CAAA;IACrB,cAAc;IACd,6CAAmB,CAAA;IACnB,eAAe;IACf,+CAAqB,CAAA;IACrB,aAAa;IACb,2CAAiB,CAAA;IACjB,gBAAgB;IAChB,iDAAuB,CAAA;IACvB,eAAe;IACf,+CAAqB,CAAA;AACvB,CAAC,EAzBW,sBAAsB,sCAAtB,sBAAsB,QAyBjC;AAsBD,2EAA2E;AAC3E,IAAY,uBAiBX;AAjBD,WAAY,uBAAuB;IACjC,uCAAuC;IACvC,wDAA6B,CAAA;IAC7B,sCAAsC;IACtC,sCAAW,CAAA;IACX,gCAAgC;IAChC,4CAAiB,CAAA;IACjB,gCAAgC;IAChC,4CAAiB,CAAA;IACjB,+BAA+B;IAC/B,0CAAe,CAAA;IACf,iCAAiC;IACjC,8CAAmB,CAAA;IACnB,gCAAgC;IAChC,4CAAiB,CAAA;IACjB,iCAAiC;IACjC,8CAAmB,CAAA;AACrB,CAAC,EAjBW,uBAAuB,uCAAvB,uBAAuB,QAiBlC;AAkBD,4EAA4E;AAC5E,IAAY,wBAKX;AALD,WAAY,wBAAwB;IAClC,uEAAuE;IACvE,yCAAa,CAAA;IACb,oGAAoG;IACpG,qDAAyB,CAAA;AAC3B,CAAC,EALW,wBAAwB,wCAAxB,wBAAwB,QAKnC;AAYD,0FAA0F;AAC1F,IAAY,sCASX;AATD,WAAY,sCAAsC;IAChD,mBAAmB;IACnB,uEAA6B,CAAA;IAC7B,eAAe;IACf,+DAAqB,CAAA;IACrB,kBAAkB;IAClB,qEAA2B,CAAA;IAC3B,gBAAgB;IAChB,iEAAuB,CAAA;AACzB,CAAC,EATW,sCAAsC,sDAAtC,sCAAsC,QASjD;AAcD,8DAA8D;AAC9D,IAAY,UAOX;AAPD,WAAY,UAAU;IACpB,cAAc;IACd,iCAAmB,CAAA;IACnB,WAAW;IACX,2BAAa,CAAA;IACb,YAAY;IACZ,6BAAe,CAAA;AACjB,CAAC,EAPW,UAAU,0BAAV,UAAU,QAOrB;AAaD,6EAA6E;AAC7E,IAAY,yBAGX;AAHD,WAAY,yBAAyB;IACnC,eAAe;IACf,kDAAqB,CAAA;AACvB,CAAC,EAHW,yBAAyB,yCAAzB,yBAAyB,QAGpC;AAWD,mFAAmF;AACnF,IAAY,+BAKX;AALD,WAAY,+BAA+B;IACzC,WAAW;IACX,gDAAa,CAAA;IACb,YAAY;IACZ,kDAAe,CAAA;AACjB,CAAC,EALW,+BAA+B,+CAA/B,+BAA+B,QAK1C;AAYD,2EAA2E;AAC3E,IAAY,uBAOX;AAPD,WAAY,uBAAuB;IACjC,oFAAoF;IACpF,8CAAmB,CAAA;IACnB,gHAAgH;IAChH,0CAAe,CAAA;IACf,sGAAsG;IACtG,4CAAiB,CAAA;AACnB,CAAC,EAPW,uBAAuB,uCAAvB,uBAAuB,QAOlC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** Result of the request to list Microsoft.Resources operations. It contains a list of operations and a URL link to get the next set of results. */\nexport interface OperationListResult {\n  /** List of Microsoft.Resources operations. */\n  value?: Operation[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** Microsoft.Resources operation */\nexport interface Operation {\n  /** Operation name: {provider}/{resource}/{operation} */\n  name?: string;\n  /** The object that represents the operation. */\n  display?: OperationDisplay;\n}\n\n/** The object that represents the operation. */\nexport interface OperationDisplay {\n  /** Service provider: Microsoft.Resources */\n  provider?: string;\n  /** Resource on which the operation is performed: Profile, endpoint, etc. */\n  resource?: string;\n  /** Operation type: Read, write, delete, etc. */\n  operation?: string;\n  /** Description of the operation. */\n  description?: string;\n}\n\n/** An error response for a resource management request. */\nexport interface CloudError {\n  /** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.) */\n  error?: ErrorResponse;\n}\n\n/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.) */\nexport interface ErrorResponse {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ErrorResponse[];\n  /**\n   * The error additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n}\n\n/** The resource management error additional info. */\nexport interface ErrorAdditionalInfo {\n  /**\n   * The additional info type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly info?: Record<string, unknown>;\n}\n\n/** Deployment operation parameters. */\nexport interface Deployment {\n  /** The location to store the deployment data. */\n  location?: string;\n  /** The deployment properties. */\n  properties: DeploymentProperties;\n  /** Deployment tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Deployment properties. */\nexport interface DeploymentProperties {\n  /** The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both. */\n  template?: Record<string, unknown>;\n  /** The URI of the template. Use either the templateLink property or the template property, but not both. */\n  templateLink?: TemplateLink;\n  /** Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string. */\n  parameters?: { [propertyName: string]: DeploymentParameter };\n  /** The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both. */\n  parametersLink?: ParametersLink;\n  /** The configurations to use for deployment extensions. The keys of this object are deployment extension aliases as defined in the deployment template. */\n  extensionConfigs?: {\n    [propertyName: string]: {\n      [propertyName: string]: DeploymentExtensionConfigItem;\n    };\n  };\n  /** The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources. */\n  mode: DeploymentMode;\n  /** The debug setting of the deployment. */\n  debugSetting?: DebugSetting;\n  /** The deployment on error behavior. */\n  onErrorDeployment?: OnErrorDeployment;\n  /** Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer. */\n  expressionEvaluationOptions?: ExpressionEvaluationOptions;\n  /** The validation level of the deployment */\n  validationLevel?: ValidationLevel;\n}\n\n/** Entity representing the reference to the template. */\nexport interface TemplateLink {\n  /** The URI of the template to deploy. Use either the uri or id property, but not both. */\n  uri?: string;\n  /** The resource id of a Template Spec. Use either the id or uri property, but not both. */\n  id?: string;\n  /** The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs */\n  relativePath?: string;\n  /** If included, must match the ContentVersion in the template. */\n  contentVersion?: string;\n  /** The query string (for example, a SAS token) to be used with the templateLink URI. */\n  queryString?: string;\n}\n\n/** Deployment parameter for the template. */\nexport interface DeploymentParameter {\n  /** Input value to the parameter . */\n  value?: any;\n  /** Azure Key Vault parameter reference. */\n  reference?: KeyVaultParameterReference;\n}\n\n/** Azure Key Vault parameter reference. */\nexport interface KeyVaultParameterReference {\n  /** Azure Key Vault reference. */\n  keyVault: KeyVaultReference;\n  /** Azure Key Vault secret name. */\n  secretName: string;\n  /** Azure Key Vault secret version. */\n  secretVersion?: string;\n}\n\n/** Azure Key Vault reference. */\nexport interface KeyVaultReference {\n  /** Azure Key Vault resource id. */\n  id: string;\n}\n\n/** Entity representing the reference to the deployment parameters. */\nexport interface ParametersLink {\n  /** The URI of the parameters file. */\n  uri: string;\n  /** If included, must match the ContentVersion in the template. */\n  contentVersion?: string;\n}\n\nexport interface DeploymentExtensionConfigItem {\n  /**\n   * The value type of the extension config property.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: ExtensionConfigPropertyType;\n  /** The value of the extension config property. */\n  value?: any;\n  /** The Azure Key Vault reference used to retrieve the secret value of the extension config property. */\n  keyVaultReference?: KeyVaultParameterReference;\n}\n\n/** The debug setting. */\nexport interface DebugSetting {\n  /** Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations. */\n  detailLevel?: string;\n}\n\n/** Deployment on error behavior. */\nexport interface OnErrorDeployment {\n  /** The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment. */\n  type?: OnErrorDeploymentType;\n  /** The deployment to be used on error case. */\n  deploymentName?: string;\n}\n\n/** Specifies whether template expressions are evaluated within the scope of the parent template or nested template. */\nexport interface ExpressionEvaluationOptions {\n  /** The scope to be used for evaluation of parameters, variables and functions in a nested template. */\n  scope?: ExpressionEvaluationOptionsScopeType;\n}\n\n/** Deployment information. */\nexport interface DeploymentExtended {\n  /**\n   * The ID of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** the location of the deployment. */\n  location?: string;\n  /** Deployment properties. */\n  properties?: DeploymentPropertiesExtended;\n  /** Deployment tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Deployment properties with additional details. */\nexport interface DeploymentPropertiesExtended {\n  /**\n   * Denotes the state of provisioning.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * The correlation ID of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly correlationId?: string;\n  /**\n   * The timestamp of the template deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timestamp?: Date;\n  /**\n   * The duration of the template deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly duration?: string;\n  /**\n   * Key/value pairs that represent deployment output.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly outputs?: Record<string, unknown>;\n  /**\n   * The list of resource providers needed for the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly providers?: Provider[];\n  /**\n   * The list of deployment dependencies.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dependencies?: Dependency[];\n  /**\n   * The URI referencing the template.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly templateLink?: TemplateLink;\n  /**\n   * Deployment parameters.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly parameters?: Record<string, unknown>;\n  /**\n   * The URI referencing the parameters.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly parametersLink?: ParametersLink;\n  /**\n   * The extensions used in this deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly extensions?: DeploymentExtensionDefinition[];\n  /**\n   * The deployment mode. Possible values are Incremental and Complete.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly mode?: DeploymentMode;\n  /**\n   * The debug setting of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly debugSetting?: DebugSetting;\n  /**\n   * The deployment on error behavior.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly onErrorDeployment?: OnErrorDeploymentExtended;\n  /**\n   * The hash produced for the template.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly templateHash?: string;\n  /**\n   * Array of provisioned resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly outputResources?: ResourceReference[];\n  /**\n   * Array of validated resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly validatedResources?: ResourceReference[];\n  /**\n   * The deployment error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly error?: ErrorResponse;\n  /**\n   * Contains diagnostic information collected during validation process.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly diagnostics?: DeploymentDiagnosticsDefinition[];\n  /** The validation level of the deployment */\n  validationLevel?: ValidationLevel;\n}\n\n/** Resource provider information. */\nexport interface Provider {\n  /**\n   * The provider ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** The namespace of the resource provider. */\n  namespace?: string;\n  /**\n   * The registration state of the resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly registrationState?: string;\n  /**\n   * The registration policy of the resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly registrationPolicy?: string;\n  /**\n   * The collection of provider resource types.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceTypes?: ProviderResourceType[];\n  /** The provider authorization consent state. */\n  providerAuthorizationConsentState?: ProviderAuthorizationConsentState;\n}\n\n/** Resource type managed by the resource provider. */\nexport interface ProviderResourceType {\n  /** The resource type. */\n  resourceType?: string;\n  /** The collection of locations where this resource type can be created. */\n  locations?: string[];\n  /** The location mappings that are supported by this resource type. */\n  locationMappings?: ProviderExtendedLocation[];\n  /** The aliases that are supported by this resource type. */\n  aliases?: Alias[];\n  /** The API version. */\n  apiVersions?: string[];\n  /**\n   * The default API version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultApiVersion?: string;\n  zoneMappings?: ZoneMapping[];\n  /**\n   * The API profiles for the resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly apiProfiles?: ApiProfile[];\n  /** The additional capabilities offered by this resource type. */\n  capabilities?: string;\n  /** The properties. */\n  properties?: { [propertyName: string]: string };\n}\n\n/** The provider extended location. */\nexport interface ProviderExtendedLocation {\n  /** The azure location. */\n  location?: string;\n  /** The extended location type. */\n  type?: string;\n  /** The extended locations for the azure location. */\n  extendedLocations?: string[];\n}\n\n/** The alias type. */\nexport interface Alias {\n  /** The alias name. */\n  name?: string;\n  /** The paths for an alias. */\n  paths?: AliasPath[];\n  /** The type of the alias. */\n  type?: AliasType;\n  /** The default path for an alias. */\n  defaultPath?: string;\n  /** The default pattern for an alias. */\n  defaultPattern?: AliasPattern;\n  /**\n   * The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultMetadata?: AliasPathMetadata;\n}\n\n/** The type of the paths for alias. */\nexport interface AliasPath {\n  /** The path of an alias. */\n  path?: string;\n  /** The API versions. */\n  apiVersions?: string[];\n  /** The pattern for an alias path. */\n  pattern?: AliasPattern;\n  /**\n   * The metadata of the alias path. If missing, fall back to the default metadata of the alias.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly metadata?: AliasPathMetadata;\n}\n\n/** The type of the pattern for an alias path. */\nexport interface AliasPattern {\n  /** The alias pattern phrase. */\n  phrase?: string;\n  /** The alias pattern variable. */\n  variable?: string;\n  /** The type of alias pattern */\n  type?: AliasPatternType;\n}\n\nexport interface AliasPathMetadata {\n  /**\n   * The type of the token that the alias path is referring to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: AliasPathTokenType;\n  /**\n   * The attributes of the token that the alias path is referring to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly attributes?: AliasPathAttributes;\n}\n\nexport interface ZoneMapping {\n  /** The location of the zone mapping. */\n  location?: string;\n  zones?: string[];\n}\n\nexport interface ApiProfile {\n  /**\n   * The profile version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profileVersion?: string;\n  /**\n   * The API version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly apiVersion?: string;\n}\n\n/** Deployment dependency information. */\nexport interface Dependency {\n  /** The list of dependencies. */\n  dependsOn?: BasicDependency[];\n  /** The ID of the dependency. */\n  id?: string;\n  /** The dependency resource type. */\n  resourceType?: string;\n  /** The dependency resource name. */\n  resourceName?: string;\n}\n\n/** Deployment dependency information. */\nexport interface BasicDependency {\n  /** The ID of the dependency. */\n  id?: string;\n  /** The dependency resource type. */\n  resourceType?: string;\n  /** The dependency resource name. */\n  resourceName?: string;\n}\n\nexport interface DeploymentExtensionDefinition {\n  /**\n   * The alias of the extension as defined in the deployment template.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly alias?: string;\n  /**\n   * The extension name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The extension version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /**\n   * The extension configuration ID. It uniquely identifies a deployment control plane within an extension.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly configId?: string;\n  /**\n   * The extension configuration.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly config?: { [propertyName: string]: DeploymentExtensionConfigItem };\n}\n\n/** Deployment on error behavior with additional details. */\nexport interface OnErrorDeploymentExtended {\n  /**\n   * The state of the provisioning for the on error deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /** The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment. */\n  type?: OnErrorDeploymentType;\n  /** The deployment to be used on error case. */\n  deploymentName?: string;\n}\n\n/** The resource Id model. */\nexport interface ResourceReference {\n  /**\n   * The fully qualified Azure resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The key of the extension the resource was deployed with.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly extension?: DeploymentExtensionDefinition;\n  /**\n   * The resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceType?: string;\n  /**\n   * The extensible resource identifiers.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly identifiers?: Record<string, unknown>;\n  /**\n   * The API version the resource was deployed with.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly apiVersion?: string;\n}\n\nexport interface DeploymentDiagnosticsDefinition {\n  /**\n   * Denotes the additional response level.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly level: Level;\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * The error additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n}\n\n/** Information from validate template deployment response. */\nexport interface DeploymentValidateResult {\n  /**\n   * The deployment validation error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly error?: ErrorResponse;\n  /**\n   * The ID of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The template deployment properties. */\n  properties?: DeploymentPropertiesExtended;\n}\n\n/** The deployment export result. */\nexport interface DeploymentExportResult {\n  /** The template content. */\n  template?: Record<string, unknown>;\n}\n\n/** List of deployments. */\nexport interface DeploymentListResult {\n  /** An array of deployments. */\n  value?: DeploymentExtended[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Deployment operation parameters. */\nexport interface ScopedDeployment {\n  /** The location to store the deployment data. */\n  location: string;\n  /** The deployment properties. */\n  properties: DeploymentProperties;\n  /** Deployment tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Deployment What-if operation parameters. */\nexport interface ScopedDeploymentWhatIf {\n  /** The location to store the deployment data. */\n  location: string;\n  /** The deployment properties. */\n  properties: DeploymentWhatIfProperties;\n}\n\n/** Deployment What-If operation settings. */\nexport interface DeploymentWhatIfSettings {\n  /** The format of the What-If results */\n  resultFormat?: WhatIfResultFormat;\n}\n\n/** Result of the What-If operation. Contains a list of predicted changes and a URL link to get to the next set of results. */\nexport interface WhatIfOperationResult {\n  /** Status of the What-If operation. */\n  status?: string;\n  /** Error when What-If operation fails. */\n  error?: ErrorResponse;\n  /** List of resource changes predicted by What-If operation. */\n  changes?: WhatIfChange[];\n  /** List of resource changes predicted by What-If operation. */\n  potentialChanges?: WhatIfChange[];\n  /**\n   * List of resource diagnostics detected by What-If operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly diagnostics?: DeploymentDiagnosticsDefinition[];\n}\n\n/** Information about a single resource change predicted by What-If operation. */\nexport interface WhatIfChange {\n  /** Resource ID */\n  resourceId?: string;\n  /** The resource id of the Deployment responsible for this change. */\n  deploymentId?: string;\n  /** The symbolic name of the resource responsible for this change. */\n  symbolicName?: string;\n  /** A subset of properties that uniquely identify a Bicep extensible resource because it lacks a resource id like an Azure resource has. */\n  identifiers?: Record<string, unknown>;\n  /** Type of change that will be made to the resource when the deployment is executed. */\n  changeType: ChangeType;\n  /** The explanation about why the resource is unsupported by What-If. */\n  unsupportedReason?: string;\n  /** The snapshot of the resource before the deployment is executed. */\n  before?: Record<string, unknown>;\n  /** The predicted snapshot of the resource after the deployment is executed. */\n  after?: Record<string, unknown>;\n  /** The predicted changes to resource properties. */\n  delta?: WhatIfPropertyChange[];\n}\n\n/** The predicted change to the resource property. */\nexport interface WhatIfPropertyChange {\n  /** The path of the property. */\n  path: string;\n  /** The type of property change. */\n  propertyChangeType: PropertyChangeType;\n  /** The value of the property before the deployment is executed. */\n  before?: Record<string, unknown>;\n  /** The value of the property after the deployment is executed. */\n  after?: Record<string, unknown>;\n  /** Nested property changes. */\n  children?: WhatIfPropertyChange[];\n}\n\n/** Deployment What-if operation parameters. */\nexport interface DeploymentWhatIf {\n  /** The location to store the deployment data. */\n  location?: string;\n  /** The deployment properties. */\n  properties: DeploymentWhatIfProperties;\n}\n\n/** List of provider permissions. */\nexport interface ProviderPermissionListResult {\n  /** An array of provider permissions. */\n  value?: ProviderPermission[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The provider permission */\nexport interface ProviderPermission {\n  /** The application id. */\n  applicationId?: string;\n  /** Role definition properties. */\n  roleDefinition?: RoleDefinition;\n  /** Role definition properties. */\n  managedByRoleDefinition?: RoleDefinition;\n  /** The provider authorization consent state. */\n  providerAuthorizationConsentState?: ProviderAuthorizationConsentState;\n}\n\n/** Role definition properties. */\nexport interface RoleDefinition {\n  /** The role definition ID. */\n  id?: string;\n  /** The role definition name. */\n  name?: string;\n  /** If this is a service role. */\n  isServiceRole?: boolean;\n  /** Role definition permissions. */\n  permissions?: Permission[];\n  /** Role definition assignable scopes. */\n  scopes?: string[];\n}\n\n/** Role definition permissions. */\nexport interface Permission {\n  /** Allowed actions. */\n  actions?: string[];\n  /** Denied actions. */\n  notActions?: string[];\n  /** Allowed Data actions. */\n  dataActions?: string[];\n  /** Denied Data actions. */\n  notDataActions?: string[];\n}\n\n/** The provider registration definition. */\nexport interface ProviderRegistrationRequest {\n  /** The provider consent. */\n  thirdPartyProviderConsent?: ProviderConsentDefinition;\n}\n\n/** The provider consent. */\nexport interface ProviderConsentDefinition {\n  /** A value indicating whether authorization is consented or not. */\n  consentToAuthorization?: boolean;\n}\n\n/** List of resource providers. */\nexport interface ProviderListResult {\n  /** An array of resource providers. */\n  value?: Provider[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** List of resource types of a resource provider. */\nexport interface ProviderResourceTypeListResult {\n  /** An array of resource types. */\n  value?: ProviderResourceType[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** List of resource groups. */\nexport interface ResourceListResult {\n  /** An array of resources. */\n  value?: GenericResourceExpanded[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Plan for the resource. */\nexport interface Plan {\n  /** The plan ID. */\n  name?: string;\n  /** The publisher ID. */\n  publisher?: string;\n  /** The offer ID. */\n  product?: string;\n  /** The promotion code. */\n  promotionCode?: string;\n  /** The plan's version. */\n  version?: string;\n}\n\n/** SKU for the resource. */\nexport interface Sku {\n  /** The SKU name. */\n  name?: string;\n  /** The SKU tier. */\n  tier?: string;\n  /** The SKU size. */\n  size?: string;\n  /** The SKU family. */\n  family?: string;\n  /** The SKU model. */\n  model?: string;\n  /** The SKU capacity. */\n  capacity?: number;\n}\n\n/** Identity for the resource. */\nexport interface Identity {\n  /**\n   * The principal ID of resource identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The tenant ID of resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** The identity type. */\n  type?: ResourceIdentityType;\n  /** The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'. */\n  userAssignedIdentities?: {\n    [propertyName: string]: IdentityUserAssignedIdentitiesValue;\n  };\n}\n\nexport interface IdentityUserAssignedIdentitiesValue {\n  /**\n   * The principal id of user assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The client id of user assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientId?: string;\n}\n\n/** Specified resource. */\nexport interface Resource {\n  /**\n   * Resource ID\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Resource location */\n  location?: string;\n  /** Resource extended location. */\n  extendedLocation?: ExtendedLocation;\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Resource extended location. */\nexport interface ExtendedLocation {\n  /** The extended location type. */\n  type?: ExtendedLocationType;\n  /** The extended location name. */\n  name?: string;\n}\n\n/** Resource group information. */\nexport interface ResourceGroup {\n  /**\n   * The ID of the resource group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The resource group properties. */\n  properties?: ResourceGroupProperties;\n  /** The location of the resource group. It cannot be changed after the resource group has been created. It must be one of the supported Azure locations. */\n  location: string;\n  /** The ID of the resource that manages this resource group. */\n  managedBy?: string;\n  /** The tags attached to the resource group. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** The resource group properties. */\nexport interface ResourceGroupProperties {\n  /**\n   * The provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n}\n\n/** Resource group information. */\nexport interface ResourceGroupPatchable {\n  /** The name of the resource group. */\n  name?: string;\n  /** The resource group properties. */\n  properties?: ResourceGroupProperties;\n  /** The ID of the resource that manages this resource group. */\n  managedBy?: string;\n  /** The tags attached to the resource group. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Export resource group template request parameters. */\nexport interface ExportTemplateRequest {\n  /** The IDs of the resources to filter the export by. To export all resources, supply an array with single entry '*'. */\n  resources?: string[];\n  /** The export template options. A CSV-formatted list containing zero or more of the following: 'IncludeParameterDefaultValue', 'IncludeComments', 'SkipResourceNameParameterization', 'SkipAllParameterization' */\n  options?: string;\n  /** The output format for the exported resources. */\n  outputFormat?: ExportTemplateOutputFormat;\n}\n\n/** Resource group export result. */\nexport interface ResourceGroupExportResult {\n  /** The template content. Used if outputFormat is empty or set to 'Json'. */\n  template?: Record<string, unknown>;\n  /** The formatted export content. Used if outputFormat is set to 'Bicep'. */\n  output?: string;\n  /** The template export error. */\n  error?: ErrorResponse;\n}\n\n/** List of resource groups. */\nexport interface ResourceGroupListResult {\n  /** An array of resource groups. */\n  value?: ResourceGroup[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Parameters of move resources. */\nexport interface ResourcesMoveInfo {\n  /** The IDs of the resources. */\n  resources?: string[];\n  /** The target resource group. */\n  targetResourceGroup?: string;\n}\n\n/** Tag information. */\nexport interface TagValue {\n  /**\n   * The tag value ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** The tag value. */\n  tagValue?: string;\n  /** The tag value count. */\n  count?: TagCount;\n}\n\n/** Tag count. */\nexport interface TagCount {\n  /** Type of count. */\n  type?: string;\n  /** Value of count. */\n  value?: number;\n}\n\n/** Tag details. */\nexport interface TagDetails {\n  /**\n   * The tag name ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** The tag name. */\n  tagName?: string;\n  /** The total number of resources that use the resource tag. When a tag is initially created and has no associated resources, the value is 0. */\n  count?: TagCount;\n  /** The list of tag values. */\n  values?: TagValue[];\n}\n\n/** List of subscription tags. */\nexport interface TagsListResult {\n  /** An array of tags. */\n  value?: TagDetails[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Deployment operation information. */\nexport interface DeploymentOperation {\n  /**\n   * Full deployment operation ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Deployment operation ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operationId?: string;\n  /** Deployment properties. */\n  properties?: DeploymentOperationProperties;\n}\n\n/** Deployment operation properties. */\nexport interface DeploymentOperationProperties {\n  /**\n   * The name of the current provisioning operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningOperation?: ProvisioningOperation;\n  /**\n   * The state of the provisioning.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * The date and time of the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timestamp?: Date;\n  /**\n   * The duration of the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly duration?: string;\n  /**\n   * Deployment operation service request id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceRequestId?: string;\n  /**\n   * Operation status code from the resource provider. This property may not be set if a response has not yet been received.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statusCode?: string;\n  /**\n   * Operation status message from the resource provider. This property is optional.  It will only be provided if an error was received from the resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statusMessage?: StatusMessage;\n  /**\n   * The target resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly targetResource?: TargetResource;\n  /**\n   * The HTTP request message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly request?: HttpMessage;\n  /**\n   * The HTTP response message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly response?: HttpMessage;\n}\n\n/** Operation status message object. */\nexport interface StatusMessage {\n  /** Status of the deployment operation. */\n  status?: string;\n  /** The error reported by the operation. */\n  error?: ErrorResponse;\n}\n\n/** Target resource. */\nexport interface TargetResource {\n  /** The Azure resource ID of the resource. */\n  id?: string;\n  /** The name of the resource. */\n  resourceName?: string;\n  /** The type of the resource. */\n  resourceType?: string;\n  /** The extension the resource was deployed with. */\n  extension?: DeploymentExtensionDefinition;\n  /** The extensible resource identifiers. */\n  identifiers?: Record<string, unknown>;\n  /** The API version the resource was deployed with. */\n  apiVersion?: string;\n  /** The symbolic name of the resource as defined in the deployment template. */\n  symbolicName?: string;\n}\n\n/** HTTP message. */\nexport interface HttpMessage {\n  /** HTTP message content. */\n  content?: Record<string, unknown>;\n}\n\n/** List of deployment operations. */\nexport interface DeploymentOperationsListResult {\n  /** An array of deployment operations. */\n  value?: DeploymentOperation[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Result of the request to calculate template hash. It contains a string of minified template and its hash. */\nexport interface TemplateHashResult {\n  /** The minified template string. */\n  minifiedTemplate?: string;\n  /** The template hash. */\n  templateHash?: string;\n}\n\n/** Wrapper resource for tags API requests and responses. */\nexport interface TagsResource {\n  /**\n   * The ID of the tags wrapper resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the tags wrapper resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the tags wrapper resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The set of tags. */\n  properties: Tags;\n}\n\n/** A dictionary of name and value pairs. */\nexport interface Tags {\n  /** Dictionary of <string> */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Wrapper resource for tags patch API request only. */\nexport interface TagsPatchResource {\n  /** The operation type for the patch API. */\n  operation?: TagsPatchOperation;\n  /** The set of tags. */\n  properties?: Tags;\n}\n\n/** Deployment filter. */\nexport interface DeploymentExtendedFilter {\n  /** The provisioning state. */\n  provisioningState?: string;\n}\n\n/** Resource filter. */\nexport interface GenericResourceFilter {\n  /** The resource type. */\n  resourceType?: string;\n  /** The tag name. */\n  tagname?: string;\n  /** The tag value. */\n  tagvalue?: string;\n}\n\n/** Resource group filter. */\nexport interface ResourceGroupFilter {\n  /** The tag name. */\n  tagName?: string;\n  /** The tag value. */\n  tagValue?: string;\n}\n\n/** Resource provider operation's display properties. */\nexport interface ResourceProviderOperationDisplayProperties {\n  /** Operation description. */\n  publisher?: string;\n  /** Operation provider. */\n  provider?: string;\n  /** Operation resource. */\n  resource?: string;\n  /** Resource provider operation. */\n  operation?: string;\n  /** Operation description. */\n  description?: string;\n}\n\n/** Sub-resource. */\nexport interface SubResource {\n  /** Resource ID */\n  id?: string;\n}\n\n/** Deployment What-if properties. */\nexport interface DeploymentWhatIfProperties extends DeploymentProperties {\n  /** Optional What-If operation settings. */\n  whatIfSettings?: DeploymentWhatIfSettings;\n}\n\n/** Resource information. */\nexport interface GenericResource extends Resource {\n  /** The plan of the resource. */\n  plan?: Plan;\n  /** The resource properties. */\n  properties?: Record<string, unknown>;\n  /** The kind of the resource. */\n  kind?: string;\n  /** ID of the resource that manages this resource. */\n  managedBy?: string;\n  /** The SKU of the resource. */\n  sku?: Sku;\n  /** The identity of the resource. */\n  identity?: Identity;\n}\n\n/** Resource information. */\nexport interface GenericResourceExpanded extends GenericResource {\n  /**\n   * The created time of the resource. This is only present if requested via the $expand query parameter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdTime?: Date;\n  /**\n   * The changed time of the resource. This is only present if requested via the $expand query parameter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly changedTime?: Date;\n  /**\n   * The provisioning state of the resource. This is only present if requested via the $expand query parameter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n}\n\n/** Defines headers for Deployments_whatIfAtTenantScope operation. */\nexport interface DeploymentsWhatIfAtTenantScopeHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n  /** Number of seconds to wait before polling for status. */\n  retryAfter?: string;\n}\n\n/** Defines headers for Deployments_whatIfAtManagementGroupScope operation. */\nexport interface DeploymentsWhatIfAtManagementGroupScopeHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n  /** Number of seconds to wait before polling for status. */\n  retryAfter?: string;\n}\n\n/** Defines headers for Deployments_whatIfAtSubscriptionScope operation. */\nexport interface DeploymentsWhatIfAtSubscriptionScopeHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n  /** Number of seconds to wait before polling for status. */\n  retryAfter?: string;\n}\n\n/** Defines headers for Deployments_whatIf operation. */\nexport interface DeploymentsWhatIfHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n  /** Number of seconds to wait before polling for status. */\n  retryAfter?: string;\n}\n\n/** Defines headers for ResourceGroups_delete operation. */\nexport interface ResourceGroupsDeleteHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n}\n\n/** Defines headers for Tags_createOrUpdateAtScope operation. */\nexport interface TagsCreateOrUpdateAtScopeHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n}\n\n/** Defines headers for Tags_updateAtScope operation. */\nexport interface TagsUpdateAtScopeHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n}\n\n/** Defines headers for Tags_deleteAtScope operation. */\nexport interface TagsDeleteAtScopeHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n}\n\n/** Known values of {@link ExtensionConfigPropertyType} that the service accepts. */\nexport enum KnownExtensionConfigPropertyType {\n  /** Property type representing a string value. */\n  String = \"String\",\n  /** Property type representing an integer value. */\n  Int = \"Int\",\n  /** Property type representing a boolean value. */\n  Bool = \"Bool\",\n  /** Property type representing an array value. */\n  Array = \"Array\",\n  /** Property type representing an object value. */\n  Object = \"Object\",\n  /** Property type representing a secure string value. */\n  SecureString = \"SecureString\",\n  /** Property type representing a secure object value. */\n  SecureObject = \"SecureObject\",\n}\n\n/**\n * Defines values for ExtensionConfigPropertyType. \\\n * {@link KnownExtensionConfigPropertyType} can be used interchangeably with ExtensionConfigPropertyType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **String**: Property type representing a string value. \\\n * **Int**: Property type representing an integer value. \\\n * **Bool**: Property type representing a boolean value. \\\n * **Array**: Property type representing an array value. \\\n * **Object**: Property type representing an object value. \\\n * **SecureString**: Property type representing a secure string value. \\\n * **SecureObject**: Property type representing a secure object value.\n */\nexport type ExtensionConfigPropertyType = string;\n\n/** Known values of {@link ExpressionEvaluationOptionsScopeType} that the service accepts. */\nexport enum KnownExpressionEvaluationOptionsScopeType {\n  /** NotSpecified */\n  NotSpecified = \"NotSpecified\",\n  /** Outer */\n  Outer = \"Outer\",\n  /** Inner */\n  Inner = \"Inner\",\n}\n\n/**\n * Defines values for ExpressionEvaluationOptionsScopeType. \\\n * {@link KnownExpressionEvaluationOptionsScopeType} can be used interchangeably with ExpressionEvaluationOptionsScopeType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified** \\\n * **Outer** \\\n * **Inner**\n */\nexport type ExpressionEvaluationOptionsScopeType = string;\n\n/** Known values of {@link ValidationLevel} that the service accepts. */\nexport enum KnownValidationLevel {\n  /** Static analysis of the template is performed. */\n  Template = \"Template\",\n  /** Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource. */\n  Provider = \"Provider\",\n  /** Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource. */\n  ProviderNoRbac = \"ProviderNoRbac\",\n}\n\n/**\n * Defines values for ValidationLevel. \\\n * {@link KnownValidationLevel} can be used interchangeably with ValidationLevel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Template**: Static analysis of the template is performed. \\\n * **Provider**: Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Validates that the caller has RBAC write permissions on each resource. \\\n * **ProviderNoRbac**: Static analysis of the template is performed and resource declarations are sent to resource providers for semantic validation. Skips validating that the caller has RBAC write permissions on each resource.\n */\nexport type ValidationLevel = string;\n\n/** Known values of {@link ProvisioningState} that the service accepts. */\nexport enum KnownProvisioningState {\n  /** NotSpecified */\n  NotSpecified = \"NotSpecified\",\n  /** Accepted */\n  Accepted = \"Accepted\",\n  /** Running */\n  Running = \"Running\",\n  /** Ready */\n  Ready = \"Ready\",\n  /** Creating */\n  Creating = \"Creating\",\n  /** Created */\n  Created = \"Created\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Deleted */\n  Deleted = \"Deleted\",\n  /** Canceled */\n  Canceled = \"Canceled\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Updating */\n  Updating = \"Updating\",\n}\n\n/**\n * Defines values for ProvisioningState. \\\n * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified** \\\n * **Accepted** \\\n * **Running** \\\n * **Ready** \\\n * **Creating** \\\n * **Created** \\\n * **Deleting** \\\n * **Deleted** \\\n * **Canceled** \\\n * **Failed** \\\n * **Succeeded** \\\n * **Updating**\n */\nexport type ProvisioningState = string;\n\n/** Known values of {@link AliasPathTokenType} that the service accepts. */\nexport enum KnownAliasPathTokenType {\n  /** The token type is not specified. */\n  NotSpecified = \"NotSpecified\",\n  /** The token type can be anything. */\n  Any = \"Any\",\n  /** The token type is string. */\n  String = \"String\",\n  /** The token type is object. */\n  Object = \"Object\",\n  /** The token type is array. */\n  Array = \"Array\",\n  /** The token type is integer. */\n  Integer = \"Integer\",\n  /** The token type is number. */\n  Number = \"Number\",\n  /** The token type is boolean. */\n  Boolean = \"Boolean\",\n}\n\n/**\n * Defines values for AliasPathTokenType. \\\n * {@link KnownAliasPathTokenType} can be used interchangeably with AliasPathTokenType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified**: The token type is not specified. \\\n * **Any**: The token type can be anything. \\\n * **String**: The token type is string. \\\n * **Object**: The token type is object. \\\n * **Array**: The token type is array. \\\n * **Integer**: The token type is integer. \\\n * **Number**: The token type is number. \\\n * **Boolean**: The token type is boolean.\n */\nexport type AliasPathTokenType = string;\n\n/** Known values of {@link AliasPathAttributes} that the service accepts. */\nexport enum KnownAliasPathAttributes {\n  /** The token that the alias path is referring to has no attributes. */\n  None = \"None\",\n  /** The token that the alias path is referring to is modifiable by policies with 'modify' effect. */\n  Modifiable = \"Modifiable\",\n}\n\n/**\n * Defines values for AliasPathAttributes. \\\n * {@link KnownAliasPathAttributes} can be used interchangeably with AliasPathAttributes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None**: The token that the alias path is referring to has no attributes. \\\n * **Modifiable**: The token that the alias path is referring to is modifiable by policies with 'modify' effect.\n */\nexport type AliasPathAttributes = string;\n\n/** Known values of {@link ProviderAuthorizationConsentState} that the service accepts. */\nexport enum KnownProviderAuthorizationConsentState {\n  /** NotSpecified */\n  NotSpecified = \"NotSpecified\",\n  /** Required */\n  Required = \"Required\",\n  /** NotRequired */\n  NotRequired = \"NotRequired\",\n  /** Consented */\n  Consented = \"Consented\",\n}\n\n/**\n * Defines values for ProviderAuthorizationConsentState. \\\n * {@link KnownProviderAuthorizationConsentState} can be used interchangeably with ProviderAuthorizationConsentState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified** \\\n * **Required** \\\n * **NotRequired** \\\n * **Consented**\n */\nexport type ProviderAuthorizationConsentState = string;\n\n/** Known values of {@link Level} that the service accepts. */\nexport enum KnownLevel {\n  /** Warning */\n  Warning = \"Warning\",\n  /** Info */\n  Info = \"Info\",\n  /** Error */\n  Error = \"Error\",\n}\n\n/**\n * Defines values for Level. \\\n * {@link KnownLevel} can be used interchangeably with Level,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Warning** \\\n * **Info** \\\n * **Error**\n */\nexport type Level = string;\n\n/** Known values of {@link ExtendedLocationType} that the service accepts. */\nexport enum KnownExtendedLocationType {\n  /** EdgeZone */\n  EdgeZone = \"EdgeZone\",\n}\n\n/**\n * Defines values for ExtendedLocationType. \\\n * {@link KnownExtendedLocationType} can be used interchangeably with ExtendedLocationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EdgeZone**\n */\nexport type ExtendedLocationType = string;\n\n/** Known values of {@link ExportTemplateOutputFormat} that the service accepts. */\nexport enum KnownExportTemplateOutputFormat {\n  /** Json */\n  Json = \"Json\",\n  /** Bicep */\n  Bicep = \"Bicep\",\n}\n\n/**\n * Defines values for ExportTemplateOutputFormat. \\\n * {@link KnownExportTemplateOutputFormat} can be used interchangeably with ExportTemplateOutputFormat,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Json** \\\n * **Bicep**\n */\nexport type ExportTemplateOutputFormat = string;\n\n/** Known values of {@link TagsPatchOperation} that the service accepts. */\nexport enum KnownTagsPatchOperation {\n  /** The 'replace' option replaces the entire set of existing tags with a new set. */\n  Replace = \"Replace\",\n  /** The 'merge' option allows adding tags with new names and updating the values of tags with existing names. */\n  Merge = \"Merge\",\n  /** The 'delete' option allows selectively deleting tags based on given names or name\\/value pairs. */\n  Delete = \"Delete\",\n}\n\n/**\n * Defines values for TagsPatchOperation. \\\n * {@link KnownTagsPatchOperation} can be used interchangeably with TagsPatchOperation,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Replace**: The 'replace' option replaces the entire set of existing tags with a new set. \\\n * **Merge**: The 'merge' option allows adding tags with new names and updating the values of tags with existing names. \\\n * **Delete**: The 'delete' option allows selectively deleting tags based on given names or name\\/value pairs.\n */\nexport type TagsPatchOperation = string;\n/** Defines values for DeploymentMode. */\nexport type DeploymentMode = \"Incremental\" | \"Complete\";\n/** Defines values for OnErrorDeploymentType. */\nexport type OnErrorDeploymentType = \"LastSuccessful\" | \"SpecificDeployment\";\n/** Defines values for AliasPatternType. */\nexport type AliasPatternType = \"NotSpecified\" | \"Extract\";\n/** Defines values for AliasType. */\nexport type AliasType = \"NotSpecified\" | \"PlainText\" | \"Mask\";\n/** Defines values for WhatIfResultFormat. */\nexport type WhatIfResultFormat = \"ResourceIdOnly\" | \"FullResourcePayloads\";\n/** Defines values for ChangeType. */\nexport type ChangeType =\n  | \"Create\"\n  | \"Delete\"\n  | \"Ignore\"\n  | \"Deploy\"\n  | \"NoChange\"\n  | \"Modify\"\n  | \"Unsupported\";\n/** Defines values for PropertyChangeType. */\nexport type PropertyChangeType =\n  | \"Create\"\n  | \"Delete\"\n  | \"Modify\"\n  | \"Array\"\n  | \"NoEffect\";\n/** Defines values for ResourceIdentityType. */\nexport type ResourceIdentityType =\n  | \"SystemAssigned\"\n  | \"UserAssigned\"\n  | \"SystemAssigned, UserAssigned\"\n  | \"None\";\n/** Defines values for ProvisioningOperation. */\nexport type ProvisioningOperation =\n  | \"NotSpecified\"\n  | \"Create\"\n  | \"Delete\"\n  | \"Waiting\"\n  | \"AzureAsyncOperationWaiting\"\n  | \"ResourceCacheWaiting\"\n  | \"Action\"\n  | \"Read\"\n  | \"EvaluateDeploymentOutput\"\n  | \"DeploymentCleanup\";\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface OperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationsListNextResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsDeleteAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsCheckExistenceAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistenceAtScope operation. */\nexport type DeploymentsCheckExistenceAtScopeResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface DeploymentsCreateOrUpdateAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateAtScope operation. */\nexport type DeploymentsCreateOrUpdateAtScopeResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsGetAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtScope operation. */\nexport type DeploymentsGetAtScopeResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsCancelAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DeploymentsValidateAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the validateAtScope operation. */\nexport type DeploymentsValidateAtScopeResponse = DeploymentValidateResult;\n\n/** Optional parameters. */\nexport interface DeploymentsExportTemplateAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the exportTemplateAtScope operation. */\nexport type DeploymentsExportTemplateAtScopeResponse = DeploymentExportResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. */\n  filter?: string;\n  /** The number of results to get. If null is passed, returns all deployments. */\n  top?: number;\n}\n\n/** Contains response data for the listAtScope operation. */\nexport type DeploymentsListAtScopeResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsDeleteAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsCheckExistenceAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistenceAtTenantScope operation. */\nexport type DeploymentsCheckExistenceAtTenantScopeResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface DeploymentsCreateOrUpdateAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateAtTenantScope operation. */\nexport type DeploymentsCreateOrUpdateAtTenantScopeResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsGetAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtTenantScope operation. */\nexport type DeploymentsGetAtTenantScopeResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsCancelAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DeploymentsValidateAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the validateAtTenantScope operation. */\nexport type DeploymentsValidateAtTenantScopeResponse = DeploymentValidateResult;\n\n/** Optional parameters. */\nexport interface DeploymentsWhatIfAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the whatIfAtTenantScope operation. */\nexport type DeploymentsWhatIfAtTenantScopeResponse = WhatIfOperationResult;\n\n/** Optional parameters. */\nexport interface DeploymentsExportTemplateAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the exportTemplateAtTenantScope operation. */\nexport type DeploymentsExportTemplateAtTenantScopeResponse =\n  DeploymentExportResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. */\n  filter?: string;\n  /** The number of results to get. If null is passed, returns all deployments. */\n  top?: number;\n}\n\n/** Contains response data for the listAtTenantScope operation. */\nexport type DeploymentsListAtTenantScopeResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsDeleteAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsCheckExistenceAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistenceAtManagementGroupScope operation. */\nexport type DeploymentsCheckExistenceAtManagementGroupScopeResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface DeploymentsCreateOrUpdateAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateAtManagementGroupScope operation. */\nexport type DeploymentsCreateOrUpdateAtManagementGroupScopeResponse =\n  DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsGetAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtManagementGroupScope operation. */\nexport type DeploymentsGetAtManagementGroupScopeResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsCancelAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DeploymentsValidateAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the validateAtManagementGroupScope operation. */\nexport type DeploymentsValidateAtManagementGroupScopeResponse =\n  DeploymentValidateResult;\n\n/** Optional parameters. */\nexport interface DeploymentsWhatIfAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the whatIfAtManagementGroupScope operation. */\nexport type DeploymentsWhatIfAtManagementGroupScopeResponse =\n  WhatIfOperationResult;\n\n/** Optional parameters. */\nexport interface DeploymentsExportTemplateAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the exportTemplateAtManagementGroupScope operation. */\nexport type DeploymentsExportTemplateAtManagementGroupScopeResponse =\n  DeploymentExportResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. */\n  filter?: string;\n  /** The number of results to get. If null is passed, returns all deployments. */\n  top?: number;\n}\n\n/** Contains response data for the listAtManagementGroupScope operation. */\nexport type DeploymentsListAtManagementGroupScopeResponse =\n  DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsDeleteAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsCheckExistenceAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistenceAtSubscriptionScope operation. */\nexport type DeploymentsCheckExistenceAtSubscriptionScopeResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface DeploymentsCreateOrUpdateAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateAtSubscriptionScope operation. */\nexport type DeploymentsCreateOrUpdateAtSubscriptionScopeResponse =\n  DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsGetAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtSubscriptionScope operation. */\nexport type DeploymentsGetAtSubscriptionScopeResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsCancelAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DeploymentsValidateAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the validateAtSubscriptionScope operation. */\nexport type DeploymentsValidateAtSubscriptionScopeResponse =\n  DeploymentValidateResult;\n\n/** Optional parameters. */\nexport interface DeploymentsWhatIfAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the whatIfAtSubscriptionScope operation. */\nexport type DeploymentsWhatIfAtSubscriptionScopeResponse =\n  WhatIfOperationResult;\n\n/** Optional parameters. */\nexport interface DeploymentsExportTemplateAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the exportTemplateAtSubscriptionScope operation. */\nexport type DeploymentsExportTemplateAtSubscriptionScopeResponse =\n  DeploymentExportResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. */\n  filter?: string;\n  /** The number of results to get. If null is passed, returns all deployments. */\n  top?: number;\n}\n\n/** Contains response data for the listAtSubscriptionScope operation. */\nexport type DeploymentsListAtSubscriptionScopeResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsCheckExistenceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistence operation. */\nexport type DeploymentsCheckExistenceResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface DeploymentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DeploymentsCreateOrUpdateResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DeploymentsGetResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsCancelOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DeploymentsValidateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the validate operation. */\nexport type DeploymentsValidateResponse = DeploymentValidateResult;\n\n/** Optional parameters. */\nexport interface DeploymentsWhatIfOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the whatIf operation. */\nexport type DeploymentsWhatIfResponse = WhatIfOperationResult;\n\n/** Optional parameters. */\nexport interface DeploymentsExportTemplateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the exportTemplate operation. */\nexport type DeploymentsExportTemplateResponse = DeploymentExportResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. */\n  filter?: string;\n  /** The number of results to get. If null is passed, returns all deployments. */\n  top?: number;\n}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type DeploymentsListByResourceGroupResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsCalculateTemplateHashOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the calculateTemplateHash operation. */\nexport type DeploymentsCalculateTemplateHashResponse = TemplateHashResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtScopeNext operation. */\nexport type DeploymentsListAtScopeNextResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtTenantScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtTenantScopeNext operation. */\nexport type DeploymentsListAtTenantScopeNextResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtManagementGroupScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtManagementGroupScopeNext operation. */\nexport type DeploymentsListAtManagementGroupScopeNextResponse =\n  DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtSubscriptionScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtSubscriptionScopeNext operation. */\nexport type DeploymentsListAtSubscriptionScopeNextResponse =\n  DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type DeploymentsListByResourceGroupNextResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface ProvidersUnregisterOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the unregister operation. */\nexport type ProvidersUnregisterResponse = Provider;\n\n/** Optional parameters. */\nexport interface ProvidersRegisterAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ProvidersProviderPermissionsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the providerPermissions operation. */\nexport type ProvidersProviderPermissionsResponse = ProviderPermissionListResult;\n\n/** Optional parameters. */\nexport interface ProvidersRegisterOptionalParams\n  extends coreClient.OperationOptions {\n  /** The third party consent for S2S. */\n  properties?: ProviderRegistrationRequest;\n}\n\n/** Contains response data for the register operation. */\nexport type ProvidersRegisterResponse = Provider;\n\n/** Optional parameters. */\nexport interface ProvidersListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ProvidersListResponse = ProviderListResult;\n\n/** Optional parameters. */\nexport interface ProvidersListAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases. */\n  expand?: string;\n}\n\n/** Contains response data for the listAtTenantScope operation. */\nexport type ProvidersListAtTenantScopeResponse = ProviderListResult;\n\n/** Optional parameters. */\nexport interface ProvidersGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type ProvidersGetResponse = Provider;\n\n/** Optional parameters. */\nexport interface ProvidersGetAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases. */\n  expand?: string;\n}\n\n/** Contains response data for the getAtTenantScope operation. */\nexport type ProvidersGetAtTenantScopeResponse = Provider;\n\n/** Optional parameters. */\nexport interface ProvidersListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ProvidersListNextResponse = ProviderListResult;\n\n/** Optional parameters. */\nexport interface ProvidersListAtTenantScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtTenantScopeNext operation. */\nexport type ProvidersListAtTenantScopeNextResponse = ProviderListResult;\n\n/** Optional parameters. */\nexport interface ProviderResourceTypesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ProviderResourceTypesListResponse = ProviderResourceTypeListResult;\n\n/** Optional parameters. */\nexport interface ResourcesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.<br><br>For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together by adding and/or operators.<br><br>You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When you filter by a tag name and value, the tags for each resource are not returned in the results.<br><br>You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId. */\n  filter?: string;\n  /** The number of results to return. If null is passed, returns all resources. */\n  top?: number;\n  /** Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`. */\n  expand?: string;\n}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ResourcesListByResourceGroupResponse = ResourceListResult;\n\n/** Optional parameters. */\nexport interface ResourcesMoveResourcesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ResourcesValidateMoveResourcesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ResourcesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation.<br><br>Filter comparison operators include `eq` (equals) and `ne` (not equals) and may be used with the following properties: `location`, `resourceType`, `name`, `resourceGroup`, `identity`, `identity/principalId`, `plan`, `plan/publisher`, `plan/product`, `plan/name`, `plan/version`, and `plan/promotionCode`.<br><br>For example, to filter by a resource type, use `$filter=resourceType eq 'Microsoft.Network/virtualNetworks'`<br><br><br>`substringof(value, property)` can  be used to filter for substrings of the following currently-supported properties: `name` and `resourceGroup`<br><br>For example, to get all resources with 'demo' anywhere in the resource name, use `$filter=substringof('demo', name)`<br><br>Multiple substring operations can also be combined using `and`/`or` operators.<br><br>Note that any truncated number of results queried via `$top` may also not be compatible when using a filter.<br><br><br>Resources can be filtered by tag names and values. For example, to filter for a tag name and value, use `$filter=tagName eq 'tag1' and tagValue eq 'Value1'`. Note that when resources are filtered by tag name and value, <b>the original tags for each resource will not be returned in the results.</b> Any list of additional properties queried via `$expand` may also not be compatible when filtering by tag names/values. <br><br>For tag names only, resources can be filtered by prefix using the following syntax: `$filter=startswith(tagName, 'depart')`. This query will return all resources with a tag name prefixed by the phrase `depart` (i.e.`department`, `departureDate`, `departureTime`, etc.)<br><br><br>Note that some properties can be combined when filtering resources, which include the following: `substringof() and/or resourceType`, `plan and plan/publisher and plan/name`, and `identity and identity/principalId`. */\n  filter?: string;\n  /** The number of recommendations per page if a paged version of this API is being used. */\n  top?: number;\n  /** Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ResourcesListResponse = ResourceListResult;\n\n/** Optional parameters. */\nexport interface ResourcesCheckExistenceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistence operation. */\nexport type ResourcesCheckExistenceResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface ResourcesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ResourcesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ResourcesCreateOrUpdateResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ResourcesUpdateResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ResourcesGetResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesCheckExistenceByIdOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistenceById operation. */\nexport type ResourcesCheckExistenceByIdResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface ResourcesDeleteByIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ResourcesCreateOrUpdateByIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateById operation. */\nexport type ResourcesCreateOrUpdateByIdResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesUpdateByIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updateById operation. */\nexport type ResourcesUpdateByIdResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesGetByIdOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getById operation. */\nexport type ResourcesGetByIdResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type ResourcesListByResourceGroupNextResponse = ResourceListResult;\n\n/** Optional parameters. */\nexport interface ResourcesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ResourcesListNextResponse = ResourceListResult;\n\n/** Optional parameters. */\nexport interface ResourceGroupsCheckExistenceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistence operation. */\nexport type ResourceGroupsCheckExistenceResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface ResourceGroupsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ResourceGroupsCreateOrUpdateResponse = ResourceGroup;\n\n/** Optional parameters. */\nexport interface ResourceGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** The resource types you want to force delete. Currently, only the following is supported: forceDeletionTypes=Microsoft.Compute/virtualMachines,Microsoft.Compute/virtualMachineScaleSets */\n  forceDeletionTypes?: string;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ResourceGroupsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ResourceGroupsGetResponse = ResourceGroup;\n\n/** Optional parameters. */\nexport interface ResourceGroupsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type ResourceGroupsUpdateResponse = ResourceGroup;\n\n/** Optional parameters. */\nexport interface ResourceGroupsExportTemplateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the exportTemplate operation. */\nexport type ResourceGroupsExportTemplateResponse = ResourceGroupExportResult;\n\n/** Optional parameters. */\nexport interface ResourceGroupsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation.<br><br>You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1' */\n  filter?: string;\n  /** The number of results to return. If null is passed, returns all resource groups. */\n  top?: number;\n}\n\n/** Contains response data for the list operation. */\nexport type ResourceGroupsListResponse = ResourceGroupListResult;\n\n/** Optional parameters. */\nexport interface ResourceGroupsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ResourceGroupsListNextResponse = ResourceGroupListResult;\n\n/** Optional parameters. */\nexport interface TagsDeleteValueOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface TagsCreateOrUpdateValueOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdateValue operation. */\nexport type TagsCreateOrUpdateValueResponse = TagValue;\n\n/** Optional parameters. */\nexport interface TagsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type TagsCreateOrUpdateResponse = TagDetails;\n\n/** Optional parameters. */\nexport interface TagsDeleteOptionalParams extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface TagsListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type TagsListResponse = TagsListResult;\n\n/** Optional parameters. */\nexport interface TagsCreateOrUpdateAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateAtScope operation. */\nexport type TagsCreateOrUpdateAtScopeResponse = TagsResource;\n\n/** Optional parameters. */\nexport interface TagsUpdateAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updateAtScope operation. */\nexport type TagsUpdateAtScopeResponse = TagsResource;\n\n/** Optional parameters. */\nexport interface TagsGetAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtScope operation. */\nexport type TagsGetAtScopeResponse = TagsResource;\n\n/** Optional parameters. */\nexport interface TagsDeleteAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface TagsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type TagsListNextResponse = TagsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsGetAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtScope operation. */\nexport type DeploymentOperationsGetAtScopeResponse = DeploymentOperation;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listAtScope operation. */\nexport type DeploymentOperationsListAtScopeResponse =\n  DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsGetAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtTenantScope operation. */\nexport type DeploymentOperationsGetAtTenantScopeResponse = DeploymentOperation;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listAtTenantScope operation. */\nexport type DeploymentOperationsListAtTenantScopeResponse =\n  DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsGetAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtManagementGroupScope operation. */\nexport type DeploymentOperationsGetAtManagementGroupScopeResponse =\n  DeploymentOperation;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listAtManagementGroupScope operation. */\nexport type DeploymentOperationsListAtManagementGroupScopeResponse =\n  DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsGetAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtSubscriptionScope operation. */\nexport type DeploymentOperationsGetAtSubscriptionScopeResponse =\n  DeploymentOperation;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listAtSubscriptionScope operation. */\nexport type DeploymentOperationsListAtSubscriptionScopeResponse =\n  DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DeploymentOperationsGetResponse = DeploymentOperation;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the list operation. */\nexport type DeploymentOperationsListResponse = DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtScopeNext operation. */\nexport type DeploymentOperationsListAtScopeNextResponse =\n  DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtTenantScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtTenantScopeNext operation. */\nexport type DeploymentOperationsListAtTenantScopeNextResponse =\n  DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtManagementGroupScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtManagementGroupScopeNext operation. */\nexport type DeploymentOperationsListAtManagementGroupScopeNextResponse =\n  DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtSubscriptionScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtSubscriptionScopeNext operation. */\nexport type DeploymentOperationsListAtSubscriptionScopeNextResponse =\n  DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type DeploymentOperationsListNextResponse =\n  DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface ResourceManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n"]}