{"version":3,"file":"tagsOperations.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/tagsOperations.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  TagDetails,\n  TagsListOptionalParams,\n  TagsDeleteValueOptionalParams,\n  TagsCreateOrUpdateValueOptionalParams,\n  TagsCreateOrUpdateValueResponse,\n  TagsCreateOrUpdateOptionalParams,\n  TagsCreateOrUpdateResponse,\n  TagsDeleteOptionalParams,\n  TagsResource,\n  TagsCreateOrUpdateAtScopeOptionalParams,\n  TagsCreateOrUpdateAtScopeResponse,\n  TagsPatchResource,\n  TagsUpdateAtScopeOptionalParams,\n  TagsUpdateAtScopeResponse,\n  TagsGetAtScopeOptionalParams,\n  TagsGetAtScopeResponse,\n  TagsDeleteAtScopeOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a TagsOperations. */\nexport interface TagsOperations {\n  /**\n   * This operation performs a union of predefined tags, resource tags, resource group tags and\n   * subscription tags, and returns a summary of usage for each tag name and value under the given\n   * subscription. In case of a large number of tags, this operation may return a previously cached\n   * result.\n   * @param options The options parameters.\n   */\n  list(\n    options?: TagsListOptionalParams,\n  ): PagedAsyncIterableIterator<TagDetails>;\n  /**\n   * This operation allows deleting a value from the list of predefined values for an existing predefined\n   * tag name. The value being deleted must not be in use as a tag value for the given tag name for any\n   * resource.\n   * @param tagName The name of the tag.\n   * @param tagValue The value of the tag to delete.\n   * @param options The options parameters.\n   */\n  deleteValue(\n    tagName: string,\n    tagValue: string,\n    options?: TagsDeleteValueOptionalParams,\n  ): Promise<void>;\n  /**\n   * This operation allows adding a value to the list of predefined values for an existing predefined tag\n   * name. A tag value can have a maximum of 256 characters.\n   * @param tagName The name of the tag.\n   * @param tagValue The value of the tag to create.\n   * @param options The options parameters.\n   */\n  createOrUpdateValue(\n    tagName: string,\n    tagValue: string,\n    options?: TagsCreateOrUpdateValueOptionalParams,\n  ): Promise<TagsCreateOrUpdateValueResponse>;\n  /**\n   * This operation allows adding a name to the list of predefined tag names for the given subscription.\n   * A tag name can have a maximum of 512 characters and is case-insensitive. Tag names cannot have the\n   * following prefixes which are reserved for Azure use: 'microsoft', 'azure', 'windows'.\n   * @param tagName The name of the tag to create.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    tagName: string,\n    options?: TagsCreateOrUpdateOptionalParams,\n  ): Promise<TagsCreateOrUpdateResponse>;\n  /**\n   * This operation allows deleting a name from the list of predefined tag names for the given\n   * subscription. The name being deleted must not be in use as a tag name for any resource. All\n   * predefined values for the given name must have already been deleted.\n   * @param tagName The name of the tag.\n   * @param options The options parameters.\n   */\n  delete(tagName: string, options?: TagsDeleteOptionalParams): Promise<void>;\n  /**\n   * This operation allows adding or replacing the entire set of tags on the specified resource or\n   * subscription. The specified entity can have a maximum of 50 tags.\n   * @param scope The resource scope.\n   * @param parameters Wrapper resource for tags API requests and responses.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAtScope(\n    scope: string,\n    parameters: TagsResource,\n    options?: TagsCreateOrUpdateAtScopeOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<TagsCreateOrUpdateAtScopeResponse>,\n      TagsCreateOrUpdateAtScopeResponse\n    >\n  >;\n  /**\n   * This operation allows adding or replacing the entire set of tags on the specified resource or\n   * subscription. The specified entity can have a maximum of 50 tags.\n   * @param scope The resource scope.\n   * @param parameters Wrapper resource for tags API requests and responses.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAtScopeAndWait(\n    scope: string,\n    parameters: TagsResource,\n    options?: TagsCreateOrUpdateAtScopeOptionalParams,\n  ): Promise<TagsCreateOrUpdateAtScopeResponse>;\n  /**\n   * This operation allows replacing, merging or selectively deleting tags on the specified resource or\n   * subscription. The specified entity can have a maximum of 50 tags at the end of the operation. The\n   * 'replace' option replaces the entire set of existing tags with a new set. The 'merge' option allows\n   * adding tags with new names and updating the values of tags with existing names. The 'delete' option\n   * allows selectively deleting tags based on given names or name/value pairs.\n   * @param scope The resource scope.\n   * @param parameters Wrapper resource for tags patch API request only.\n   * @param options The options parameters.\n   */\n  beginUpdateAtScope(\n    scope: string,\n    parameters: TagsPatchResource,\n    options?: TagsUpdateAtScopeOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<TagsUpdateAtScopeResponse>,\n      TagsUpdateAtScopeResponse\n    >\n  >;\n  /**\n   * This operation allows replacing, merging or selectively deleting tags on the specified resource or\n   * subscription. The specified entity can have a maximum of 50 tags at the end of the operation. The\n   * 'replace' option replaces the entire set of existing tags with a new set. The 'merge' option allows\n   * adding tags with new names and updating the values of tags with existing names. The 'delete' option\n   * allows selectively deleting tags based on given names or name/value pairs.\n   * @param scope The resource scope.\n   * @param parameters Wrapper resource for tags patch API request only.\n   * @param options The options parameters.\n   */\n  beginUpdateAtScopeAndWait(\n    scope: string,\n    parameters: TagsPatchResource,\n    options?: TagsUpdateAtScopeOptionalParams,\n  ): Promise<TagsUpdateAtScopeResponse>;\n  /**\n   * Gets the entire set of tags on a resource or subscription.\n   * @param scope The resource scope.\n   * @param options The options parameters.\n   */\n  getAtScope(\n    scope: string,\n    options?: TagsGetAtScopeOptionalParams,\n  ): Promise<TagsGetAtScopeResponse>;\n  /**\n   * Deletes the entire set of tags on a resource or subscription.\n   * @param scope The resource scope.\n   * @param options The options parameters.\n   */\n  beginDeleteAtScope(\n    scope: string,\n    options?: TagsDeleteAtScopeOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes the entire set of tags on a resource or subscription.\n   * @param scope The resource scope.\n   * @param options The options parameters.\n   */\n  beginDeleteAtScopeAndWait(\n    scope: string,\n    options?: TagsDeleteAtScopeOptionalParams,\n  ): Promise<void>;\n}\n"]}