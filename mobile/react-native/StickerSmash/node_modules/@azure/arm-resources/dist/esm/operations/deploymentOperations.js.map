{"version":3,"file":"deploymentOperations.js","sourceRoot":"","sources":["../../../src/operations/deploymentOperations.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { DeploymentOperations } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { ResourceManagementClient } from \"../resourceManagementClient.js\";\nimport {\n  DeploymentOperation,\n  DeploymentOperationsListAtScopeNextOptionalParams,\n  DeploymentOperationsListAtScopeOptionalParams,\n  DeploymentOperationsListAtScopeResponse,\n  DeploymentOperationsListAtTenantScopeNextOptionalParams,\n  DeploymentOperationsListAtTenantScopeOptionalParams,\n  DeploymentOperationsListAtTenantScopeResponse,\n  DeploymentOperationsListAtManagementGroupScopeNextOptionalParams,\n  DeploymentOperationsListAtManagementGroupScopeOptionalParams,\n  DeploymentOperationsListAtManagementGroupScopeResponse,\n  DeploymentOperationsListAtSubscriptionScopeNextOptionalParams,\n  DeploymentOperationsListAtSubscriptionScopeOptionalParams,\n  DeploymentOperationsListAtSubscriptionScopeResponse,\n  DeploymentOperationsListNextOptionalParams,\n  DeploymentOperationsListOptionalParams,\n  DeploymentOperationsListResponse,\n  DeploymentOperationsGetAtScopeOptionalParams,\n  DeploymentOperationsGetAtScopeResponse,\n  DeploymentOperationsGetAtTenantScopeOptionalParams,\n  DeploymentOperationsGetAtTenantScopeResponse,\n  DeploymentOperationsGetAtManagementGroupScopeOptionalParams,\n  DeploymentOperationsGetAtManagementGroupScopeResponse,\n  DeploymentOperationsGetAtSubscriptionScopeOptionalParams,\n  DeploymentOperationsGetAtSubscriptionScopeResponse,\n  DeploymentOperationsGetOptionalParams,\n  DeploymentOperationsGetResponse,\n  DeploymentOperationsListAtScopeNextResponse,\n  DeploymentOperationsListAtTenantScopeNextResponse,\n  DeploymentOperationsListAtManagementGroupScopeNextResponse,\n  DeploymentOperationsListAtSubscriptionScopeNextResponse,\n  DeploymentOperationsListNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DeploymentOperations operations. */\nexport class DeploymentOperationsImpl implements DeploymentOperations {\n  private readonly client: ResourceManagementClient;\n\n  /**\n   * Initialize a new instance of the class DeploymentOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ResourceManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  public listAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtScopeOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentOperation> {\n    const iter = this.listAtScopePagingAll(scope, deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtScopePagingPage(\n          scope,\n          deploymentName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listAtScopePagingPage(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtScopeOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DeploymentOperation[]> {\n    let result: DeploymentOperationsListAtScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtScope(scope, deploymentName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtScopeNext(\n        scope,\n        deploymentName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtScopePagingAll(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtScopeOptionalParams,\n  ): AsyncIterableIterator<DeploymentOperation> {\n    for await (const page of this.listAtScopePagingPage(\n      scope,\n      deploymentName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  public listAtTenantScope(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtTenantScopeOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentOperation> {\n    const iter = this.listAtTenantScopePagingAll(deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtTenantScopePagingPage(\n          deploymentName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listAtTenantScopePagingPage(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtTenantScopeOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DeploymentOperation[]> {\n    let result: DeploymentOperationsListAtTenantScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtTenantScope(deploymentName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtTenantScopeNext(\n        deploymentName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtTenantScopePagingAll(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtTenantScopeOptionalParams,\n  ): AsyncIterableIterator<DeploymentOperation> {\n    for await (const page of this.listAtTenantScopePagingPage(\n      deploymentName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  public listAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentOperation> {\n    const iter = this.listAtManagementGroupScopePagingAll(\n      groupId,\n      deploymentName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtManagementGroupScopePagingPage(\n          groupId,\n          deploymentName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listAtManagementGroupScopePagingPage(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DeploymentOperation[]> {\n    let result: DeploymentOperationsListAtManagementGroupScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtManagementGroupScope(\n        groupId,\n        deploymentName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtManagementGroupScopeNext(\n        groupId,\n        deploymentName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtManagementGroupScopePagingAll(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeOptionalParams,\n  ): AsyncIterableIterator<DeploymentOperation> {\n    for await (const page of this.listAtManagementGroupScopePagingPage(\n      groupId,\n      deploymentName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  public listAtSubscriptionScope(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentOperation> {\n    const iter = this.listAtSubscriptionScopePagingAll(deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtSubscriptionScopePagingPage(\n          deploymentName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listAtSubscriptionScopePagingPage(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DeploymentOperation[]> {\n    let result: DeploymentOperationsListAtSubscriptionScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtSubscriptionScope(deploymentName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtSubscriptionScopeNext(\n        deploymentName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtSubscriptionScopePagingAll(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeOptionalParams,\n  ): AsyncIterableIterator<DeploymentOperation> {\n    for await (const page of this.listAtSubscriptionScopePagingPage(\n      deploymentName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListOptionalParams,\n  ): PagedAsyncIterableIterator<DeploymentOperation> {\n    const iter = this.listPagingAll(resourceGroupName, deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          deploymentName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DeploymentOperation[]> {\n    let result: DeploymentOperationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, deploymentName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        deploymentName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListOptionalParams,\n  ): AsyncIterableIterator<DeploymentOperation> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      deploymentName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtScope(\n    scope: string,\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetAtScopeOptionalParams,\n  ): Promise<DeploymentOperationsGetAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, deploymentName, operationId, options },\n      getAtScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  private _listAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtScopeOptionalParams,\n  ): Promise<DeploymentOperationsListAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, deploymentName, options },\n      listAtScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtTenantScope(\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetAtTenantScopeOptionalParams,\n  ): Promise<DeploymentOperationsGetAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, operationId, options },\n      getAtTenantScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  private _listAtTenantScope(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtTenantScopeOptionalParams,\n  ): Promise<DeploymentOperationsListAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      listAtTenantScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetAtManagementGroupScopeOptionalParams,\n  ): Promise<DeploymentOperationsGetAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, deploymentName, operationId, options },\n      getAtManagementGroupScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  private _listAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeOptionalParams,\n  ): Promise<DeploymentOperationsListAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, deploymentName, options },\n      listAtManagementGroupScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtSubscriptionScope(\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetAtSubscriptionScopeOptionalParams,\n  ): Promise<DeploymentOperationsGetAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, operationId, options },\n      getAtSubscriptionScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  private _listAtSubscriptionScope(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeOptionalParams,\n  ): Promise<DeploymentOperationsListAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      listAtSubscriptionScopeOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetOptionalParams,\n  ): Promise<DeploymentOperationsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, deploymentName, operationId, options },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListOptionalParams,\n  ): Promise<DeploymentOperationsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, deploymentName, options },\n      listOperationSpec,\n    );\n  }\n\n  /**\n   * ListAtScopeNext\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the ListAtScope method.\n   * @param options The options parameters.\n   */\n  private _listAtScopeNext(\n    scope: string,\n    deploymentName: string,\n    nextLink: string,\n    options?: DeploymentOperationsListAtScopeNextOptionalParams,\n  ): Promise<DeploymentOperationsListAtScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, deploymentName, nextLink, options },\n      listAtScopeNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListAtTenantScopeNext\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the ListAtTenantScope method.\n   * @param options The options parameters.\n   */\n  private _listAtTenantScopeNext(\n    deploymentName: string,\n    nextLink: string,\n    options?: DeploymentOperationsListAtTenantScopeNextOptionalParams,\n  ): Promise<DeploymentOperationsListAtTenantScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, nextLink, options },\n      listAtTenantScopeNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListAtManagementGroupScopeNext\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the ListAtManagementGroupScope\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listAtManagementGroupScopeNext(\n    groupId: string,\n    deploymentName: string,\n    nextLink: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeNextOptionalParams,\n  ): Promise<DeploymentOperationsListAtManagementGroupScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, deploymentName, nextLink, options },\n      listAtManagementGroupScopeNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListAtSubscriptionScopeNext\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the ListAtSubscriptionScope\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listAtSubscriptionScopeNext(\n    deploymentName: string,\n    nextLink: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeNextOptionalParams,\n  ): Promise<DeploymentOperationsListAtSubscriptionScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, nextLink, options },\n      listAtSubscriptionScopeNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    deploymentName: string,\n    nextLink: string,\n    options?: DeploymentOperationsListNextOptionalParams,\n  ): Promise<DeploymentOperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, deploymentName, nextLink, options },\n      listNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.scope,\n    Parameters.deploymentName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtTenantScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.deploymentName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtManagementGroupScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.deploymentName,\n    Parameters.groupId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAtSubscriptionScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}