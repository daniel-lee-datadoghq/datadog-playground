{"version":3,"file":"diagnostics.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/diagnostics.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport {\n  DetectorResponse,\n  DiagnosticsListHostingEnvironmentDetectorResponsesOptionalParams,\n  DiagnosticsListSiteDetectorResponsesOptionalParams,\n  DiagnosticCategory,\n  DiagnosticsListSiteDiagnosticCategoriesOptionalParams,\n  AnalysisDefinition,\n  DiagnosticsListSiteAnalysesOptionalParams,\n  DetectorDefinitionResource,\n  DiagnosticsListSiteDetectorsOptionalParams,\n  DiagnosticsListSiteDetectorResponsesSlotOptionalParams,\n  DiagnosticsListSiteDiagnosticCategoriesSlotOptionalParams,\n  DiagnosticsListSiteAnalysesSlotOptionalParams,\n  DiagnosticsListSiteDetectorsSlotOptionalParams,\n  DiagnosticsGetHostingEnvironmentDetectorResponseOptionalParams,\n  DiagnosticsGetHostingEnvironmentDetectorResponseResponse,\n  DiagnosticsGetSiteDetectorResponseOptionalParams,\n  DiagnosticsGetSiteDetectorResponseResponse,\n  DiagnosticsGetSiteDiagnosticCategoryOptionalParams,\n  DiagnosticsGetSiteDiagnosticCategoryResponse,\n  DiagnosticsGetSiteAnalysisOptionalParams,\n  DiagnosticsGetSiteAnalysisResponse,\n  DiagnosticsExecuteSiteAnalysisOptionalParams,\n  DiagnosticsExecuteSiteAnalysisResponse,\n  DiagnosticsGetSiteDetectorOptionalParams,\n  DiagnosticsGetSiteDetectorResponse,\n  DiagnosticsExecuteSiteDetectorOptionalParams,\n  DiagnosticsExecuteSiteDetectorResponse,\n  DiagnosticsGetSiteDetectorResponseSlotOptionalParams,\n  DiagnosticsGetSiteDetectorResponseSlotResponse,\n  DiagnosticsGetSiteDiagnosticCategorySlotOptionalParams,\n  DiagnosticsGetSiteDiagnosticCategorySlotResponse,\n  DiagnosticsGetSiteAnalysisSlotOptionalParams,\n  DiagnosticsGetSiteAnalysisSlotResponse,\n  DiagnosticsExecuteSiteAnalysisSlotOptionalParams,\n  DiagnosticsExecuteSiteAnalysisSlotResponse,\n  DiagnosticsGetSiteDetectorSlotOptionalParams,\n  DiagnosticsGetSiteDetectorSlotResponse,\n  DiagnosticsExecuteSiteDetectorSlotOptionalParams,\n  DiagnosticsExecuteSiteDetectorSlotResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a Diagnostics. */\nexport interface Diagnostics {\n  /**\n   * Description for List Hosting Environment Detector Responses\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site Name\n   * @param options The options parameters.\n   */\n  listHostingEnvironmentDetectorResponses(\n    resourceGroupName: string,\n    name: string,\n    options?: DiagnosticsListHostingEnvironmentDetectorResponsesOptionalParams,\n  ): PagedAsyncIterableIterator<DetectorResponse>;\n  /**\n   * Description for List Site Detector Responses\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param siteName Site Name\n   * @param options The options parameters.\n   */\n  listSiteDetectorResponses(\n    resourceGroupName: string,\n    siteName: string,\n    options?: DiagnosticsListSiteDetectorResponsesOptionalParams,\n  ): PagedAsyncIterableIterator<DetectorResponse>;\n  /**\n   * Description for Get Diagnostics Categories\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param siteName Site Name\n   * @param options The options parameters.\n   */\n  listSiteDiagnosticCategories(\n    resourceGroupName: string,\n    siteName: string,\n    options?: DiagnosticsListSiteDiagnosticCategoriesOptionalParams,\n  ): PagedAsyncIterableIterator<DiagnosticCategory>;\n  /**\n   * Description for Get Site Analyses\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param siteName Site Name\n   * @param diagnosticCategory Diagnostic Category\n   * @param options The options parameters.\n   */\n  listSiteAnalyses(\n    resourceGroupName: string,\n    siteName: string,\n    diagnosticCategory: string,\n    options?: DiagnosticsListSiteAnalysesOptionalParams,\n  ): PagedAsyncIterableIterator<AnalysisDefinition>;\n  /**\n   * Description for Get Detectors\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param siteName Site Name\n   * @param diagnosticCategory Diagnostic Category\n   * @param options The options parameters.\n   */\n  listSiteDetectors(\n    resourceGroupName: string,\n    siteName: string,\n    diagnosticCategory: string,\n    options?: DiagnosticsListSiteDetectorsOptionalParams,\n  ): PagedAsyncIterableIterator<DetectorDefinitionResource>;\n  /**\n   * Description for List Site Detector Responses\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param siteName Site Name\n   * @param slot Slot Name\n   * @param options The options parameters.\n   */\n  listSiteDetectorResponsesSlot(\n    resourceGroupName: string,\n    siteName: string,\n    slot: string,\n    options?: DiagnosticsListSiteDetectorResponsesSlotOptionalParams,\n  ): PagedAsyncIterableIterator<DetectorResponse>;\n  /**\n   * Description for Get Diagnostics Categories\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param siteName Site Name\n   * @param slot Slot Name\n   * @param options The options parameters.\n   */\n  listSiteDiagnosticCategoriesSlot(\n    resourceGroupName: string,\n    siteName: string,\n    slot: string,\n    options?: DiagnosticsListSiteDiagnosticCategoriesSlotOptionalParams,\n  ): PagedAsyncIterableIterator<DiagnosticCategory>;\n  /**\n   * Description for Get Site Analyses\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param siteName Site Name\n   * @param diagnosticCategory Diagnostic Category\n   * @param slot Slot Name\n   * @param options The options parameters.\n   */\n  listSiteAnalysesSlot(\n    resourceGroupName: string,\n    siteName: string,\n    diagnosticCategory: string,\n    slot: string,\n    options?: DiagnosticsListSiteAnalysesSlotOptionalParams,\n  ): PagedAsyncIterableIterator<AnalysisDefinition>;\n  /**\n   * Description for Get Detectors\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param siteName Site Name\n   * @param diagnosticCategory Diagnostic Category\n   * @param slot Slot Name\n   * @param options The options parameters.\n   */\n  listSiteDetectorsSlot(\n    resourceGroupName: string,\n    siteName: string,\n    diagnosticCategory: string,\n    slot: string,\n    options?: DiagnosticsListSiteDetectorsSlotOptionalParams,\n  ): PagedAsyncIterableIterator<DetectorDefinitionResource>;\n  /**\n   * Description for Get Hosting Environment Detector Response\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name App Service Environment Name\n   * @param detectorName Detector Resource Name\n   * @param options The options parameters.\n   */\n  getHostingEnvironmentDetectorResponse(\n    resourceGroupName: string,\n    name: string,\n    detectorName: string,\n    options?: DiagnosticsGetHostingEnvironmentDetectorResponseOptionalParams,\n  ): Promise<DiagnosticsGetHostingEnvironmentDetectorResponseResponse>;\n  /**\n   * Description for Get site detector response\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param siteName Site Name\n   * @param detectorName Detector Resource Name\n   * @param options The options parameters.\n   */\n  getSiteDetectorResponse(\n    resourceGroupName: string,\n    siteName: string,\n    detectorName: string,\n    options?: DiagnosticsGetSiteDetectorResponseOptionalParams,\n  ): Promise<DiagnosticsGetSiteDetectorResponseResponse>;\n  /**\n   * Description for Get Diagnostics Category\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param siteName Site Name\n   * @param diagnosticCategory Diagnostic Category\n   * @param options The options parameters.\n   */\n  getSiteDiagnosticCategory(\n    resourceGroupName: string,\n    siteName: string,\n    diagnosticCategory: string,\n    options?: DiagnosticsGetSiteDiagnosticCategoryOptionalParams,\n  ): Promise<DiagnosticsGetSiteDiagnosticCategoryResponse>;\n  /**\n   * Description for Get Site Analysis\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param siteName Site Name\n   * @param diagnosticCategory Diagnostic Category\n   * @param analysisName Analysis Name\n   * @param options The options parameters.\n   */\n  getSiteAnalysis(\n    resourceGroupName: string,\n    siteName: string,\n    diagnosticCategory: string,\n    analysisName: string,\n    options?: DiagnosticsGetSiteAnalysisOptionalParams,\n  ): Promise<DiagnosticsGetSiteAnalysisResponse>;\n  /**\n   * Description for Execute Analysis\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param siteName Site Name\n   * @param diagnosticCategory Category Name\n   * @param analysisName Analysis Resource Name\n   * @param options The options parameters.\n   */\n  executeSiteAnalysis(\n    resourceGroupName: string,\n    siteName: string,\n    diagnosticCategory: string,\n    analysisName: string,\n    options?: DiagnosticsExecuteSiteAnalysisOptionalParams,\n  ): Promise<DiagnosticsExecuteSiteAnalysisResponse>;\n  /**\n   * Description for Get Detector\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param siteName Site Name\n   * @param diagnosticCategory Diagnostic Category\n   * @param detectorName Detector Name\n   * @param options The options parameters.\n   */\n  getSiteDetector(\n    resourceGroupName: string,\n    siteName: string,\n    diagnosticCategory: string,\n    detectorName: string,\n    options?: DiagnosticsGetSiteDetectorOptionalParams,\n  ): Promise<DiagnosticsGetSiteDetectorResponse>;\n  /**\n   * Description for Execute Detector\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param siteName Site Name\n   * @param detectorName Detector Resource Name\n   * @param diagnosticCategory Category Name\n   * @param options The options parameters.\n   */\n  executeSiteDetector(\n    resourceGroupName: string,\n    siteName: string,\n    detectorName: string,\n    diagnosticCategory: string,\n    options?: DiagnosticsExecuteSiteDetectorOptionalParams,\n  ): Promise<DiagnosticsExecuteSiteDetectorResponse>;\n  /**\n   * Description for Get site detector response\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param siteName Site Name\n   * @param detectorName Detector Resource Name\n   * @param slot Slot Name\n   * @param options The options parameters.\n   */\n  getSiteDetectorResponseSlot(\n    resourceGroupName: string,\n    siteName: string,\n    detectorName: string,\n    slot: string,\n    options?: DiagnosticsGetSiteDetectorResponseSlotOptionalParams,\n  ): Promise<DiagnosticsGetSiteDetectorResponseSlotResponse>;\n  /**\n   * Description for Get Diagnostics Category\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param siteName Site Name\n   * @param diagnosticCategory Diagnostic Category\n   * @param slot Slot Name\n   * @param options The options parameters.\n   */\n  getSiteDiagnosticCategorySlot(\n    resourceGroupName: string,\n    siteName: string,\n    diagnosticCategory: string,\n    slot: string,\n    options?: DiagnosticsGetSiteDiagnosticCategorySlotOptionalParams,\n  ): Promise<DiagnosticsGetSiteDiagnosticCategorySlotResponse>;\n  /**\n   * Description for Get Site Analysis\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param siteName Site Name\n   * @param diagnosticCategory Diagnostic Category\n   * @param analysisName Analysis Name\n   * @param slot Slot - optional\n   * @param options The options parameters.\n   */\n  getSiteAnalysisSlot(\n    resourceGroupName: string,\n    siteName: string,\n    diagnosticCategory: string,\n    analysisName: string,\n    slot: string,\n    options?: DiagnosticsGetSiteAnalysisSlotOptionalParams,\n  ): Promise<DiagnosticsGetSiteAnalysisSlotResponse>;\n  /**\n   * Description for Execute Analysis\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param siteName Site Name\n   * @param diagnosticCategory Category Name\n   * @param analysisName Analysis Resource Name\n   * @param slot Slot Name\n   * @param options The options parameters.\n   */\n  executeSiteAnalysisSlot(\n    resourceGroupName: string,\n    siteName: string,\n    diagnosticCategory: string,\n    analysisName: string,\n    slot: string,\n    options?: DiagnosticsExecuteSiteAnalysisSlotOptionalParams,\n  ): Promise<DiagnosticsExecuteSiteAnalysisSlotResponse>;\n  /**\n   * Description for Get Detector\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param siteName Site Name\n   * @param diagnosticCategory Diagnostic Category\n   * @param detectorName Detector Name\n   * @param slot Slot Name\n   * @param options The options parameters.\n   */\n  getSiteDetectorSlot(\n    resourceGroupName: string,\n    siteName: string,\n    diagnosticCategory: string,\n    detectorName: string,\n    slot: string,\n    options?: DiagnosticsGetSiteDetectorSlotOptionalParams,\n  ): Promise<DiagnosticsGetSiteDetectorSlotResponse>;\n  /**\n   * Description for Execute Detector\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param siteName Site Name\n   * @param detectorName Detector Resource Name\n   * @param diagnosticCategory Category Name\n   * @param slot Slot Name\n   * @param options The options parameters.\n   */\n  executeSiteDetectorSlot(\n    resourceGroupName: string,\n    siteName: string,\n    detectorName: string,\n    diagnosticCategory: string,\n    slot: string,\n    options?: DiagnosticsExecuteSiteDetectorSlotOptionalParams,\n  ): Promise<DiagnosticsExecuteSiteDetectorSlotResponse>;\n}\n"]}