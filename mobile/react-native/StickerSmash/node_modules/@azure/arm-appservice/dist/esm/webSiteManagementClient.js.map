{"version":3,"file":"webSiteManagementClient.js","sourceRoot":"","sources":["../../src/webSiteManagementClient.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"./pagingHelper.js\";\nimport {\n  AppServiceCertificateOrdersImpl,\n  CertificateOrdersDiagnosticsImpl,\n  CertificateRegistrationProviderImpl,\n  DomainRegistrationProviderImpl,\n  DomainsImpl,\n  TopLevelDomainsImpl,\n  AppServiceEnvironmentsImpl,\n  AppServicePlansImpl,\n  CertificatesImpl,\n  DeletedWebAppsImpl,\n  DiagnosticsImpl,\n  GlobalImpl,\n  KubeEnvironmentsImpl,\n  ProviderImpl,\n  RecommendationsImpl,\n  ResourceHealthMetadataOperationsImpl,\n  GetUsagesInLocationImpl,\n  StaticSitesImpl,\n  WebAppsImpl,\n  WorkflowsImpl,\n  WorkflowRunsImpl,\n  WorkflowRunActionsImpl,\n  WorkflowRunActionRepetitionsImpl,\n  WorkflowRunActionRepetitionsRequestHistoriesImpl,\n  WorkflowRunActionScopeRepetitionsImpl,\n  WorkflowTriggersImpl,\n  WorkflowTriggerHistoriesImpl,\n  WorkflowVersionsImpl,\n} from \"./operations/index.js\";\nimport {\n  AppServiceCertificateOrders,\n  CertificateOrdersDiagnostics,\n  CertificateRegistrationProvider,\n  DomainRegistrationProvider,\n  Domains,\n  TopLevelDomains,\n  AppServiceEnvironments,\n  AppServicePlans,\n  Certificates,\n  DeletedWebApps,\n  Diagnostics,\n  Global,\n  KubeEnvironments,\n  Provider,\n  Recommendations,\n  ResourceHealthMetadataOperations,\n  GetUsagesInLocation,\n  StaticSites,\n  WebApps,\n  Workflows,\n  WorkflowRuns,\n  WorkflowRunActions,\n  WorkflowRunActionRepetitions,\n  WorkflowRunActionRepetitionsRequestHistories,\n  WorkflowRunActionScopeRepetitions,\n  WorkflowTriggers,\n  WorkflowTriggerHistories,\n  WorkflowVersions,\n} from \"./operationsInterfaces/index.js\";\nimport * as Parameters from \"./models/parameters.js\";\nimport * as Mappers from \"./models/mappers.js\";\nimport {\n  WebSiteManagementClientOptionalParams,\n  SourceControl,\n  ListSourceControlsNextOptionalParams,\n  ListSourceControlsOptionalParams,\n  ListSourceControlsResponse,\n  BillingMeter,\n  ListBillingMetersNextOptionalParams,\n  ListBillingMetersOptionalParams,\n  ListBillingMetersResponse,\n  CustomHostnameSites,\n  ListCustomHostNameSitesNextOptionalParams,\n  ListCustomHostNameSitesOptionalParams,\n  ListCustomHostNameSitesResponse,\n  AseRegion,\n  ListAseRegionsNextOptionalParams,\n  ListAseRegionsOptionalParams,\n  ListAseRegionsResponse,\n  GeoRegion,\n  ListGeoRegionsNextOptionalParams,\n  ListGeoRegionsOptionalParams,\n  ListGeoRegionsResponse,\n  Identifier,\n  NameIdentifier,\n  ListSiteIdentifiersAssignedToHostNameNextOptionalParams,\n  ListSiteIdentifiersAssignedToHostNameOptionalParams,\n  ListSiteIdentifiersAssignedToHostNameResponse,\n  PremierAddOnOffer,\n  ListPremierAddOnOffersNextOptionalParams,\n  ListPremierAddOnOffersOptionalParams,\n  ListPremierAddOnOffersResponse,\n  GetPublishingUserOptionalParams,\n  GetPublishingUserResponse,\n  User,\n  UpdatePublishingUserOptionalParams,\n  UpdatePublishingUserResponse,\n  GetSourceControlOptionalParams,\n  GetSourceControlResponse,\n  UpdateSourceControlOptionalParams,\n  UpdateSourceControlResponse,\n  CheckNameResourceTypes,\n  CheckNameAvailabilityOptionalParams,\n  CheckNameAvailabilityResponse,\n  GetSubscriptionDeploymentLocationsOptionalParams,\n  GetSubscriptionDeploymentLocationsResponse,\n  ListSkusOptionalParams,\n  ListSkusResponse,\n  VnetParameters,\n  VerifyHostingEnvironmentVnetOptionalParams,\n  VerifyHostingEnvironmentVnetResponse,\n  CsmMoveResourceEnvelope,\n  MoveOptionalParams,\n  ValidateRequest,\n  ValidateOptionalParams,\n  ValidateOperationResponse,\n  ValidateMoveOptionalParams,\n  ListSourceControlsNextResponse,\n  ListBillingMetersNextResponse,\n  ListCustomHostNameSitesNextResponse,\n  ListAseRegionsNextResponse,\n  ListGeoRegionsNextResponse,\n  ListSiteIdentifiersAssignedToHostNameNextResponse,\n  ListPremierAddOnOffersNextResponse,\n} from \"./models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\nexport class WebSiteManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  subscriptionId?: string;\n  apiVersion: string;\n\n  /**\n   * Initializes a new instance of the WebSiteManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId Your Azure subscription ID. This is a GUID-formatted string (e.g.\n   *                       00000000-0000-0000-0000-000000000000).\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: WebSiteManagementClientOptionalParams,\n  );\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    options?: WebSiteManagementClientOptionalParams,\n  );\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionIdOrOptions?: WebSiteManagementClientOptionalParams | string,\n    options?: WebSiteManagementClientOptionalParams,\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n\n    let subscriptionId: string | undefined;\n\n    if (typeof subscriptionIdOrOptions === \"string\") {\n      subscriptionId = subscriptionIdOrOptions;\n    } else if (typeof subscriptionIdOrOptions === \"object\") {\n      options = subscriptionIdOrOptions;\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: WebSiteManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials,\n    };\n\n    const packageDetails = `azsdk-js-arm-appservice/16.0.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\",\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] =\n        options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName,\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName,\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge,\n          },\n        }),\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2024-04-01\";\n    this.appServiceCertificateOrders = new AppServiceCertificateOrdersImpl(\n      this,\n    );\n    this.certificateOrdersDiagnostics = new CertificateOrdersDiagnosticsImpl(\n      this,\n    );\n    this.certificateRegistrationProvider =\n      new CertificateRegistrationProviderImpl(this);\n    this.domainRegistrationProvider = new DomainRegistrationProviderImpl(this);\n    this.domains = new DomainsImpl(this);\n    this.topLevelDomains = new TopLevelDomainsImpl(this);\n    this.appServiceEnvironments = new AppServiceEnvironmentsImpl(this);\n    this.appServicePlans = new AppServicePlansImpl(this);\n    this.certificates = new CertificatesImpl(this);\n    this.deletedWebApps = new DeletedWebAppsImpl(this);\n    this.diagnostics = new DiagnosticsImpl(this);\n    this.global = new GlobalImpl(this);\n    this.kubeEnvironments = new KubeEnvironmentsImpl(this);\n    this.provider = new ProviderImpl(this);\n    this.recommendations = new RecommendationsImpl(this);\n    this.resourceHealthMetadataOperations =\n      new ResourceHealthMetadataOperationsImpl(this);\n    this.getUsagesInLocation = new GetUsagesInLocationImpl(this);\n    this.staticSites = new StaticSitesImpl(this);\n    this.webApps = new WebAppsImpl(this);\n    this.workflows = new WorkflowsImpl(this);\n    this.workflowRuns = new WorkflowRunsImpl(this);\n    this.workflowRunActions = new WorkflowRunActionsImpl(this);\n    this.workflowRunActionRepetitions = new WorkflowRunActionRepetitionsImpl(\n      this,\n    );\n    this.workflowRunActionRepetitionsRequestHistories =\n      new WorkflowRunActionRepetitionsRequestHistoriesImpl(this);\n    this.workflowRunActionScopeRepetitions =\n      new WorkflowRunActionScopeRepetitionsImpl(this);\n    this.workflowTriggers = new WorkflowTriggersImpl(this);\n    this.workflowTriggerHistories = new WorkflowTriggerHistoriesImpl(this);\n    this.workflowVersions = new WorkflowVersionsImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest,\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      },\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  /**\n   * Description for Gets the source controls available for Azure websites.\n   * @param options The options parameters.\n   */\n  public listSourceControls(\n    options?: ListSourceControlsOptionalParams,\n  ): PagedAsyncIterableIterator<SourceControl> {\n    const iter = this.listSourceControlsPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listSourceControlsPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listSourceControlsPagingPage(\n    options?: ListSourceControlsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<SourceControl[]> {\n    let result: ListSourceControlsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listSourceControls(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listSourceControlsNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listSourceControlsPagingAll(\n    options?: ListSourceControlsOptionalParams,\n  ): AsyncIterableIterator<SourceControl> {\n    for await (const page of this.listSourceControlsPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets a list of meters for a given location.\n   * @param options The options parameters.\n   */\n  public listBillingMeters(\n    options?: ListBillingMetersOptionalParams,\n  ): PagedAsyncIterableIterator<BillingMeter> {\n    const iter = this.listBillingMetersPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBillingMetersPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listBillingMetersPagingPage(\n    options?: ListBillingMetersOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<BillingMeter[]> {\n    let result: ListBillingMetersResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBillingMeters(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBillingMetersNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBillingMetersPagingAll(\n    options?: ListBillingMetersOptionalParams,\n  ): AsyncIterableIterator<BillingMeter> {\n    for await (const page of this.listBillingMetersPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get custom hostnames under this subscription\n   * @param options The options parameters.\n   */\n  public listCustomHostNameSites(\n    options?: ListCustomHostNameSitesOptionalParams,\n  ): PagedAsyncIterableIterator<CustomHostnameSites> {\n    const iter = this.listCustomHostNameSitesPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listCustomHostNameSitesPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listCustomHostNameSitesPagingPage(\n    options?: ListCustomHostNameSitesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<CustomHostnameSites[]> {\n    let result: ListCustomHostNameSitesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listCustomHostNameSites(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listCustomHostNameSitesNext(\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listCustomHostNameSitesPagingAll(\n    options?: ListCustomHostNameSitesOptionalParams,\n  ): AsyncIterableIterator<CustomHostnameSites> {\n    for await (const page of this.listCustomHostNameSitesPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for get a list of available ASE regions and its supported Skus.\n   * @param options The options parameters.\n   */\n  public listAseRegions(\n    options?: ListAseRegionsOptionalParams,\n  ): PagedAsyncIterableIterator<AseRegion> {\n    const iter = this.listAseRegionsPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAseRegionsPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listAseRegionsPagingPage(\n    options?: ListAseRegionsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<AseRegion[]> {\n    let result: ListAseRegionsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAseRegions(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAseRegionsNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAseRegionsPagingAll(\n    options?: ListAseRegionsOptionalParams,\n  ): AsyncIterableIterator<AseRegion> {\n    for await (const page of this.listAseRegionsPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get a list of available geographical regions.\n   * @param options The options parameters.\n   */\n  public listGeoRegions(\n    options?: ListGeoRegionsOptionalParams,\n  ): PagedAsyncIterableIterator<GeoRegion> {\n    const iter = this.listGeoRegionsPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listGeoRegionsPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listGeoRegionsPagingPage(\n    options?: ListGeoRegionsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<GeoRegion[]> {\n    let result: ListGeoRegionsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listGeoRegions(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listGeoRegionsNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listGeoRegionsPagingAll(\n    options?: ListGeoRegionsOptionalParams,\n  ): AsyncIterableIterator<GeoRegion> {\n    for await (const page of this.listGeoRegionsPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List all apps that are assigned to a hostname.\n   * @param nameIdentifier Hostname information.\n   * @param options The options parameters.\n   */\n  public listSiteIdentifiersAssignedToHostName(\n    nameIdentifier: NameIdentifier,\n    options?: ListSiteIdentifiersAssignedToHostNameOptionalParams,\n  ): PagedAsyncIterableIterator<Identifier> {\n    const iter = this.listSiteIdentifiersAssignedToHostNamePagingAll(\n      nameIdentifier,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listSiteIdentifiersAssignedToHostNamePagingPage(\n          nameIdentifier,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listSiteIdentifiersAssignedToHostNamePagingPage(\n    nameIdentifier: NameIdentifier,\n    options?: ListSiteIdentifiersAssignedToHostNameOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Identifier[]> {\n    let result: ListSiteIdentifiersAssignedToHostNameResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listSiteIdentifiersAssignedToHostName(\n        nameIdentifier,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listSiteIdentifiersAssignedToHostNameNext(\n        nameIdentifier,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listSiteIdentifiersAssignedToHostNamePagingAll(\n    nameIdentifier: NameIdentifier,\n    options?: ListSiteIdentifiersAssignedToHostNameOptionalParams,\n  ): AsyncIterableIterator<Identifier> {\n    for await (const page of this.listSiteIdentifiersAssignedToHostNamePagingPage(\n      nameIdentifier,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List all premier add-on offers.\n   * @param options The options parameters.\n   */\n  public listPremierAddOnOffers(\n    options?: ListPremierAddOnOffersOptionalParams,\n  ): PagedAsyncIterableIterator<PremierAddOnOffer> {\n    const iter = this.listPremierAddOnOffersPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPremierAddOnOffersPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listPremierAddOnOffersPagingPage(\n    options?: ListPremierAddOnOffersOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<PremierAddOnOffer[]> {\n    let result: ListPremierAddOnOffersResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listPremierAddOnOffers(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listPremierAddOnOffersNext(\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPremierAddOnOffersPagingAll(\n    options?: ListPremierAddOnOffersOptionalParams,\n  ): AsyncIterableIterator<PremierAddOnOffer> {\n    for await (const page of this.listPremierAddOnOffersPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets publishing user\n   * @param options The options parameters.\n   */\n  getPublishingUser(\n    options?: GetPublishingUserOptionalParams,\n  ): Promise<GetPublishingUserResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getPublishingUserOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates publishing user\n   * @param userDetails Details of publishing user\n   * @param options The options parameters.\n   */\n  updatePublishingUser(\n    userDetails: User,\n    options?: UpdatePublishingUserOptionalParams,\n  ): Promise<UpdatePublishingUserResponse> {\n    return this.sendOperationRequest(\n      { userDetails, options },\n      updatePublishingUserOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the source controls available for Azure websites.\n   * @param options The options parameters.\n   */\n  private _listSourceControls(\n    options?: ListSourceControlsOptionalParams,\n  ): Promise<ListSourceControlsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      listSourceControlsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets source control token\n   * @param sourceControlType Type of source control\n   * @param options The options parameters.\n   */\n  getSourceControl(\n    sourceControlType: string,\n    options?: GetSourceControlOptionalParams,\n  ): Promise<GetSourceControlResponse> {\n    return this.sendOperationRequest(\n      { sourceControlType, options },\n      getSourceControlOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates source control token\n   * @param sourceControlType Type of source control\n   * @param requestMessage Source control token information\n   * @param options The options parameters.\n   */\n  updateSourceControl(\n    sourceControlType: string,\n    requestMessage: SourceControl,\n    options?: UpdateSourceControlOptionalParams,\n  ): Promise<UpdateSourceControlResponse> {\n    return this.sendOperationRequest(\n      { sourceControlType, requestMessage, options },\n      updateSourceControlOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a list of meters for a given location.\n   * @param options The options parameters.\n   */\n  private _listBillingMeters(\n    options?: ListBillingMetersOptionalParams,\n  ): Promise<ListBillingMetersResponse> {\n    return this.sendOperationRequest(\n      { options },\n      listBillingMetersOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Check if a resource name is available.\n   * @param name Resource name to verify.\n   * @param typeParam Resource type used for verification.\n   * @param options The options parameters.\n   */\n  checkNameAvailability(\n    name: string,\n    typeParam: CheckNameResourceTypes,\n    options?: CheckNameAvailabilityOptionalParams,\n  ): Promise<CheckNameAvailabilityResponse> {\n    return this.sendOperationRequest(\n      { name, typeParam, options },\n      checkNameAvailabilityOperationSpec,\n    );\n  }\n\n  /**\n   * Get custom hostnames under this subscription\n   * @param options The options parameters.\n   */\n  private _listCustomHostNameSites(\n    options?: ListCustomHostNameSitesOptionalParams,\n  ): Promise<ListCustomHostNameSitesResponse> {\n    return this.sendOperationRequest(\n      { options },\n      listCustomHostNameSitesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets list of available geo regions plus ministamps\n   * @param options The options parameters.\n   */\n  getSubscriptionDeploymentLocations(\n    options?: GetSubscriptionDeploymentLocationsOptionalParams,\n  ): Promise<GetSubscriptionDeploymentLocationsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getSubscriptionDeploymentLocationsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for get a list of available ASE regions and its supported Skus.\n   * @param options The options parameters.\n   */\n  private _listAseRegions(\n    options?: ListAseRegionsOptionalParams,\n  ): Promise<ListAseRegionsResponse> {\n    return this.sendOperationRequest({ options }, listAseRegionsOperationSpec);\n  }\n\n  /**\n   * Description for Get a list of available geographical regions.\n   * @param options The options parameters.\n   */\n  private _listGeoRegions(\n    options?: ListGeoRegionsOptionalParams,\n  ): Promise<ListGeoRegionsResponse> {\n    return this.sendOperationRequest({ options }, listGeoRegionsOperationSpec);\n  }\n\n  /**\n   * Description for List all apps that are assigned to a hostname.\n   * @param nameIdentifier Hostname information.\n   * @param options The options parameters.\n   */\n  private _listSiteIdentifiersAssignedToHostName(\n    nameIdentifier: NameIdentifier,\n    options?: ListSiteIdentifiersAssignedToHostNameOptionalParams,\n  ): Promise<ListSiteIdentifiersAssignedToHostNameResponse> {\n    return this.sendOperationRequest(\n      { nameIdentifier, options },\n      listSiteIdentifiersAssignedToHostNameOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List all premier add-on offers.\n   * @param options The options parameters.\n   */\n  private _listPremierAddOnOffers(\n    options?: ListPremierAddOnOffersOptionalParams,\n  ): Promise<ListPremierAddOnOffersResponse> {\n    return this.sendOperationRequest(\n      { options },\n      listPremierAddOnOffersOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List all SKUs.\n   * @param options The options parameters.\n   */\n  listSkus(options?: ListSkusOptionalParams): Promise<ListSkusResponse> {\n    return this.sendOperationRequest({ options }, listSkusOperationSpec);\n  }\n\n  /**\n   * Description for Verifies if this VNET is compatible with an App Service Environment by analyzing the\n   * Network Security Group rules.\n   * @param parameters VNET information\n   * @param options The options parameters.\n   */\n  verifyHostingEnvironmentVnet(\n    parameters: VnetParameters,\n    options?: VerifyHostingEnvironmentVnetOptionalParams,\n  ): Promise<VerifyHostingEnvironmentVnetResponse> {\n    return this.sendOperationRequest(\n      { parameters, options },\n      verifyHostingEnvironmentVnetOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Move resources between resource groups.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param moveResourceEnvelope Object that represents the resource to move.\n   * @param options The options parameters.\n   */\n  move(\n    resourceGroupName: string,\n    moveResourceEnvelope: CsmMoveResourceEnvelope,\n    options?: MoveOptionalParams,\n  ): Promise<void> {\n    return this.sendOperationRequest(\n      { resourceGroupName, moveResourceEnvelope, options },\n      moveOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Validate if a resource can be created.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param validateRequest Request with the resources to validate.\n   * @param options The options parameters.\n   */\n  validate(\n    resourceGroupName: string,\n    validateRequest: ValidateRequest,\n    options?: ValidateOptionalParams,\n  ): Promise<ValidateOperationResponse> {\n    return this.sendOperationRequest(\n      { resourceGroupName, validateRequest, options },\n      validateOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Validate whether a resource can be moved.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param moveResourceEnvelope Object that represents the resource to move.\n   * @param options The options parameters.\n   */\n  validateMove(\n    resourceGroupName: string,\n    moveResourceEnvelope: CsmMoveResourceEnvelope,\n    options?: ValidateMoveOptionalParams,\n  ): Promise<void> {\n    return this.sendOperationRequest(\n      { resourceGroupName, moveResourceEnvelope, options },\n      validateMoveOperationSpec,\n    );\n  }\n\n  /**\n   * ListSourceControlsNext\n   * @param nextLink The nextLink from the previous successful call to the ListSourceControls method.\n   * @param options The options parameters.\n   */\n  private _listSourceControlsNext(\n    nextLink: string,\n    options?: ListSourceControlsNextOptionalParams,\n  ): Promise<ListSourceControlsNextResponse> {\n    return this.sendOperationRequest(\n      { nextLink, options },\n      listSourceControlsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListBillingMetersNext\n   * @param nextLink The nextLink from the previous successful call to the ListBillingMeters method.\n   * @param options The options parameters.\n   */\n  private _listBillingMetersNext(\n    nextLink: string,\n    options?: ListBillingMetersNextOptionalParams,\n  ): Promise<ListBillingMetersNextResponse> {\n    return this.sendOperationRequest(\n      { nextLink, options },\n      listBillingMetersNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListCustomHostNameSitesNext\n   * @param nextLink The nextLink from the previous successful call to the ListCustomHostNameSites\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listCustomHostNameSitesNext(\n    nextLink: string,\n    options?: ListCustomHostNameSitesNextOptionalParams,\n  ): Promise<ListCustomHostNameSitesNextResponse> {\n    return this.sendOperationRequest(\n      { nextLink, options },\n      listCustomHostNameSitesNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListAseRegionsNext\n   * @param nextLink The nextLink from the previous successful call to the ListAseRegions method.\n   * @param options The options parameters.\n   */\n  private _listAseRegionsNext(\n    nextLink: string,\n    options?: ListAseRegionsNextOptionalParams,\n  ): Promise<ListAseRegionsNextResponse> {\n    return this.sendOperationRequest(\n      { nextLink, options },\n      listAseRegionsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListGeoRegionsNext\n   * @param nextLink The nextLink from the previous successful call to the ListGeoRegions method.\n   * @param options The options parameters.\n   */\n  private _listGeoRegionsNext(\n    nextLink: string,\n    options?: ListGeoRegionsNextOptionalParams,\n  ): Promise<ListGeoRegionsNextResponse> {\n    return this.sendOperationRequest(\n      { nextLink, options },\n      listGeoRegionsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListSiteIdentifiersAssignedToHostNameNext\n   * @param nameIdentifier Hostname information.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListSiteIdentifiersAssignedToHostName method.\n   * @param options The options parameters.\n   */\n  private _listSiteIdentifiersAssignedToHostNameNext(\n    nameIdentifier: NameIdentifier,\n    nextLink: string,\n    options?: ListSiteIdentifiersAssignedToHostNameNextOptionalParams,\n  ): Promise<ListSiteIdentifiersAssignedToHostNameNextResponse> {\n    return this.sendOperationRequest(\n      { nameIdentifier, nextLink, options },\n      listSiteIdentifiersAssignedToHostNameNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListPremierAddOnOffersNext\n   * @param nextLink The nextLink from the previous successful call to the ListPremierAddOnOffers method.\n   * @param options The options parameters.\n   */\n  private _listPremierAddOnOffersNext(\n    nextLink: string,\n    options?: ListPremierAddOnOffersNextOptionalParams,\n  ): Promise<ListPremierAddOnOffersNextResponse> {\n    return this.sendOperationRequest(\n      { nextLink, options },\n      listPremierAddOnOffersNextOperationSpec,\n    );\n  }\n\n  appServiceCertificateOrders: AppServiceCertificateOrders;\n  certificateOrdersDiagnostics: CertificateOrdersDiagnostics;\n  certificateRegistrationProvider: CertificateRegistrationProvider;\n  domainRegistrationProvider: DomainRegistrationProvider;\n  domains: Domains;\n  topLevelDomains: TopLevelDomains;\n  appServiceEnvironments: AppServiceEnvironments;\n  appServicePlans: AppServicePlans;\n  certificates: Certificates;\n  deletedWebApps: DeletedWebApps;\n  diagnostics: Diagnostics;\n  global: Global;\n  kubeEnvironments: KubeEnvironments;\n  provider: Provider;\n  recommendations: Recommendations;\n  resourceHealthMetadataOperations: ResourceHealthMetadataOperations;\n  getUsagesInLocation: GetUsagesInLocation;\n  staticSites: StaticSites;\n  webApps: WebApps;\n  workflows: Workflows;\n  workflowRuns: WorkflowRuns;\n  workflowRunActions: WorkflowRunActions;\n  workflowRunActionRepetitions: WorkflowRunActionRepetitions;\n  workflowRunActionRepetitionsRequestHistories: WorkflowRunActionRepetitionsRequestHistories;\n  workflowRunActionScopeRepetitions: WorkflowRunActionScopeRepetitions;\n  workflowTriggers: WorkflowTriggers;\n  workflowTriggerHistories: WorkflowTriggerHistories;\n  workflowVersions: WorkflowVersions;\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getPublishingUserOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Web/publishingUsers/web\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.User,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updatePublishingUserOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Web/publishingUsers/web\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.User,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.userDetails,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listSourceControlsOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Web/sourcecontrols\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SourceControlCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSourceControlOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Web/sourcecontrols/{sourceControlType}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SourceControl,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.sourceControlType],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateSourceControlOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Web/sourcecontrols/{sourceControlType}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SourceControl,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.requestMessage,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.sourceControlType],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listBillingMetersOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Web/billingMeters\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BillingMeterCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.billingLocation,\n    Parameters.osType,\n  ],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst checkNameAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Web/checknameavailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceNameAvailability,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: {\n    parameterPath: {\n      name: [\"name\"],\n      typeParam: [\"typeParam\"],\n      isFqdn: [\"options\", \"isFqdn\"],\n      environmentId: [\"options\", \"environmentId\"],\n    },\n    mapper: { ...Mappers.ResourceNameAvailabilityRequest, required: true },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listCustomHostNameSitesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Web/customhostnameSites\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomHostnameSitesCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.hostname],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSubscriptionDeploymentLocationsOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Web/deploymentLocations\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.DeploymentLocations,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [Parameters.$host, Parameters.subscriptionId],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listAseRegionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Web/aseRegions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AseRegionCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listGeoRegionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Web/geoRegions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GeoRegionCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.sku,\n    Parameters.linuxWorkersEnabled,\n    Parameters.xenonWorkersEnabled,\n    Parameters.linuxDynamicWorkersEnabled,\n  ],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSiteIdentifiersAssignedToHostNameOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Web/listSitesAssignedToHostName\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.IdentifierCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.nameIdentifier,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [Parameters.$host, Parameters.subscriptionId],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst listPremierAddOnOffersOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Web/premieraddonoffers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PremierAddOnOfferCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSkusOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Web/skus\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SkuInfos,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst verifyHostingEnvironmentVnetOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Web/verifyHostingEnvironmentVnet\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VnetValidationFailureDetails,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst moveOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/moveResources\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.moveResourceEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst validateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/validate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ValidateResponse,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.validateRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst validateMoveOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/validateMoveResources\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.moveResourceEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listSourceControlsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SourceControlCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listBillingMetersNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BillingMeterCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listCustomHostNameSitesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomHostnameSitesCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAseRegionsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AseRegionCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listGeoRegionsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GeoRegionCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSiteIdentifiersAssignedToHostNameNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.IdentifierCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.nextLink,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst listPremierAddOnOffersNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PremierAddOnOfferCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}