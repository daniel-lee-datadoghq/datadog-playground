{"version":3,"file":"webApps.js","sourceRoot":"","sources":["../../../src/operations/webApps.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAGH,OAAO,EAAE,oBAAoB,EAAE,MAAM,oBAAoB,CAAC;AAE1D,OAAO,KAAK,UAAU,MAAM,oBAAoB,CAAC;AACjD,OAAO,KAAK,OAAO,MAAM,sBAAsB,CAAC;AAChD,OAAO,KAAK,UAAU,MAAM,yBAAyB,CAAC;AAEtD,OAAO,EAGL,gBAAgB,GACjB,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAAE,aAAa,EAAE,MAAM,eAAe,CAAC;AA86B9C,4CAA4C;AAC5C,2CAA2C;AAC3C,MAAM,OAAO,WAAW;IAGtB;;;OAGG;IACH,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;OAGG;IACI,IAAI,CACT,OAAmC;QAEnC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YAChD,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,cAAc,CAC3B,OAAmC,EACnC,QAAuB;;YAEvB,IAAI,MAA2B,CAAC;YAChC,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,CAAC;gBACnC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBAC1D,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,aAAa,CAC1B,OAAmC;;;;gBAEnC,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA,IAAA,+DAAE,CAAC;oBAA/B,cAA4B;oBAA5B,WAA4B;oBAA1C,MAAM,IAAI,KAAA,CAAA;oBACnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;OAIG;IACI,mBAAmB,CACxB,iBAAyB,EACzB,OAAkD;QAElD,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,6BAA6B,CACvC,iBAAiB,EACjB,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,OAAkD,EAClD,QAAuB;;YAEvB,IAAI,MAA0C,CAAC;YAC/C,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBACrE,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,OAAkD;;;;gBAElD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAHqB,cAGxB;oBAHwB,WAGxB;oBAHU,MAAM,IAAI,KAAA,CAAA;oBAInB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,WAAW,CAChB,iBAAyB,EACzB,IAAY,EACZ,OAA0C;QAE1C,MAAM,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QACzE,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,qBAAqB,CAC/B,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,qBAAqB,CAClC,iBAAyB,EACzB,IAAY,EACZ,OAA0C,EAC1C,QAAuB;;YAEvB,IAAI,MAAkC,CAAC;YACvC,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA,CAAC;gBACnE,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,gBAAgB,CAClC,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,oBAAoB,CACjC,iBAAyB,EACzB,IAAY,EACZ,OAA0C;;;;gBAE1C,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,qBAAqB,CACjD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;OAMG;IACI,sCAAsC,CAC3C,iBAAyB,EACzB,IAAY,EACZ,OAAqE;QAErE,MAAM,IAAI,GAAG,IAAI,CAAC,+CAA+C,CAC/D,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,gDAAgD,CAC1D,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,gDAAgD,CAC7D,iBAAyB,EACzB,IAAY,EACZ,OAAqE,EACrE,QAAuB;;YAEvB,IAAI,MAA6D,CAAC;YAClE,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,uCAAuC,CACzD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,2CAA2C,CAC7D,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,+CAA+C,CAC5D,iBAAyB,EACzB,IAAY,EACZ,OAAqE;;;;gBAErE,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,gDAAgD,CAC5E,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,kBAAkB,CACvB,iBAAyB,EACzB,IAAY,EACZ,OAAiD;QAEjD,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAC3C,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,4BAA4B,CACtC,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,IAAY,EACZ,OAAiD,EACjD,QAAuB;;YAEvB,IAAI,MAAyC,CAAC;YAC9C,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA,CAAC;gBAC1E,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,uBAAuB,CACzC,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,2BAA2B,CACxC,iBAAyB,EACzB,IAAY,EACZ,OAAiD;;;;gBAEjD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,4BAA4B,CACxD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,iCAAiC,CACtC,iBAAyB,EACzB,IAAY,EACZ,OAA+D;QAE/D,MAAM,IAAI,GAAG,IAAI,CAAC,yCAAyC,CACzD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,0CAA0C,CACpD,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,0CAA0C,CACvD,iBAAyB,EACzB,IAAY,EACZ,OAA+D,EAC/D,QAAuB;;YAEvB,IAAI,MAAuD,CAAC;YAC5D,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,iCAAiC,CACnD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,qCAAqC,CACvD,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,yCAAyC,CACtD,iBAAyB,EACzB,IAAY,EACZ,OAA+D;;;;gBAE/D,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,0CAA0C,CACtE,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,0CAA0C,CAC/C,iBAAyB,EACzB,IAAY,EACZ,OAAwE;QAExE,MAAM,IAAI,GAAG,IAAI,CAAC,kDAAkD,CAClE,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,mDAAmD,CAC7D,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,mDAAmD,CAChE,iBAAyB,EACzB,IAAY,EACZ,OAAwE,EACxE,QAAuB;;YAEvB,IAAI,MAAgE,CAAC;YACrE,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,0CAA0C,CAC5D,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,8CAA8C,CAChE,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,kDAAkD,CAC/D,iBAAyB,EACzB,IAAY,EACZ,OAAwE;;;;gBAExE,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,mDAAmD,CAC/E,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;OAMG;IACI,6BAA6B,CAClC,iBAAyB,EACzB,IAAY,EACZ,OAA4D;QAE5D,MAAM,IAAI,GAAG,IAAI,CAAC,sCAAsC,CACtD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,uCAAuC,CACjD,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,uCAAuC,CACpD,iBAAyB,EACzB,IAAY,EACZ,OAA4D,EAC5D,QAAuB;;YAEvB,IAAI,MAAoD,CAAC;YACzD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,8BAA8B,CAChD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,kCAAkC,CACpD,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,sCAAsC,CACnD,iBAAyB,EACzB,IAAY,EACZ,OAA4D;;;;gBAE5D,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,uCAAuC,CACnE,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,qBAAqB,CAC1B,iBAAyB,EACzB,IAAY,EACZ,OAAoD;QAEpD,MAAM,IAAI,GAAG,IAAI,CAAC,8BAA8B,CAC9C,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,+BAA+B,CACzC,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,+BAA+B,CAC5C,iBAAyB,EACzB,IAAY,EACZ,OAAoD,EACpD,QAAuB;;YAEvB,IAAI,MAA4C,CAAC;YACjD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,sBAAsB,CACxC,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,0BAA0B,CAC5C,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,8BAA8B,CAC3C,iBAAyB,EACzB,IAAY,EACZ,OAAoD;;;;gBAEpD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,+BAA+B,CAC3D,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,oCAAoC,CACzC,iBAAyB,EACzB,IAAY,EACZ,OAAmE;QAEnE,MAAM,IAAI,GAAG,IAAI,CAAC,6CAA6C,CAC7D,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,8CAA8C,CACxD,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,8CAA8C,CAC3D,iBAAyB,EACzB,IAAY,EACZ,OAAmE,EACnE,QAAuB;;YAEvB,IAAI,MAA2D,CAAC;YAChE,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,qCAAqC,CACvD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,yCAAyC,CAC3D,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,6CAA6C,CAC1D,iBAAyB,EACzB,IAAY,EACZ,OAAmE;;;;gBAEnE,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,8CAA8C,CAC1E,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,eAAe,CACpB,iBAAyB,EACzB,IAAY,EACZ,OAA8C;QAE9C,MAAM,IAAI,GAAG,IAAI,CAAC,wBAAwB,CACxC,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,yBAAyB,CACnC,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,yBAAyB,CACtC,iBAAyB,EACzB,IAAY,EACZ,OAA8C,EAC9C,QAAuB;;YAEvB,IAAI,MAAsC,CAAC;YAC3C,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA,CAAC;gBACvE,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,oBAAoB,CACtC,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,wBAAwB,CACrC,iBAAyB,EACzB,IAAY,EACZ,OAA8C;;;;gBAE9C,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,yBAAyB,CACrD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,8BAA8B,CACnC,iBAAyB,EACzB,IAAY,EACZ,OAA6D;QAE7D,MAAM,IAAI,GAAG,IAAI,CAAC,uCAAuC,CACvD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,wCAAwC,CAClD,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,wCAAwC,CACrD,iBAAyB,EACzB,IAAY,EACZ,OAA6D,EAC7D,QAAuB;;YAEvB,IAAI,MAAqD,CAAC;YAC1D,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,+BAA+B,CACjD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,mCAAmC,CACrD,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,uCAAuC,CACpD,iBAAyB,EACzB,IAAY,EACZ,OAA6D;;;;gBAE7D,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,wCAAwC,CACpE,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,aAAa,CAClB,iBAAyB,EACzB,IAAY,EACZ,OAA4C;QAE5C,MAAM,IAAI,GAAG,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,uBAAuB,CACjC,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,uBAAuB,CACpC,iBAAyB,EACzB,IAAY,EACZ,OAA4C,EAC5C,QAAuB;;YAEvB,IAAI,MAAoC,CAAC;YACzC,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA,CAAC;gBACrE,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,kBAAkB,CACpC,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,sBAAsB,CACnC,iBAAyB,EACzB,IAAY,EACZ,OAA4C;;;;gBAE5C,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,uBAAuB,CACnD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,oBAAoB,CACzB,iBAAyB,EACzB,IAAY,EACZ,OAAmD;QAEnD,MAAM,IAAI,GAAG,IAAI,CAAC,6BAA6B,CAC7C,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,8BAA8B,CACxC,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,8BAA8B,CAC3C,iBAAyB,EACzB,IAAY,EACZ,OAAmD,EACnD,QAAuB;;YAEvB,IAAI,MAA2C,CAAC;YAChD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,qBAAqB,CACvC,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,yBAAyB,CAC3C,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,IAAY,EACZ,OAAmD;;;;gBAEnD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,8BAA8B,CAC1D,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,uBAAuB,CAC5B,iBAAyB,EACzB,IAAY,EACZ,OAAsD;QAEtD,MAAM,IAAI,GAAG,IAAI,CAAC,gCAAgC,CAChD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,iCAAiC,CAC3C,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,iCAAiC,CAC9C,iBAAyB,EACzB,IAAY,EACZ,OAAsD,EACtD,QAAuB;;YAEvB,IAAI,MAA8C,CAAC;YACnD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,4BAA4B,CAC9C,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,gCAAgC,CAC7C,iBAAyB,EACzB,IAAY,EACZ,OAAsD;;;;gBAEtD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,iCAAiC,CAC7D,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;;OAQG;IACI,qBAAqB,CAC1B,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAAoD;QAEpD,MAAM,IAAI,GAAG,IAAI,CAAC,8BAA8B,CAC9C,iBAAiB,EACjB,IAAI,EACJ,UAAU,EACV,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,+BAA+B,CACzC,iBAAiB,EACjB,IAAI,EACJ,UAAU,EACV,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,+BAA+B,CAC5C,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAAoD,EACpD,QAAuB;;YAEvB,IAAI,MAA4C,CAAC;YACjD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,sBAAsB,CACxC,iBAAiB,EACjB,IAAI,EACJ,UAAU,EACV,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,0BAA0B,CAC5C,iBAAiB,EACjB,IAAI,EACJ,UAAU,EACV,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,8BAA8B,CAC3C,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAAoD;;;;gBAEpD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,+BAA+B,CAC3D,iBAAiB,EACjB,IAAI,EACJ,UAAU,EACV,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;;;OASG;IACI,0BAA0B,CAC/B,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,UAAkB,EAClB,OAAyD;QAEzD,MAAM,IAAI,GAAG,IAAI,CAAC,mCAAmC,CACnD,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,UAAU,EACV,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,oCAAoC,CAC9C,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,UAAU,EACV,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,oCAAoC,CACjD,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,UAAkB,EAClB,OAAyD,EACzD,QAAuB;;YAEvB,IAAI,MAAiD,CAAC;YACtD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,2BAA2B,CAC7C,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,UAAU,EACV,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,+BAA+B,CACjD,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,UAAU,EACV,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,mCAAmC,CAChD,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,UAAkB,EAClB,OAAyD;;;;gBAEzD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,oCAAoC,CAChE,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,UAAU,EACV,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBANqB,cAMxB;oBANwB,WAMxB;oBANU,MAAM,IAAI,KAAA,CAAA;oBAOnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;;;OASG;IACI,0BAA0B,CAC/B,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,UAAkB,EAClB,OAAyD;QAEzD,MAAM,IAAI,GAAG,IAAI,CAAC,mCAAmC,CACnD,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,UAAU,EACV,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,oCAAoC,CAC9C,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,UAAU,EACV,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,oCAAoC,CACjD,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,UAAkB,EAClB,OAAyD,EACzD,QAAuB;;YAEvB,IAAI,MAAiD,CAAC;YACtD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,2BAA2B,CAC7C,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,UAAU,EACV,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,+BAA+B,CACjD,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,UAAU,EACV,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,mCAAmC,CAChD,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,UAAkB,EAClB,OAAyD;;;;gBAEzD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,oCAAoC,CAChE,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,UAAU,EACV,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBANqB,cAMxB;oBANwB,WAMxB;oBANU,MAAM,IAAI,KAAA,CAAA;oBAOnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,eAAe,CACpB,iBAAyB,EACzB,IAAY,EACZ,OAA8C;QAE9C,MAAM,IAAI,GAAG,IAAI,CAAC,wBAAwB,CACxC,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,yBAAyB,CACnC,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,yBAAyB,CACtC,iBAAyB,EACzB,IAAY,EACZ,OAA8C,EAC9C,QAAuB;;YAEvB,IAAI,MAAsC,CAAC;YAC3C,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA,CAAC;gBACvE,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,oBAAoB,CACtC,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,wBAAwB,CACrC,iBAAyB,EACzB,IAAY,EACZ,OAA8C;;;;gBAE9C,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,yBAAyB,CACrD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,mBAAmB,CACxB,iBAAyB,EACzB,IAAY,EACZ,OAAkD;QAElD,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAC5C,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,6BAA6B,CACvC,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,IAAY,EACZ,OAAkD,EAClD,QAAuB;;YAEvB,IAAI,MAA0C,CAAC;YAC/C,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,oBAAoB,CACtC,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,IAAY,EACZ,OAAkD;;;;gBAElD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,iCAAiC,CACtC,iBAAyB,EACzB,IAAY,EACZ,OAA+D;QAE/D,MAAM,IAAI,GAAG,IAAI,CAAC,yCAAyC,CACzD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,0CAA0C,CACpD,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,0CAA0C,CACvD,iBAAyB,EACzB,IAAY,EACZ,OAA+D,EAC/D,QAAuB;;YAEvB,IAAI,MAAuD,CAAC;YAC5D,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,iCAAiC,CACnD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,qCAAqC,CACvD,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,yCAAyC,CACtD,iBAAyB,EACzB,IAAY,EACZ,OAA+D;;;;gBAE/D,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,0CAA0C,CACtE,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;OAMG;IACI,aAAa,CAClB,iBAAyB,EACzB,IAAY,EACZ,OAA4C;QAE5C,MAAM,IAAI,GAAG,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,uBAAuB,CACjC,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,uBAAuB,CACpC,iBAAyB,EACzB,IAAY,EACZ,OAA4C,EAC5C,QAAuB;;YAEvB,IAAI,MAAoC,CAAC;YACzC,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA,CAAC;gBACrE,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,kBAAkB,CACpC,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,sBAAsB,CACnC,iBAAyB,EACzB,IAAY,EACZ,OAA4C;;;;gBAE5C,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,uBAAuB,CACnD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;OAOG;IACI,kBAAkB,CACvB,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,OAAiD;QAEjD,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAC3C,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,4BAA4B,CACtC,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,OAAiD,EACjD,QAAuB;;YAEvB,IAAI,MAAyC,CAAC;YAC9C,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,mBAAmB,CACrC,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,uBAAuB,CACzC,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,2BAA2B,CACxC,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,OAAiD;;;;gBAEjD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,4BAA4B,CACxD,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;OAOG;IACI,kBAAkB,CACvB,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,OAAiD;QAEjD,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAC3C,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,4BAA4B,CACtC,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,OAAiD,EACjD,QAAuB;;YAEvB,IAAI,MAAyC,CAAC;YAC9C,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,mBAAmB,CACrC,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,uBAAuB,CACzC,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,2BAA2B,CACxC,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,OAAiD;;;;gBAEjD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,4BAA4B,CACxD,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,sBAAsB,CAC3B,iBAAyB,EACzB,IAAY,EACZ,OAAqD;QAErD,MAAM,IAAI,GAAG,IAAI,CAAC,+BAA+B,CAC/C,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,gCAAgC,CAC1C,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,gCAAgC,CAC7C,iBAAyB,EACzB,IAAY,EACZ,OAAqD,EACrD,QAAuB;;YAEvB,IAAI,MAA6C,CAAC;YAClD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,uBAAuB,CACzC,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,2BAA2B,CAC7C,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,+BAA+B,CAC5C,iBAAyB,EACzB,IAAY,EACZ,OAAqD;;;;gBAErD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,gCAAgC,CAC5D,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,kBAAkB,CACvB,iBAAyB,EACzB,IAAY,EACZ,OAAiD;QAEjD,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAC3C,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,4BAA4B,CACtC,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,IAAY,EACZ,OAAiD,EACjD,QAAuB;;YAEvB,IAAI,MAAyC,CAAC;YAC9C,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA,CAAC;gBAC1E,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,uBAAuB,CACzC,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,2BAA2B,CACxC,iBAAyB,EACzB,IAAY,EACZ,OAAiD;;;;gBAEjD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,4BAA4B,CACxD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,kBAAkB,CACvB,iBAAyB,EACzB,IAAY,EACZ,OAAiD;QAEjD,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAC3C,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,4BAA4B,CACtC,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,IAAY,EACZ,OAAiD,EACjD,QAAuB;;YAEvB,IAAI,MAAyC,CAAC;YAC9C,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA,CAAC;gBAC1E,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,uBAAuB,CACzC,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,2BAA2B,CACxC,iBAAyB,EACzB,IAAY,EACZ,OAAiD;;;;gBAEjD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,4BAA4B,CACxD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,SAAS,CACd,iBAAyB,EACzB,IAAY,EACZ,OAAwC;QAExC,MAAM,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QACvE,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,mBAAmB,CAC7B,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,mBAAmB,CAChC,iBAAyB,EACzB,IAAY,EACZ,OAAwC,EACxC,QAAuB;;YAEvB,IAAI,MAAgC,CAAC;YACrC,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA,CAAC;gBACjE,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,cAAc,CAChC,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,kBAAkB,CAC/B,iBAAyB,EACzB,IAAY,EACZ,OAAwC;;;;gBAExC,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,mBAAmB,CAC/C,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;OAOG;IACI,eAAe,CACpB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA8C;QAE9C,MAAM,IAAI,GAAG,IAAI,CAAC,wBAAwB,CACxC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,yBAAyB,CACnC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,yBAAyB,CACtC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA8C,EAC9C,QAAuB;;YAEvB,IAAI,MAAsC,CAAC;YAC3C,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,gBAAgB,CAClC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,oBAAoB,CACtC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,wBAAwB,CACrC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA8C;;;;gBAE9C,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,yBAAyB,CACrD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;OAOG;IACI,0CAA0C,CAC/C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAyE;QAEzE,MAAM,IAAI,GAAG,IAAI,CAAC,mDAAmD,CACnE,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,oDAAoD,CAC9D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,oDAAoD,CACjE,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAyE,EACzE,QAAuB;;YAEvB,IAAI,MAAiE,CAAC;YACtE,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,2CAA2C,CAC7D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,+CAA+C,CACjE,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,mDAAmD,CAChE,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAyE;;;;gBAEzE,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,oDAAoD,CAChF,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;OAOG;IACI,sBAAsB,CAC3B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAqD;QAErD,MAAM,IAAI,GAAG,IAAI,CAAC,+BAA+B,CAC/C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,gCAAgC,CAC1C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,gCAAgC,CAC7C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAqD,EACrD,QAAuB;;YAEvB,IAAI,MAA6C,CAAC;YAClD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,uBAAuB,CACzC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,2BAA2B,CAC7C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,+BAA+B,CAC5C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAqD;;;;gBAErD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,gCAAgC,CAC5D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;OAMG;IACI,qCAAqC,CAC1C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAmE;QAEnE,MAAM,IAAI,GAAG,IAAI,CAAC,6CAA6C,CAC7D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,8CAA8C,CACxD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,8CAA8C,CAC3D,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAmE,EACnE,QAAuB;;YAEvB,IAAI,MAA2D,CAAC;YAChE,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,qCAAqC,CACvD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,yCAAyC,CAC3D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,6CAA6C,CAC1D,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAmE;;;;gBAEnE,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,8CAA8C,CAC1E,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;OAMG;IACI,8CAA8C,CACnD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA4E;QAE5E,MAAM,IAAI,GAAG,IAAI,CAAC,sDAAsD,CACtE,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,uDAAuD,CACjE,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,uDAAuD,CACpE,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA4E,EAC5E,QAAuB;;YAEvB,IAAI,MAAoE,CAAC;YACzE,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,8CAA8C,CAChE,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,kDAAkD,CACpE,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,sDAAsD,CACnE,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA4E;;;;gBAE5E,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,uDAAuD,CACnF,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;;OAQG;IACI,iCAAiC,CACtC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAgE;QAEhE,MAAM,IAAI,GAAG,IAAI,CAAC,0CAA0C,CAC1D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,2CAA2C,CACrD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,2CAA2C,CACxD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAgE,EAChE,QAAuB;;YAEvB,IAAI,MAAwD,CAAC;YAC7D,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,kCAAkC,CACpD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,sCAAsC,CACxD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,0CAA0C,CACvD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAgE;;;;gBAEhE,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,2CAA2C,CACvE,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;OAOG;IACI,yBAAyB,CAC9B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAwD;QAExD,MAAM,IAAI,GAAG,IAAI,CAAC,kCAAkC,CAClD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,mCAAmC,CAC7C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,mCAAmC,CAChD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAwD,EACxD,QAAuB;;YAEvB,IAAI,MAAgD,CAAC;YACrD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,0BAA0B,CAC5C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,8BAA8B,CAChD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,kCAAkC,CAC/C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAwD;;;;gBAExD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,mCAAmC,CAC/D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;OAOG;IACI,kCAAkC,CACvC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAiE;QAEjE,MAAM,IAAI,GAAG,IAAI,CAAC,2CAA2C,CAC3D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,4CAA4C,CACtD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,4CAA4C,CACzD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAiE,EACjE,QAAuB;;YAEvB,IAAI,MAAyD,CAAC;YAC9D,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,mCAAmC,CACrD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,uCAAuC,CACzD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,2CAA2C,CACxD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAiE;;;;gBAEjE,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,4CAA4C,CACxE,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;OAOG;IACI,mBAAmB,CACxB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAkD;QAElD,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAC5C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,6BAA6B,CACvC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAkD,EAClD,QAAuB;;YAEvB,IAAI,MAA0C,CAAC;YAC/C,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,oBAAoB,CACtC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAkD;;;;gBAElD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;OAOG;IACI,kCAAkC,CACvC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAiE;QAEjE,MAAM,IAAI,GAAG,IAAI,CAAC,2CAA2C,CAC3D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,4CAA4C,CACtD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,4CAA4C,CACzD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAiE,EACjE,QAAuB;;YAEvB,IAAI,MAAyD,CAAC;YAC9D,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,mCAAmC,CACrD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,uCAAuC,CACzD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,2CAA2C,CACxD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAiE;;;;gBAEjE,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,4CAA4C,CACxE,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;OAMG;IACI,yBAAyB,CAC9B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAwD;QAExD,MAAM,IAAI,GAAG,IAAI,CAAC,kCAAkC,CAClD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,mCAAmC,CAC7C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,mCAAmC,CAChD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAwD,EACxD,QAAuB;;YAEvB,IAAI,MAAgD,CAAC;YACrD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,0BAA0B,CAC5C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,8BAA8B,CAChD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,kCAAkC,CAC/C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAwD;;;;gBAExD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,mCAAmC,CAC/D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;OAOG;IACI,wBAAwB,CAC7B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAuD;QAEvD,MAAM,IAAI,GAAG,IAAI,CAAC,iCAAiC,CACjD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,kCAAkC,CAC5C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,kCAAkC,CAC/C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAuD,EACvD,QAAuB;;YAEvB,IAAI,MAA+C,CAAC;YACpD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,yBAAyB,CAC3C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,6BAA6B,CAC/C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,iCAAiC,CAC9C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAuD;;;;gBAEvD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,kCAAkC,CAC9D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;OAOG;IACI,2BAA2B,CAChC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA0D;QAE1D,MAAM,IAAI,GAAG,IAAI,CAAC,oCAAoC,CACpD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,qCAAqC,CAC/C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,qCAAqC,CAClD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA0D,EAC1D,QAAuB;;YAEvB,IAAI,MAAkD,CAAC;YACvD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,4BAA4B,CAC9C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,gCAAgC,CAClD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,oCAAoC,CACjD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA0D;;;;gBAE1D,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,qCAAqC,CACjE,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;;;;OAUG;IACI,yBAAyB,CAC9B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,UAAkB,EAClB,OAAwD;QAExD,MAAM,IAAI,GAAG,IAAI,CAAC,kCAAkC,CAClD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,UAAU,EACV,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,mCAAmC,CAC7C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,UAAU,EACV,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,mCAAmC,CAChD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,UAAkB,EAClB,OAAwD,EACxD,QAAuB;;YAEvB,IAAI,MAAgD,CAAC;YACrD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,0BAA0B,CAC5C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,UAAU,EACV,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,8BAA8B,CAChD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,UAAU,EACV,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,kCAAkC,CAC/C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,UAAkB,EAClB,OAAwD;;;;gBAExD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,mCAAmC,CAC/D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,UAAU,EACV,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBANqB,cAMxB;oBANwB,WAMxB;oBANU,MAAM,IAAI,KAAA,CAAA;oBAOnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;;;;;OAWG;IACI,8BAA8B,CACnC,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,UAAkB,EAClB,OAA6D;QAE7D,MAAM,IAAI,GAAG,IAAI,CAAC,uCAAuC,CACvD,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,UAAU,EACV,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,wCAAwC,CAClD,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,UAAU,EACV,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,wCAAwC,CACrD,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,UAAkB,EAClB,OAA6D,EAC7D,QAAuB;;YAEvB,IAAI,MAAqD,CAAC;YAC1D,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,+BAA+B,CACjD,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,UAAU,EACV,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,mCAAmC,CACrD,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,UAAU,EACV,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,uCAAuC,CACpD,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,UAAkB,EAClB,OAA6D;;;;gBAE7D,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,wCAAwC,CACpE,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,UAAU,EACV,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAPqB,cAOxB;oBAPwB,WAOxB;oBAPU,MAAM,IAAI,KAAA,CAAA;oBAQnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;;;;;OAWG;IACI,8BAA8B,CACnC,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,UAAkB,EAClB,OAA6D;QAE7D,MAAM,IAAI,GAAG,IAAI,CAAC,uCAAuC,CACvD,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,UAAU,EACV,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,wCAAwC,CAClD,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,UAAU,EACV,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,wCAAwC,CACrD,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,UAAkB,EAClB,OAA6D,EAC7D,QAAuB;;YAEvB,IAAI,MAAqD,CAAC;YAC1D,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,+BAA+B,CACjD,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,UAAU,EACV,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,mCAAmC,CACrD,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,UAAU,EACV,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,uCAAuC,CACpD,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,UAAkB,EAClB,OAA6D;;;;gBAE7D,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,wCAAwC,CACpE,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,UAAU,EACV,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAPqB,cAOxB;oBAPwB,WAOxB;oBAPU,MAAM,IAAI,KAAA,CAAA;oBAQnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;OAOG;IACI,mBAAmB,CACxB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAkD;QAElD,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAC5C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,6BAA6B,CACvC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAkD,EAClD,QAAuB;;YAEvB,IAAI,MAA0C,CAAC;YAC/C,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,oBAAoB,CACtC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAkD;;;;gBAElD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;OAMG;IACI,uBAAuB,CAC5B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAsD;QAEtD,MAAM,IAAI,GAAG,IAAI,CAAC,gCAAgC,CAChD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,iCAAiC,CAC3C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,iCAAiC,CAC9C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAsD,EACtD,QAAuB;;YAEvB,IAAI,MAA8C,CAAC;YACnD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,4BAA4B,CAC9C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,gCAAgC,CAC7C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAsD;;;;gBAEtD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,iCAAiC,CAC7D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;OAMG;IACI,qCAAqC,CAC1C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAmE;QAEnE,MAAM,IAAI,GAAG,IAAI,CAAC,6CAA6C,CAC7D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,8CAA8C,CACxD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,8CAA8C,CAC3D,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAmE,EACnE,QAAuB;;YAEvB,IAAI,MAA2D,CAAC;YAChE,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,qCAAqC,CACvD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,yCAAyC,CAC3D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,6CAA6C,CAC1D,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAmE;;;;gBAEnE,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,8CAA8C,CAC1E,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;;OAQG;IACI,iBAAiB,CACtB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAgD;QAEhD,MAAM,IAAI,GAAG,IAAI,CAAC,0BAA0B,CAC1C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,2BAA2B,CACrC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,2BAA2B,CACxC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAgD,EAChD,QAAuB;;YAEvB,IAAI,MAAwC,CAAC;YAC7C,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,kBAAkB,CACpC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,sBAAsB,CACxC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,0BAA0B,CACvC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAgD;;;;gBAEhD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,2BAA2B,CACvD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;;;OASG;IACI,sBAAsB,CAC3B,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,OAAqD;QAErD,MAAM,IAAI,GAAG,IAAI,CAAC,+BAA+B,CAC/C,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,gCAAgC,CAC1C,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,gCAAgC,CAC7C,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,OAAqD,EACrD,QAAuB;;YAEvB,IAAI,MAA6C,CAAC;YAClD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,uBAAuB,CACzC,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,2BAA2B,CAC7C,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,+BAA+B,CAC5C,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,OAAqD;;;;gBAErD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,gCAAgC,CAC5D,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBANqB,cAMxB;oBANwB,WAMxB;oBANU,MAAM,IAAI,KAAA,CAAA;oBAOnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;;;OASG;IACI,sBAAsB,CAC3B,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,OAAqD;QAErD,MAAM,IAAI,GAAG,IAAI,CAAC,+BAA+B,CAC/C,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,gCAAgC,CAC1C,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,gCAAgC,CAC7C,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,OAAqD,EACrD,QAAuB;;YAEvB,IAAI,MAA6C,CAAC;YAClD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,uBAAuB,CACzC,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,2BAA2B,CAC7C,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,+BAA+B,CAC5C,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,OAAqD;;;;gBAErD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,gCAAgC,CAC5D,iBAAiB,EACjB,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBANqB,cAMxB;oBANwB,WAMxB;oBANU,MAAM,IAAI,KAAA,CAAA;oBAOnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;OAOG;IACI,0BAA0B,CAC/B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAyD;QAEzD,MAAM,IAAI,GAAG,IAAI,CAAC,mCAAmC,CACnD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,oCAAoC,CAC9C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,oCAAoC,CACjD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAyD,EACzD,QAAuB;;YAEvB,IAAI,MAAiD,CAAC;YACtD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,2BAA2B,CAC7C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,+BAA+B,CACjD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,mCAAmC,CAChD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAyD;;;;gBAEzD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,oCAAoC,CAChE,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;OAOG;IACI,sBAAsB,CAC3B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAqD;QAErD,MAAM,IAAI,GAAG,IAAI,CAAC,+BAA+B,CAC/C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,gCAAgC,CAC1C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,gCAAgC,CAC7C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAqD,EACrD,QAAuB;;YAEvB,IAAI,MAA6C,CAAC;YAClD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,uBAAuB,CACzC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,2BAA2B,CAC7C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,+BAA+B,CAC5C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAqD;;;;gBAErD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,gCAAgC,CAC5D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;OAOG;IACI,sBAAsB,CAC3B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAqD;QAErD,MAAM,IAAI,GAAG,IAAI,CAAC,+BAA+B,CAC/C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,gCAAgC,CAC1C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,gCAAgC,CAC7C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAqD,EACrD,QAAuB;;YAEvB,IAAI,MAA6C,CAAC;YAClD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,uBAAuB,CACzC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,2BAA2B,CAC7C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,+BAA+B,CAC5C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAqD;;;;gBAErD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,gCAAgC,CAC5D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;;OAQG;IACI,uBAAuB,CAC5B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,cAA6B,EAC7B,OAAsD;QAEtD,MAAM,IAAI,GAAG,IAAI,CAAC,gCAAgC,CAChD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,cAAc,EACd,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,iCAAiC,CAC3C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,cAAc,EACd,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,iCAAiC,CAC9C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,cAA6B,EAC7B,OAAsD,EACtD,QAAuB;;YAEvB,IAAI,MAA8C,CAAC;YACnD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,cAAc,EACd,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,4BAA4B,CAC9C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,cAAc,EACd,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,gCAAgC,CAC7C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,cAA6B,EAC7B,OAAsD;;;;gBAEtD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,iCAAiC,CAC7D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,cAAc,EACd,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBANqB,cAMxB;oBANwB,WAMxB;oBANU,MAAM,IAAI,KAAA,CAAA;oBAOnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;OAMG;IACI,iBAAiB,CACtB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAgD;QAEhD,MAAM,IAAI,GAAG,IAAI,CAAC,0BAA0B,CAC1C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,2BAA2B,CACrC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,2BAA2B,CACxC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAgD,EAChD,QAAuB;;YAEvB,IAAI,MAAwC,CAAC;YAC7C,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,kBAAkB,CACpC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,sBAAsB,CACxC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,0BAA0B,CACvC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAgD;;;;gBAEhD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,2BAA2B,CACvD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;OAMG;IACI,gCAAgC,CACrC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA+D;QAE/D,MAAM,IAAI,GAAG,IAAI,CAAC,yCAAyC,CACzD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,0CAA0C,CACpD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,0CAA0C,CACvD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA+D,EAC/D,QAAuB;;YAEvB,IAAI,MAAuD,CAAC;YAC5D,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,iCAAiC,CACnD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,qCAAqC,CACvD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,yCAAyC,CACtD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA+D;;;;gBAE/D,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,0CAA0C,CACtE,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;OAOG;IACI,wBAAwB,CAC7B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAuD;QAEvD,MAAM,IAAI,GAAG,IAAI,CAAC,iCAAiC,CACjD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,kCAAkC,CAC5C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,kCAAkC,CAC/C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAuD,EACvD,QAAuB;;YAEvB,IAAI,MAA+C,CAAC;YACpD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,yBAAyB,CAC3C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,6BAA6B,CAC/C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,iCAAiC,CAC9C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAuD;;;;gBAEvD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,kCAAkC,CAC9D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;;OAQG;IACI,8BAA8B,CACnC,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,IAAY,EACZ,OAA6D;QAE7D,MAAM,IAAI,GAAG,IAAI,CAAC,uCAAuC,CACvD,iBAAiB,EACjB,IAAI,EACJ,UAAU,EACV,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,wCAAwC,CAClD,iBAAiB,EACjB,IAAI,EACJ,UAAU,EACV,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,wCAAwC,CACrD,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,IAAY,EACZ,OAA6D,EAC7D,QAAuB;;YAEvB,IAAI,MAAqD,CAAC;YAC1D,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,+BAA+B,CACjD,iBAAiB,EACjB,IAAI,EACJ,UAAU,EACV,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,mCAAmC,CACrD,iBAAiB,EACjB,IAAI,EACJ,UAAU,EACV,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,uCAAuC,CACpD,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,IAAY,EACZ,OAA6D;;;;gBAE7D,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,wCAAwC,CACpE,iBAAiB,EACjB,IAAI,EACJ,UAAU,EACV,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBANqB,cAMxB;oBANwB,WAMxB;oBANU,MAAM,IAAI,KAAA,CAAA;oBAOnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;OAOG;IACI,cAAc,CACnB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA6C;QAE7C,MAAM,IAAI,GAAG,IAAI,CAAC,uBAAuB,CACvC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,wBAAwB,CAClC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,wBAAwB,CACrC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA6C,EAC7C,QAAuB;;YAEvB,IAAI,MAAqC,CAAC;YAC1C,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,eAAe,CACjC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,mBAAmB,CACrC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,uBAAuB,CACpC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA6C;;;;gBAE7C,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,wBAAwB,CACpD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;;OAOG;IACI,eAAe,CACpB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA8C;QAE9C,MAAM,IAAI,GAAG,IAAI,CAAC,wBAAwB,CACxC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,yBAAyB,CACnC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,yBAAyB,CACtC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA8C,EAC9C,QAAuB;;YAEvB,IAAI,MAAsC,CAAC;YAC3C,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,gBAAgB,CAClC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,oBAAoB,CACtC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,wBAAwB,CACrC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA8C;;;;gBAE9C,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,yBAAyB,CACrD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;OAMG;IACI,iCAAiC,CACtC,iBAAyB,EACzB,IAAY,EACZ,cAA6B,EAC7B,OAAgE;QAEhE,MAAM,IAAI,GAAG,IAAI,CAAC,0CAA0C,CAC1D,iBAAiB,EACjB,IAAI,EACJ,cAAc,EACd,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,2CAA2C,CACrD,iBAAiB,EACjB,IAAI,EACJ,cAAc,EACd,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,2CAA2C,CACxD,iBAAyB,EACzB,IAAY,EACZ,cAA6B,EAC7B,OAAgE,EAChE,QAAuB;;YAEvB,IAAI,MAAwD,CAAC;YAC7D,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,kCAAkC,CACpD,iBAAiB,EACjB,IAAI,EACJ,cAAc,EACd,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,sCAAsC,CACxD,iBAAiB,EACjB,IAAI,EACJ,cAAc,EACd,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,0CAA0C,CACvD,iBAAyB,EACzB,IAAY,EACZ,cAA6B,EAC7B,OAAgE;;;;gBAEhE,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,2CAA2C,CACvE,iBAAiB,EACjB,IAAI,EACJ,cAAc,EACd,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,aAAa,CAClB,iBAAyB,EACzB,IAAY,EACZ,OAA4C;QAE5C,MAAM,IAAI,GAAG,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,uBAAuB,CACjC,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,uBAAuB,CACpC,iBAAyB,EACzB,IAAY,EACZ,OAA4C,EAC5C,QAAuB;;YAEvB,IAAI,MAAoC,CAAC;YACzC,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA,CAAC;gBACrE,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,kBAAkB,CACpC,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,sBAAsB,CACnC,iBAAyB,EACzB,IAAY,EACZ,OAA4C;;;;gBAE5C,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,uBAAuB,CACnD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,4BAA4B,CACjC,iBAAyB,EACzB,IAAY,EACZ,OAA2D;QAE3D,MAAM,IAAI,GAAG,IAAI,CAAC,qCAAqC,CACrD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,sCAAsC,CAChD,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,sCAAsC,CACnD,iBAAyB,EACzB,IAAY,EACZ,OAA2D,EAC3D,QAAuB;;YAEvB,IAAI,MAAmD,CAAC;YACxD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,6BAA6B,CAC/C,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,iCAAiC,CACnD,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,qCAAqC,CAClD,iBAAyB,EACzB,IAAY,EACZ,OAA2D;;;;gBAE3D,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,sCAAsC,CAClE,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,oBAAoB,CACzB,iBAAyB,EACzB,IAAY,EACZ,OAAmD;QAEnD,MAAM,IAAI,GAAG,IAAI,CAAC,6BAA6B,CAC7C,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,8BAA8B,CACxC,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,8BAA8B,CAC3C,iBAAyB,EACzB,IAAY,EACZ,OAAmD,EACnD,QAAuB;;YAEvB,IAAI,MAA2C,CAAC;YAChD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,qBAAqB,CACvC,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,yBAAyB,CAC3C,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,IAAY,EACZ,OAAmD;;;;gBAEnD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,8BAA8B,CAC1D,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;OAMG;IACI,0BAA0B,CAC/B,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAAyD;QAEzD,MAAM,IAAI,GAAG,IAAI,CAAC,mCAAmC,CACnD,iBAAiB,EACjB,IAAI,EACJ,UAAU,EACV,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,oCAAoC,CAC9C,iBAAiB,EACjB,IAAI,EACJ,UAAU,EACV,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,oCAAoC,CACjD,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAAyD,EACzD,QAAuB;;YAEvB,IAAI,MAAiD,CAAC;YACtD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,2BAA2B,CAC7C,iBAAiB,EACjB,IAAI,EACJ,UAAU,EACV,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,+BAA+B,CACjD,iBAAiB,EACjB,IAAI,EACJ,UAAU,EACV,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,mCAAmC,CAChD,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAAyD;;;;gBAEzD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,oCAAoC,CAChE,iBAAiB,EACjB,IAAI,EACJ,UAAU,EACV,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,UAAU,CACf,iBAAyB,EACzB,IAAY,EACZ,OAAyC;QAEzC,MAAM,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QACxE,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,oBAAoB,CAC9B,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,oBAAoB,CACjC,iBAAyB,EACzB,IAAY,EACZ,OAAyC,EACzC,QAAuB;;YAEvB,IAAI,MAAiC,CAAC;YACtC,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA,CAAC;gBAClE,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,eAAe,CACjC,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,mBAAmB,CAChC,iBAAyB,EACzB,IAAY,EACZ,OAAyC;;;;gBAEzC,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,oBAAoB,CAChD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,WAAW,CAChB,iBAAyB,EACzB,IAAY,EACZ,OAA0C;QAE1C,MAAM,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QACzE,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,qBAAqB,CAC/B,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,qBAAqB,CAClC,iBAAyB,EACzB,IAAY,EACZ,OAA0C,EAC1C,QAAuB;;YAEvB,IAAI,MAAkC,CAAC;YACvC,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA,CAAC;gBACnE,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,gBAAgB,CAClC,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,oBAAoB,CACjC,iBAAyB,EACzB,IAAY,EACZ,OAA0C;;;;gBAE1C,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,qBAAqB,CACjD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;;OAMG;IACI,yBAAyB,CAC9B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAwD;QAExD,MAAM,IAAI,GAAG,IAAI,CAAC,kCAAkC,CAClD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,mCAAmC,CAC7C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,mCAAmC,CAChD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAwD,EACxD,QAAuB;;YAEvB,IAAI,MAAgD,CAAC;YACrD,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,0BAA0B,CAC5C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,CAAC;gBACF,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,8BAA8B,CAChD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,kCAAkC,CAC/C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAwD;;;;gBAExD,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,mCAAmC,CAC/D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBALqB,cAKxB;oBALwB,WAKxB;oBALU,MAAM,IAAI,KAAA,CAAA;oBAMnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;;;OAKG;IACI,aAAa,CAClB,iBAAyB,EACzB,IAAY,EACZ,OAA4C;QAE5C,MAAM,IAAI,GAAG,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAM,EAAE,CAAC,QAAuB,EAAE,EAAE;gBAClC,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;gBACrE,CAAC;gBACD,OAAO,IAAI,CAAC,uBAAuB,CACjC,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,QAAQ,CACT,CAAC;YACJ,CAAC;SACF,CAAC;IACJ,CAAC;IAEc,uBAAuB,CACpC,iBAAyB,EACzB,IAAY,EACZ,OAA4C,EAC5C,QAAuB;;YAEvB,IAAI,MAAoC,CAAC;YACzC,IAAI,iBAAiB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,CAAC;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvB,MAAM,GAAG,cAAM,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA,CAAC;gBACrE,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;YACD,OAAO,iBAAiB,EAAE,CAAC;gBACzB,MAAM,GAAG,cAAM,IAAI,CAAC,kBAAkB,CACpC,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC9B,oBAAoB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAC9C,oBAAM,IAAI,CAAA,CAAC;YACb,CAAC;QACH,CAAC;KAAA;IAEc,sBAAsB,CACnC,iBAAyB,EACzB,IAAY,EACZ,OAA4C;;;;gBAE5C,KAAyB,eAAA,KAAA,cAAA,IAAI,CAAC,uBAAuB,CACnD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAA,IAAA,+DAAE,CAAC;oBAJqB,cAIxB;oBAJwB,WAIxB;oBAJU,MAAM,IAAI,KAAA,CAAA;oBAKnB,cAAA,KAAK,CAAC,CAAC,iBAAA,cAAA,IAAI,CAAA,CAAA,CAAA,CAAC;gBACd,CAAC;;;;;;;;;QACH,CAAC;KAAA;IAED;;;OAGG;IACK,KAAK,CACX,OAAmC;QAEnC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAE,iBAAiB,CAAC,CAAC;IAC1E,CAAC;IAED;;;;OAIG;IACK,oBAAoB,CAC1B,iBAAyB,EACzB,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9B,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,GAAG,CACD,iBAAyB,EACzB,IAAY,EACZ,OAAkC;QAElC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,gBAAgB,CACjB,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,mBAAmB,CACvB,iBAAyB,EACzB,IAAY,EACZ,YAAkB,EAClB,OAA6C;QAO7C,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACU,EAAE;YAC1C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE;YACxD,IAAI,EAAE,2BAA2B;SAClC,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,0BAA0B,CAC9B,iBAAyB,EACzB,IAAY,EACZ,YAAkB,EAClB,OAA6C;QAE7C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,IAAI,EACJ,YAAY,EACZ,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;OAKG;IACH,MAAM,CACJ,iBAAyB,EACzB,IAAY,EACZ,OAAqC;QAErC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,mBAAmB,CACpB,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,MAAM,CACJ,iBAAyB,EACzB,IAAY,EACZ,YAA+B,EAC/B,OAAqC;QAErC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,EAClD,mBAAmB,CACpB,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,qBAAqB,CACnB,iBAAyB,EACzB,IAAY,EACZ,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,kCAAkC,CACnC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,2BAA2B,CACzB,iBAAyB,EACzB,IAAY,EACZ,cAA6B,EAC7B,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,EACpD,wCAAwC,CACzC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,MAAM,CACJ,iBAAyB,EACzB,IAAY,EACZ,OAAsB,EACtB,OAAqC;QAErC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,EAC7C,mBAAmB,CACpB,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,YAAY,CAClB,iBAAyB,EACzB,IAAY,EACZ,OAA0C;QAE1C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,wBAAwB,CACzB,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,eAAe,CACb,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,4BAA4B,CAC7B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,YAAY,CACV,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAA2C;QAE3C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,yBAAyB,CAC1B,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAsB,EACtB,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,EACvD,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,YAAY,CAChB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAuB,EACvB,OAAsC;QAEtC,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACf,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE;YAC7D,IAAI,EAAE,oBAAoB;SAC3B,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAA6B,GAAG,EAAE;YACrE,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,mBAAmB,CACvB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAuB,EACvB,OAAsC;QAEtC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CACpC,iBAAiB,EACjB,IAAI,EACJ,QAAQ,EACR,OAAO,EACP,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;OAMG;IACK,uCAAuC,CAC7C,iBAAyB,EACzB,IAAY,EACZ,OAAqE;QAErE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,mDAAmD,CACpD,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,aAAa,CACX,iBAAyB,EACzB,IAAY,EACZ,OAA4C;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,0BAA0B,CAC3B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,gBAAgB,CACd,iBAAyB,EACzB,IAAY,EACZ,iCAAyE,EACzE,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,iCAAiC,EAAE,OAAO,EAAE,EACvE,6BAA6B,CAC9B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,aAAa,CACX,iBAAyB,EACzB,IAAY,EACZ,OAA4C;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,0BAA0B,CAC3B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,gBAAgB,CACd,iBAAyB,EACzB,IAAY,EACZ,iCAAyE,EACzE,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,iCAAiC,EAAE,OAAO,EAAE,EACvE,6BAA6B,CAC9B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,mBAAmB,CACzB,iBAAyB,EACzB,IAAY,EACZ,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,yBAAyB,CACvB,iBAAyB,EACzB,IAAY,EACZ,WAA6B,EAC7B,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,EACjD,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,kBAAkB,CAChB,iBAAyB,EACzB,IAAY,EACZ,gBAAkC,EAClC,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,gBAAgB,EAAE,OAAO,EAAE,EACtD,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,eAAe,CACb,iBAAyB,EACzB,IAAY,EACZ,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,4BAA4B,CAC7B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,+BAA+B,CAC7B,iBAAyB,EACzB,IAAY,EACZ,OAA8D;QAE9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,4CAA4C,CAC7C,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,kBAAsC,EACtC,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,kBAAkB,EAAE,OAAO,EAAE,EACxD,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,iBAAiB,CACf,iBAAyB,EACzB,IAAY,EACZ,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,8BAA8B,CAC/B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,0BAA0B,CACxB,iBAAyB,EACzB,IAAY,EACZ,oBAA4D,EAC5D,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,oBAAoB,EAAE,OAAO,EAAE,EAC1D,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,wBAAwB,CACtB,iBAAyB,EACzB,IAAY,EACZ,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,yBAAyB,CACvB,iBAAyB,EACzB,IAAY,EACZ,OAAsB,EACtB,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,EAC7C,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,yBAAyB,CACvB,iBAAyB,EACzB,IAAY,EACZ,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,sBAAsB,CACpB,iBAAyB,EACzB,IAAY,EACZ,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,iCAAiC,CACvC,iBAAyB,EACzB,IAAY,EACZ,OAA+D;QAE/D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,6CAA6C,CAC9C,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,8BAA8B,CAC5B,iBAAyB,EACzB,IAAY,EACZ,aAAqB,EACrB,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,EACnD,2CAA2C,CAC5C,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,0CAA0C,CAChD,iBAAyB,EACzB,IAAY,EACZ,OAAwE;QAExE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,sDAAsD,CACvD,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,wCAAwC,CACtC,iBAAyB,EACzB,IAAY,EACZ,mBAA2B,EAC3B,OAAuE;QAEvE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,mBAAmB,EAAE,OAAO,EAAE,EACzD,qDAAqD,CACtD,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,iBAA6C,EAC7C,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,iBAAiB,EAAE,OAAO,EAAE,EACvD,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,qBAAqB,CACnB,iBAAyB,EACzB,IAAY,EACZ,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,kCAAkC,CACnC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,8BAA8B,CAC5B,iBAAyB,EACzB,IAAY,EACZ,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,2CAA2C,CAC5C,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,0BAA0B,CACxB,iBAAyB,EACzB,IAAY,EACZ,cAA8B,EAC9B,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,EACpD,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,cAAc,CACZ,iBAAyB,EACzB,IAAY,EACZ,QAA0B,EAC1B,OAA6C;QAE7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,2BAA2B,CAC5B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,YAAY,CACV,iBAAyB,EACzB,IAAY,EACZ,OAA2C;QAE3C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,yBAAyB,CAC1B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,8BAA8B,CAClC,iBAAyB,EACzB,IAAY,EACZ,OAAwD;QAOxD,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACqB,EAAE;YACrD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE;YAC1C,IAAI,EAAE,sCAAsC;SAC7C,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,qCAAqC,CACzC,iBAAyB,EACzB,IAAY,EACZ,OAAwD;QAExD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,8BAA8B,CACtD,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;OAMG;IACH,sBAAsB,CACpB,iBAAyB,EACzB,IAAY,EACZ,YAA0B,EAC1B,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,EAClD,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,0BAA0B,CACxB,iBAAyB,EACzB,IAAY,EACZ,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,4BAA4B,CAC1B,iBAAyB,EACzB,IAAY,EACZ,eAAwC,EACxC,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,EACrD,yCAAyC,CAC1C,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,gBAAgB,CACd,iBAAyB,EACzB,IAAY,EACZ,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,6BAA6B,CAC9B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,2BAA2B,CACzB,iBAAyB,EACzB,IAAY,EACZ,UAA8B,EAC9B,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAChD,wCAAwC,CACzC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,mBAAmB,CACjB,iBAAyB,EACzB,IAAY,EACZ,UAA8B,EAC9B,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAChD,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,8BAA8B,CACpC,iBAAyB,EACzB,IAAY,EACZ,OAA4D;QAE5D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,0CAA0C,CAC3C,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,wBAAwB,CACtB,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAChD,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,gCAAgC,CAC9B,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAA+D;QAE/D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAChD,6CAA6C,CAC9C,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,mBAAmB,CACjB,iBAAyB,EACzB,IAAY,EACZ,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,sBAAsB,CAC5B,iBAAyB,EACzB,IAAY,EACZ,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,kCAAkC,CACnC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,mBAAmB,CACjB,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAChD,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,sBAAsB,CACpB,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAChD,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,qBAAqB,CACnB,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAChD,kCAAkC,CACnC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAChD,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,qCAAqC,CAC3C,iBAAyB,EACzB,IAAY,EACZ,OAAmE;QAEnE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,iDAAiD,CAClD,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,sCAAsC,CAC1C,iBAAyB,EACzB,IAAY,EACZ,kBAA0B,EAC1B,OAAgE;QAOhE,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EAC6B,EAAE;YAC7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,kBAAkB,EAAE,OAAO,EAAE;YAC9D,IAAI,EAAE,8CAA8C;SACrD,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,6CAA6C,CACjD,iBAAyB,EACzB,IAAY,EACZ,kBAA0B,EAC1B,OAAgE;QAEhE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,sCAAsC,CAC9D,iBAAiB,EACjB,IAAI,EACJ,kBAAkB,EAClB,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;OAKG;IACK,gBAAgB,CACtB,iBAAyB,EACzB,IAAY,EACZ,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,4BAA4B,CAC7B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,aAAa,CACX,iBAAyB,EACzB,IAAY,EACZ,EAAU,EACV,OAA4C;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,EACxC,0BAA0B,CAC3B,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,gBAAgB,CACd,iBAAyB,EACzB,IAAY,EACZ,EAAU,EACV,UAAsB,EACtB,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,EACpD,6BAA6B,CAC9B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,gBAAgB,CACd,iBAAyB,EACzB,IAAY,EACZ,EAAU,EACV,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,EACxC,6BAA6B,CAC9B,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,iBAAiB,CACf,iBAAyB,EACzB,IAAY,EACZ,EAAU,EACV,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,EACxC,8BAA8B,CAC/B,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,cAAc,CACZ,iBAAyB,EACzB,IAAY,EACZ,OAAuB,EACvB,OAA6C;QAE7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,EAC7C,2BAA2B,CAC5B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,+BAA+B,CACrC,iBAAyB,EACzB,IAAY,EACZ,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,2CAA2C,CAC5C,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,4BAA4B,CAC1B,iBAAyB,EACzB,IAAY,EACZ,6BAAqC,EACrC,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,6BAA6B,EAAE,OAAO,EAAE,EACnE,yCAAyC,CAC1C,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,uCAAuC,CACrC,iBAAyB,EACzB,IAAY,EACZ,6BAAqC,EACrC,yBAAqC,EACrC,OAAsE;QAEtE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,6BAA6B;YAC7B,yBAAyB;YACzB,OAAO;SACR,EACD,oDAAoD,CACrD,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,+BAA+B,CAC7B,iBAAyB,EACzB,IAAY,EACZ,6BAAqC,EACrC,OAA8D;QAE9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,6BAA6B,EAAE,OAAO,EAAE,EACnE,4CAA4C,CAC7C,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,+BAA+B,CAC7B,iBAAyB,EACzB,IAAY,EACZ,6BAAqC,EACrC,yBAAqC,EACrC,OAA8D;QAE9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,6BAA6B;YAC7B,yBAAyB;YACzB,OAAO;SACR,EACD,4CAA4C,CAC7C,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,iBAAiB,CACf,iBAAyB,EACzB,IAAY,EACZ,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,8BAA8B,CAC/B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,4BAA4B,CAChC,iBAAyB,EACzB,IAAY,EACZ,QAAkB,EAClB,OAAsD;QAOtD,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACmB,EAAE;YACnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE;YACpD,IAAI,EAAE,oCAAoC;SAC3C,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,mCAAmC,CACvC,iBAAyB,EACzB,IAAY,EACZ,QAAkB,EAClB,OAAsD;QAEtD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,4BAA4B,CACpD,iBAAiB,EACjB,IAAI,EACJ,QAAQ,EACR,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;OAKG;IACH,cAAc,CACZ,iBAAyB,EACzB,IAAY,EACZ,OAA6C;QAE7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,2BAA2B,CAC5B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,kBAAkB,CAChB,iBAAyB,EACzB,IAAY,EACZ,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,wBAAwB,CACtB,iBAAyB,EACzB,IAAY,EACZ,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,cAAc,CACpB,iBAAyB,EACzB,IAAY,EACZ,OAA4C;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,0BAA0B,CAC3B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,sBAAsB,CACpB,iBAAyB,EACzB,IAAY,EACZ,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,WAAW,CACT,iBAAyB,EACzB,IAAY,EACZ,YAAoB,EACpB,OAA0C;QAE1C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,EAClD,wBAAwB,CACzB,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,mBAAmB,CACvB,iBAAyB,EACzB,IAAY,EACZ,YAAoB,EACpB,gBAAkC,EAClC,OAA6C;QAO7C,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACU,EAAE;YAC1C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE;gBACJ,iBAAiB;gBACjB,IAAI;gBACJ,YAAY;gBACZ,gBAAgB;gBAChB,OAAO;aACR;YACD,IAAI,EAAE,2BAA2B;SAClC,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,0BAA0B,CAC9B,iBAAyB,EACzB,IAAY,EACZ,YAAoB,EACpB,gBAAkC,EAClC,OAA6C;QAE7C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,IAAI,EACJ,YAAY,EACZ,gBAAgB,EAChB,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;OAMG;IACH,cAAc,CACZ,iBAAyB,EACzB,IAAY,EACZ,YAAoB,EACpB,OAA6C;QAE7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,EAClD,2BAA2B,CAC5B,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,4BAA4B,CAC1B,iBAAyB,EACzB,IAAY,EACZ,YAAoB,EACpB,OAAe,EACf,GAAY,EACZ,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,EAChE,yCAAyC,CAC1C,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,YAAoB,EACpB,OAAe,EACf,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,OAAO,EAAE,EAC3D,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,gBAAgB,CACd,iBAAyB,EACzB,IAAY,EACZ,YAAoB,EACpB,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,EAClD,6BAA6B,CAC9B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,mBAAmB,CACjB,iBAAyB,EACzB,IAAY,EACZ,YAAoB,EACpB,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,EAClD,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,YAAY,CACV,iBAAyB,EACzB,IAAY,EACZ,OAA2C;QAE3C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,yBAAyB,CAC1B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,cAAc,CACZ,iBAAyB,EACzB,IAAY,EACZ,OAA6C;QAE7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,2BAA2B,CAC5B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,aAAa,CACX,iBAAyB,EACzB,IAAY,EACZ,OAA4C;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,0BAA0B,CAC3B,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,wBAAwB,CACtB,iBAAyB,EACzB,IAAY,EACZ,OAAe,EACf,OAAe,EACf,GAAY,EACZ,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,EAC3D,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,gBAAgB,CACd,iBAAyB,EACzB,IAAY,EACZ,OAAe,EACf,OAAe,EACf,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,EACtD,6BAA6B,CAC9B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,qBAAqB,CAC3B,iBAAyB,EACzB,IAAY,EACZ,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,kBAAkB,CAChB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,6BAA6B,CAC3B,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,eAAgC,EAChC,OAA4D;QAE5D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,EAC/D,0CAA0C,CAC3C,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,qBAAqB,CACnB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,kCAAkC,CACnC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,mBAAmB,CACjB,iBAAyB,EACzB,IAAY,EACZ,aAAqB,EACrB,SAAiB,EACjB,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,OAAO,EAAE,EAC9D,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,8BAA8B,CAC5B,iBAAyB,EACzB,IAAY,EACZ,aAAqB,EACrB,SAAiB,EACjB,kBAAoC,EACpC,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,aAAa;YACb,SAAS;YACT,kBAAkB;YAClB,OAAO;SACR,EACD,2CAA2C,CAC5C,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,sBAAsB,CACpB,iBAAyB,EACzB,IAAY,EACZ,aAAqB,EACrB,SAAiB,EACjB,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,OAAO,EAAE,EAC9D,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,sBAAsB,CACpB,iBAAyB,EACzB,IAAY,EACZ,aAAqB,EACrB,SAAiB,EACjB,kBAAoC,EACpC,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,aAAa;YACb,SAAS;YACT,kBAAkB;YAClB,OAAO;SACR,EACD,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,qBAAqB,CACnB,iBAAyB,EACzB,IAAY,EACZ,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,kCAAkC,CACnC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,2BAA2B,CACzB,iBAAyB,EACzB,IAAY,EACZ,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,wCAAwC,CACzC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,yBAAyB,CACvB,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAChD,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,oCAAoC,CAClC,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,kBAAgD,EAChD,OAAmE;QAEnE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,kBAAkB,EAAE,OAAO,EAAE,EACpE,iDAAiD,CAClD,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,4BAA4B,CAC1B,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAChD,yCAAyC,CAC1C,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,4BAA4B,CAC1B,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,kBAAgD,EAChD,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,kBAAkB,EAAE,OAAO,EAAE,EACpE,yCAAyC,CAC1C,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,wBAAwB,CAC9B,iBAAyB,EACzB,IAAY,EACZ,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,eAAe,CACb,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAChD,4BAA4B,CAC7B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,yBAAyB,CACvB,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAChD,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,oCAAoC,CACxC,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,QAAkB,EAClB,OAA8D;QAO9D,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EAC2B,EAAE;YAC3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE;YAChE,IAAI,EAAE,4CAA4C;SACnD,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,2CAA2C,CAC/C,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,QAAkB,EAClB,OAA8D;QAE9D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,oCAAoC,CAC5D,iBAAiB,EACjB,IAAI,EACJ,UAAU,EACV,QAAQ,EACR,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;OAMG;IACH,sBAAsB,CACpB,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAChD,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,sBAAsB,CAC5B,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAChD,kCAAkC,CACnC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,kBAAkB,CAChB,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,UAAkB,EAClB,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,EAC3D,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,qBAAqB,CACnB,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,UAAkB,EAClB,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,EAC3D,kCAAkC,CACnC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,sBAAsB,CACpB,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,UAAkB,EAClB,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,EAC3D,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACK,2BAA2B,CACjC,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,UAAkB,EAClB,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,EAC3D,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,wBAAwB,CACtB,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,WAAmB,EACnB,UAAkB,EAClB,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,EACxE,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACK,2BAA2B,CACjC,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,UAAkB,EAClB,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,EAC3D,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,WAAW,CACT,iBAAyB,EACzB,IAAY,EACZ,OAA0C;QAE1C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,wBAAwB,CACzB,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,gBAAgB,CACtB,iBAAyB,EACzB,IAAY,EACZ,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,4BAA4B,CAC7B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,wBAAwB,CACtB,iBAAyB,EACzB,IAAY,EACZ,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,gBAAgB,CACd,iBAAyB,EACzB,IAAY,EACZ,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,6BAA6B,CAC9B,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,mBAAmB,CACvB,gBAAwB,EACxB,iBAAyB,EACzB,IAAY,EACZ,gBAAyC,EACzC,OAA6C;QAO7C,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACU,EAAE;YAC1C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE;gBACJ,gBAAgB;gBAChB,iBAAiB;gBACjB,IAAI;gBACJ,gBAAgB;gBAChB,OAAO;aACR;YACD,IAAI,EAAE,2BAA2B;SAClC,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,0BAA0B,CAC9B,gBAAwB,EACxB,iBAAyB,EACzB,IAAY,EACZ,gBAAyC,EACzC,OAA6C;QAE7C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,gBAAgB,EAChB,iBAAiB,EACjB,IAAI,EACJ,gBAAgB,EAChB,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,iBAAiB,CACrB,iBAAyB,EACzB,IAAY,EACZ,wBAA6C,EAC7C,OAA2C;QAO3C,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACQ,EAAE;YACxC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,wBAAwB,EAAE,OAAO,EAAE;YACpE,IAAI,EAAE,yBAAyB;SAChC,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,wBAAwB,CAC5B,iBAAyB,EACzB,IAAY,EACZ,wBAA6C,EAC7C,OAA2C;QAE3C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,iBAAiB,CACzC,iBAAiB,EACjB,IAAI,EACJ,wBAAwB,EACxB,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;OAMG;IACH,qBAAqB,CACnB,iBAAyB,EACzB,IAAY,EACZ,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,kCAAkC,CACnC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,gCAAgC,CAC9B,iBAAyB,EACzB,IAAY,EACZ,OAA+D;QAE/D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,6CAA6C,CAC9C,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,oDAAoD,CAClD,iBAAyB,EACzB,IAAY,EACZ,kBAAuC,EACvC,OAAmF;QAEnF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,kBAAkB,EAAE,OAAO,EAAE,EACxD,iEAAiE,CAClE,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,yBAAyB,CACvB,iBAAyB,EACzB,IAAY,EACZ,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,4CAA4C,CAC1C,iBAAyB,EACzB,IAAY,EACZ,kBAAuC,EACvC,OAA2E;QAE3E,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,kBAAkB,EAAE,OAAO,EAAE,EACxD,yDAAyD,CAC1D,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,mBAAmB,CACjB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,wBAAwB,CACtB,iBAAyB,EACzB,IAAY,EACZ,WAAmB,EACnB,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,EACjD,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,wBAAwB,CACtB,iBAAyB,EACzB,IAAY,EACZ,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,sCAAsC,CAC1C,iBAAyB,EACzB,IAAY,EACZ,OAAgE;QAOhE,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EAC6B,EAAE;YAC7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE;YAC1C,IAAI,EAAE,8CAA8C;SACrD,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,6CAA6C,CACjD,iBAAyB,EACzB,IAAY,EACZ,OAAgE;QAEhE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,sCAAsC,CAC9D,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;OAKG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,gBAAgB,CACd,iBAAyB,EACzB,IAAY,EACZ,WAAmB,EACnB,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,EACjD,6BAA6B,CAC9B,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,0BAA0B,CACxB,iBAAyB,EACzB,IAAY,EACZ,WAAmB,EACnB,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,EACjD,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,kBAAkB,CAChB,iBAAyB,EACzB,IAAY,EACZ,WAAmB,EACnB,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,EACjD,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,iCAAiC,CAC/B,iBAAyB,EACzB,IAAY,EACZ,OAAgE;QAEhE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,8CAA8C,CAC/C,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,oBAAoB,CAC1B,iBAAyB,EACzB,IAAY,EACZ,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,sBAAsB,CACpB,iBAAyB,EACzB,IAAY,EACZ,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,iBAAiB,CACf,iBAAyB,EACzB,IAAY,EACZ,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,8BAA8B,CAC/B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,eAAe,CACb,iBAAyB,EACzB,IAAY,EACZ,gBAAwB,EACxB,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,gBAAgB,EAAE,OAAO,EAAE,EACtD,4BAA4B,CAC7B,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,eAAe,CACb,iBAAyB,EACzB,IAAY,EACZ,gBAAwB,EACxB,YAA0B,EAC1B,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,gBAAgB,EAAE,YAAY,EAAE,OAAO,EAAE,EACpE,4BAA4B,CAC7B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,kBAAkB,CAChB,iBAAyB,EACzB,IAAY,EACZ,gBAAwB,EACxB,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,gBAAgB,EAAE,OAAO,EAAE,EACtD,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,kBAAkB,CAChB,iBAAyB,EACzB,IAAY,EACZ,gBAAwB,EACxB,YAAuC,EACvC,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,gBAAgB,EAAE,YAAY,EAAE,OAAO,EAAE,EACpE,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,gBAAgB,CACd,iBAAyB,EACzB,IAAY,EACZ,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,6BAA6B,CAC9B,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,MAAqB,EACrB,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,EAC5C,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,iCAAiC,CACvC,iBAAyB,EACzB,IAAY,EACZ,OAA+D;QAE/D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,6CAA6C,CAC9C,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,4BAA4B,CAC1B,iBAAyB,EACzB,IAAY,EACZ,6BAAqC,EACrC,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,6BAA6B,EAAE,OAAO,EAAE,EACnE,yCAAyC,CAC1C,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,6CAA6C,CACjD,iBAAyB,EACzB,IAAY,EACZ,6BAAqC,EACrC,sBAAkE,EAClE,OAAuE;QAOvE,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACoC,EAAE;YACpE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE;gBACJ,iBAAiB;gBACjB,IAAI;gBACJ,6BAA6B;gBAC7B,sBAAsB;gBACtB,OAAO;aACR;YACD,IAAI,EAAE,qDAAqD;SAC5D,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,oDAAoD,CACxD,iBAAyB,EACzB,IAAY,EACZ,6BAAqC,EACrC,sBAAkE,EAClE,OAAuE;QAEvE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,6CAA6C,CACrE,iBAAiB,EACjB,IAAI,EACJ,6BAA6B,EAC7B,sBAAsB,EACtB,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,oCAAoC,CACxC,iBAAyB,EACzB,IAAY,EACZ,6BAAqC,EACrC,OAA8D;QAO9D,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EAC2B,EAAE;YAC3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,6BAA6B,EAAE,OAAO,EAAE;YACzE,IAAI,EAAE,4CAA4C;SACnD,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,2CAA2C,CAC/C,iBAAyB,EACzB,IAAY,EACZ,6BAAqC,EACrC,OAA8D;QAE9D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,oCAAoC,CAC5D,iBAAiB,EACjB,IAAI,EACJ,6BAA6B,EAC7B,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;OAKG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,cAAc,CACpB,iBAAyB,EACzB,IAAY,EACZ,OAA4C;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,0BAA0B,CAC3B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,UAAU,CACR,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,OAAyC;QAEzC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,EAC/C,uBAAuB,CACxB,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,aAAa,CACX,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,OAA4C;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,EAC/C,0BAA0B,CAC3B,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,cAAc,CACZ,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,OAA6C;QAE7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,EAC/C,2BAA2B,CAC5B,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,mBAAmB,CACzB,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,EAC/C,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,gBAAgB,CACd,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,WAAmB,EACnB,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,EAC5D,6BAA6B,CAC9B,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,mBAAmB,CACzB,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,EAC/C,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,uBAAuB,CAC7B,iBAAyB,EACzB,IAAY,EACZ,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,qBAA6B,EAC7B,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,qBAAqB,EAAE,OAAO,EAAE,EAC3D,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,+BAA+B,CAC7B,iBAAyB,EACzB,IAAY,EACZ,qBAA6B,EAC7B,iBAAoC,EACpC,OAA8D;QAE9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;SACR,EACD,4CAA4C,CAC7C,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,qBAA6B,EAC7B,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,qBAAqB,EAAE,OAAO,EAAE,EAC3D,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,mCAAmC,CACjC,iBAAyB,EACzB,IAAY,EACZ,wBAAqD,EACrD,OAAkE;QAElE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,wBAAwB,EAAE,OAAO,EAAE,EAC9D,gDAAgD,CACjD,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,yBAAyB,CACvB,iBAAyB,EACzB,IAAY,EACZ,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,OAAO,CACL,iBAAyB,EACzB,IAAY,EACZ,OAAsC;QAEtC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,oBAAoB,CACrB,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,0BAA0B,CAC9B,iBAAyB,EACzB,IAAY,EACZ,OAAuB,EACvB,OAAoD;QAEpD,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACf,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;YACnD,IAAI,EAAE,kCAAkC;SACzC,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAA6B,GAAG,EAAE;YACrE,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,iCAAiC,CACrC,iBAAyB,EACzB,IAAY,EACZ,OAAuB,EACvB,OAAoD;QAEpD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,0BAA0B,CAClD,iBAAiB,EACjB,IAAI,EACJ,OAAO,EACP,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,0BAA0B,CAC9B,iBAAyB,EACzB,IAAY,EACZ,cAAwC,EACxC,OAAoD;QAEpD,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACf,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE;YAC1D,IAAI,EAAE,kCAAkC;SACzC,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAA6B,GAAG,EAAE;YACrE,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,iCAAiC,CACrC,iBAAyB,EACzB,IAAY,EACZ,cAAwC,EACxC,OAAoD;QAEpD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,0BAA0B,CAClD,iBAAiB,EACjB,IAAI,EACJ,cAAc,EACd,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,oBAAoB,CACxB,iBAAyB,EACzB,IAAY,EACZ,cAAsC,EACtC,OAA8C;QAE9C,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACf,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE;YAC1D,IAAI,EAAE,4BAA4B;SACnC,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAA6B,GAAG,EAAE;YACrE,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,2BAA2B,CAC/B,iBAAyB,EACzB,IAAY,EACZ,cAAsC,EACtC,OAA8C;QAE9C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAC5C,iBAAiB,EACjB,IAAI,EACJ,cAAc,EACd,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;OAKG;IACK,mBAAmB,CACzB,iBAAyB,EACzB,IAAY,EACZ,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,gBAAgB,CACd,iBAAyB,EACzB,IAAY,EACZ,aAAqB,EACrB,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,EACnD,6BAA6B,CAC9B,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,2BAA2B,CACzB,iBAAyB,EACzB,IAAY,EACZ,aAAqB,EACrB,OAAsB,EACtB,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,OAAO,EAAE,EAC5D,wCAAwC,CACzC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,mBAAmB,CACjB,iBAAyB,EACzB,IAAY,EACZ,aAAqB,EACrB,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,EACnD,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,mBAAmB,CACzB,iBAAyB,EACzB,IAAY,EACZ,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,gBAAgB,CACd,iBAAyB,EACzB,IAAY,EACZ,eAAuB,EACvB,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,EACrD,6BAA6B,CAC9B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,yBAAyB,CAC7B,iBAAyB,EACzB,IAAY,EACZ,eAAuB,EACvB,OAAmD;QAOnD,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACgB,EAAE;YAChD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE;YAC3D,IAAI,EAAE,iCAAiC;SACxC,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,gCAAgC,CACpC,iBAAyB,EACzB,IAAY,EACZ,eAAuB,EACvB,OAAmD;QAEnD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,yBAAyB,CACjD,iBAAiB,EACjB,IAAI,EACJ,eAAe,EACf,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;OAMG;IACH,mBAAmB,CACjB,iBAAyB,EACzB,IAAY,EACZ,eAAuB,EACvB,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,EACrD,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,UAAU,CAChB,iBAAyB,EACzB,IAAY,EACZ,OAAwC;QAExC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,sBAAsB,CACvB,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,OAAO,CACL,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAsC;QAEtC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,oBAAoB,CACrB,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG;IACH,KAAK,CAAC,uBAAuB,CAC3B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,YAAkB,EAClB,OAAiD;QAOjD,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACc,EAAE;YAC9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE;YAC9D,IAAI,EAAE,+BAA+B;SACtC,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;;;;OAUG;IACH,KAAK,CAAC,8BAA8B,CAClC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,YAAkB,EAClB,OAAiD;QAEjD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAC/C,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,YAAY,EACZ,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;OAMG;IACH,UAAU,CACR,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAyC;QAEzC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,uBAAuB,CACxB,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG;IACH,UAAU,CACR,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,YAA+B,EAC/B,OAAyC;QAEzC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,EACxD,uBAAuB,CACxB,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,yBAAyB,CACvB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,0BAA0B,CACxB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,cAA6B,EAC7B,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,EAC1D,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,UAAU,CACR,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAsB,EACtB,OAAyC;QAEzC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,EACnD,uBAAuB,CACxB,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,gBAAgB,CACtB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,4BAA4B,CAC7B,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,mBAAmB,CACjB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,IAAY,EACZ,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,EACpD,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,gBAAgB,CACd,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,IAAY,EACZ,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,EACpD,6BAA6B,CAC9B,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG;IACH,2BAA2B,CACzB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,IAAY,EACZ,OAAsB,EACtB,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,EAC7D,wCAAwC,CACzC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,KAAK,CAAC,gBAAgB,CACpB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,IAAY,EACZ,OAAuB,EACvB,OAA0C;QAE1C,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACf,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;YACnE,IAAI,EAAE,wBAAwB;SAC/B,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAA6B,GAAG,EAAE;YACrE,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;;;OASG;IACH,KAAK,CAAC,uBAAuB,CAC3B,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,IAAY,EACZ,OAAuB,EACvB,OAA0C;QAE1C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,gBAAgB,CACxC,iBAAiB,EACjB,IAAI,EACJ,QAAQ,EACR,IAAI,EACJ,OAAO,EACP,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;;OAOG;IACK,2CAA2C,CACjD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAyE;QAEzE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,uDAAuD,CACxD,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,iBAAiB,CACf,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,8BAA8B,CAC/B,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,iCAAyE,EACzE,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,IAAI;YACJ,iCAAiC;YACjC,OAAO;SACR,EACD,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,iBAAiB,CACf,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,8BAA8B,CAC/B,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,iCAAyE,EACzE,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,IAAI;YACJ,iCAAiC;YACjC,OAAO;SACR,EACD,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,uBAAuB,CAC7B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,6BAA6B,CAC3B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,WAA6B,EAC7B,OAA4D;QAE5D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,EACvD,0CAA0C,CAC3C,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,2BAA2B,CACzB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,wCAAwC,CACzC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,sBAAsB,CACpB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,gBAAkC,EAClC,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAC5D,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,mBAAmB,CACjB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,mCAAmC,CACjC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAkE;QAElE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,gDAAgD,CACjD,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,wBAAwB,CACtB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,kBAAsC,EACtC,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,kBAAkB,EAAE,OAAO,EAAE,EAC9D,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,qBAAqB,CACnB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,kCAAkC,CACnC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,8BAA8B,CAC5B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,oBAA4D,EAC5D,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,oBAAoB,EAAE,OAAO,EAAE,EAChE,2CAA2C,CAC5C,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,4BAA4B,CAC1B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,yCAAyC,CAC1C,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,6BAA6B,CAC3B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAsB,EACtB,OAA4D;QAE5D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,EACnD,0CAA0C,CAC3C,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,6BAA6B,CAC3B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA4D;QAE5D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,0CAA0C,CAC3C,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,0BAA0B,CACxB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,qCAAqC,CAC3C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAmE;QAEnE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,iDAAiD,CAClD,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,kCAAkC,CAChC,iBAAyB,EACzB,IAAY,EACZ,aAAqB,EACrB,IAAY,EACZ,OAAiE;QAEjE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,OAAO,EAAE,EACzD,+CAA+C,CAChD,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,8CAA8C,CACpD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA4E;QAE5E,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,0DAA0D,CAC3D,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,4CAA4C,CAC1C,iBAAyB,EACzB,IAAY,EACZ,mBAA2B,EAC3B,IAAY,EACZ,OAA2E;QAE3E,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,OAAO,EAAE,EAC/D,yDAAyD,CAC1D,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,2BAA2B,CACzB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,iBAA6C,EAC7C,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC7D,wCAAwC,CACzC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,yBAAyB,CACvB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,kCAAkC,CAChC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAiE;QAEjE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,+CAA+C,CAChD,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,8BAA8B,CAC5B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,cAA8B,EAC9B,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,EAC1D,2CAA2C,CAC5C,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,kBAAkB,CAChB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAA0B,EAC1B,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,gBAAgB,CACd,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,6BAA6B,CAC9B,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,kCAAkC,CACtC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA4D;QAO5D,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACyB,EAAE;YACzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE;YAChD,IAAI,EAAE,0CAA0C;SACjD,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,yCAAyC,CAC7C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA4D;QAE5D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,kCAAkC,CAC1D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;;OAOG;IACH,0BAA0B,CACxB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,YAA0B,EAC1B,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,EACxD,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,wBAAwB,CACtB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,+BAA+B,CAC7B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,UAA8B,EAC9B,OAA8D;QAE9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EACtD,4CAA4C,CAC7C,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,UAA8B,EAC9B,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EACtD,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,kCAAkC,CACxC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAgE;QAEhE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,8CAA8C,CAC/C,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,4BAA4B,CAC1B,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,IAAY,EACZ,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,EACtD,yCAAyC,CAC1C,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,oCAAoC,CAClC,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,IAAY,EACZ,OAAmE;QAEnE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,EACtD,iDAAiD,CAClD,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,2BAA2B,CACzB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,wCAAwC,CACzC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,0BAA0B,CAChC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,IAAY,EACZ,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,EACtD,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,0BAA0B,CACxB,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,IAAY,EACZ,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,EACtD,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,yBAAyB,CACvB,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,IAAY,EACZ,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,EACtD,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,wBAAwB,CACtB,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,IAAY,EACZ,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,EACtD,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,mCAAmC,CACzC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAiE;QAEjE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,+CAA+C,CAChD,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,oCAAoC,CACxC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,kBAA0B,EAC1B,OAA8D;QAO9D,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EAC2B,EAAE;YAC3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,kBAAkB,EAAE,OAAO,EAAE;YACpE,IAAI,EAAE,4CAA4C;SACnD,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,2CAA2C,CAC/C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,kBAA0B,EAC1B,OAA8D;QAE9D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,oCAAoC,CAC5D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,kBAAkB,EAClB,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;;OAOG;IACK,oBAAoB,CAC1B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,iBAAiB,CACf,iBAAyB,EACzB,IAAY,EACZ,EAAU,EACV,IAAY,EACZ,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,EAC9C,8BAA8B,CAC/B,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,EAAU,EACV,IAAY,EACZ,UAAsB,EACtB,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1D,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,EAAU,EACV,IAAY,EACZ,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,EAC9C,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,qBAAqB,CACnB,iBAAyB,EACzB,IAAY,EACZ,EAAU,EACV,IAAY,EACZ,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,EAC9C,kCAAkC,CACnC,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG;IACH,kBAAkB,CAChB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAuB,EACvB,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,EACnD,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,mCAAmC,CACzC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAiE;QAEjE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,+CAA+C,CAChD,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,gCAAgC,CAC9B,iBAAyB,EACzB,IAAY,EACZ,6BAAqC,EACrC,IAAY,EACZ,OAA+D;QAE/D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,6BAA6B,EAAE,IAAI,EAAE,OAAO,EAAE,EACzE,6CAA6C,CAC9C,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG;IACH,2CAA2C,CACzC,iBAAyB,EACzB,IAAY,EACZ,6BAAqC,EACrC,IAAY,EACZ,yBAAqC,EACrC,OAA0E;QAE1E,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,6BAA6B;YAC7B,IAAI;YACJ,yBAAyB;YACzB,OAAO;SACR,EACD,wDAAwD,CACzD,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,mCAAmC,CACjC,iBAAyB,EACzB,IAAY,EACZ,6BAAqC,EACrC,IAAY,EACZ,OAAkE;QAElE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,6BAA6B,EAAE,IAAI,EAAE,OAAO,EAAE,EACzE,gDAAgD,CACjD,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG;IACH,mCAAmC,CACjC,iBAAyB,EACzB,IAAY,EACZ,6BAAqC,EACrC,IAAY,EACZ,yBAAqC,EACrC,OAAkE;QAElE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,6BAA6B;YAC7B,IAAI;YACJ,yBAAyB;YACzB,OAAO;SACR,EACD,gDAAgD,CACjD,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,qBAAqB,CACnB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,kCAAkC,CACnC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,gCAAgC,CACpC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAkB,EAClB,OAA0D;QAO1D,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACuB,EAAE;YACvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE;YAC1D,IAAI,EAAE,wCAAwC;SAC/C,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,uCAAuC,CAC3C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAkB,EAClB,OAA0D;QAE1D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,gCAAgC,CACxD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,QAAQ,EACR,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;OAMG;IACH,kBAAkB,CAChB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,0BAA0B,CAChC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,0BAA0B,CACxB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,YAAoB,EACpB,IAAY,EACZ,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,OAAO,EAAE,EACxD,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,+BAA+B,CACnC,iBAAyB,EACzB,IAAY,EACZ,YAAoB,EACpB,IAAY,EACZ,gBAAkC,EAClC,OAAyD;QAOzD,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACsB,EAAE;YACtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE;gBACJ,iBAAiB;gBACjB,IAAI;gBACJ,YAAY;gBACZ,IAAI;gBACJ,gBAAgB;gBAChB,OAAO;aACR;YACD,IAAI,EAAE,uCAAuC;SAC9C,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,sCAAsC,CAC1C,iBAAyB,EACzB,IAAY,EACZ,YAAoB,EACpB,IAAY,EACZ,gBAAkC,EAClC,OAAyD;QAEzD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,+BAA+B,CACvD,iBAAiB,EACjB,IAAI,EACJ,YAAY,EACZ,IAAI,EACJ,gBAAgB,EAChB,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;;OAOG;IACH,0BAA0B,CACxB,iBAAyB,EACzB,IAAY,EACZ,YAAoB,EACpB,IAAY,EACZ,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,OAAO,EAAE,EACxD,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,gCAAgC,CAC9B,iBAAyB,EACzB,IAAY,EACZ,YAAoB,EACpB,OAAe,EACf,IAAY,EACZ,GAAY,EACZ,OAA+D;QAE/D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,EACtE,6CAA6C,CAC9C,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,wBAAwB,CACtB,iBAAyB,EACzB,IAAY,EACZ,YAAoB,EACpB,OAAe,EACf,IAAY,EACZ,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,EACjE,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,YAAoB,EACpB,IAAY,EACZ,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,OAAO,EAAE,EACxD,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,YAAoB,EACpB,IAAY,EACZ,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,OAAO,EAAE,EACxD,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,gBAAgB,CACd,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,6BAA6B,CAC9B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,kBAAkB,CAChB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,iBAAiB,CACf,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,8BAA8B,CAC/B,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,4BAA4B,CAC1B,iBAAyB,EACzB,IAAY,EACZ,OAAe,EACf,OAAe,EACf,IAAY,EACZ,GAAY,EACZ,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,EACjE,yCAAyC,CAC1C,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,OAAe,EACf,OAAe,EACf,IAAY,EACZ,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,EAC5D,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,yBAAyB,CAC/B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,sBAAsB,CACpB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,iCAAiC,CAC/B,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,IAAY,EACZ,eAAgC,EAChC,OAAgE;QAEhE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,EACrE,8CAA8C,CAC/C,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,yBAAyB,CACvB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,aAAqB,EACrB,SAAiB,EACjB,IAAY,EACZ,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,EACpE,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,kCAAkC,CAChC,iBAAyB,EACzB,IAAY,EACZ,aAAqB,EACrB,SAAiB,EACjB,IAAY,EACZ,kBAAoC,EACpC,OAAiE;QAEjE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,aAAa;YACb,SAAS;YACT,IAAI;YACJ,kBAAkB;YAClB,OAAO;SACR,EACD,+CAA+C,CAChD,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,0BAA0B,CACxB,iBAAyB,EACzB,IAAY,EACZ,aAAqB,EACrB,SAAiB,EACjB,IAAY,EACZ,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,EACpE,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,0BAA0B,CACxB,iBAAyB,EACzB,IAAY,EACZ,aAAqB,EACrB,SAAiB,EACjB,IAAY,EACZ,kBAAoC,EACpC,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,aAAa;YACb,SAAS;YACT,IAAI;YACJ,kBAAkB;YAClB,OAAO;SACR,EACD,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,yBAAyB,CACvB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,+BAA+B,CAC7B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA8D;QAE9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,4CAA4C,CAC7C,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,6BAA6B,CAC3B,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,IAAY,EACZ,OAA4D;QAE5D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,EACtD,0CAA0C,CAC3C,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG;IACH,wCAAwC,CACtC,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,IAAY,EACZ,kBAAgD,EAChD,OAAuE;QAEvE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,UAAU;YACV,IAAI;YACJ,kBAAkB;YAClB,OAAO;SACR,EACD,qDAAqD,CACtD,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,gCAAgC,CAC9B,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,IAAY,EACZ,OAA+D;QAE/D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,EACtD,6CAA6C,CAC9C,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG;IACH,gCAAgC,CAC9B,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,IAAY,EACZ,kBAAgD,EAChD,OAA+D;QAE/D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,UAAU;YACV,IAAI;YACJ,kBAAkB;YAClB,OAAO;SACR,EACD,6CAA6C,CAC9C,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,4BAA4B,CAClC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,wCAAwC,CACzC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,mBAAmB,CACjB,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,IAAY,EACZ,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,EACtD,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,6BAA6B,CAC3B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,UAAkB,EAClB,OAA4D;QAE5D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EACtD,0CAA0C,CAC3C,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,wCAAwC,CAC5C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,UAAkB,EAClB,QAAkB,EAClB,OAAkE;QAOlE,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EAC+B,EAAE;YAC/D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE;YACtE,IAAI,EAAE,gDAAgD;SACvD,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,+CAA+C,CACnD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,UAAkB,EAClB,QAAkB,EAClB,OAAkE;QAElE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,wCAAwC,CAChE,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,UAAU,EACV,QAAQ,EACR,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;;OAOG;IACH,0BAA0B,CACxB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,UAAkB,EAClB,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EACtD,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG;IACK,0BAA0B,CAChC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,UAAkB,EAClB,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EACtD,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG;IACH,sBAAsB,CACpB,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,UAAkB,EAClB,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EACjE,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;;;;;;OAWG;IACH,yBAAyB,CACvB,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,UAAkB,EAClB,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EACjE,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;;;;;;;OAWG;IACH,0BAA0B,CACxB,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,UAAkB,EAClB,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EACjE,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;;;;;;OAWG;IACK,+BAA+B,CACrC,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,UAAkB,EAClB,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EACjE,2CAA2C,CAC5C,CAAC;IACJ,CAAC;IAED;;;;;;;;;;;OAWG;IACH,4BAA4B,CAC1B,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,WAAmB,EACnB,IAAY,EACZ,UAAkB,EAClB,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,SAAS;YACT,WAAW;YACX,IAAI;YACJ,UAAU;YACV,OAAO;SACR,EACD,yCAAyC,CAC1C,CAAC;IACJ,CAAC;IAED;;;;;;;;;;;OAWG;IACK,+BAA+B,CACrC,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,UAAkB,EAClB,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EACjE,2CAA2C,CAC5C,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,eAAe,CACb,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,4BAA4B,CAC7B,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,oBAAoB,CAC1B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,4BAA4B,CAC1B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,yCAAyC,CAC1C,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,yBAAyB,CACvB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,oCAAoC,CAClC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAmE;QAEnE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,iDAAiD,CAClD,CAAC;IACJ,CAAC;IAED;;;;;;;;;;;OAWG;IACH,wDAAwD,CACtD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,kBAAuC,EACvC,OAAuF;QAEvF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,kBAAkB,EAAE,OAAO,EAAE,EAC9D,qEAAqE,CACtE,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,6BAA6B,CAC3B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA4D;QAE5D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,0CAA0C,CAC3C,CAAC;IACJ,CAAC;IAED;;;;;;;;;;;OAWG;IACH,gDAAgD,CAC9C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,kBAAuC,EACvC,OAA+E;QAE/E,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,kBAAkB,EAAE,OAAO,EAAE,EAC9D,6DAA6D,CAC9D,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,IAAY,EACZ,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAChD,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,4BAA4B,CAC1B,iBAAyB,EACzB,IAAY,EACZ,WAAmB,EACnB,IAAY,EACZ,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,EACvD,yCAAyC,CAC1C,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,4BAA4B,CAC1B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,yCAAyC,CAC1C,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,0CAA0C,CAC9C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAoE;QAOpE,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACiC,EAAE;YACjE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE;YAChD,IAAI,EAAE,kDAAkD;SACzD,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,iDAAiD,CACrD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAoE;QAEpE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,0CAA0C,CAClE,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;OAMG;IACH,2BAA2B,CACzB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,wCAAwC,CACzC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,WAAmB,EACnB,IAAY,EACZ,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,EACvD,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,8BAA8B,CAC5B,iBAAyB,EACzB,IAAY,EACZ,WAAmB,EACnB,IAAY,EACZ,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,EACvD,2CAA2C,CAC5C,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,sBAAsB,CACpB,iBAAyB,EACzB,IAAY,EACZ,WAAmB,EACnB,IAAY,EACZ,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,EACvD,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,qCAAqC,CACnC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAoE;QAEpE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,kDAAkD,CACnD,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,wBAAwB,CAC9B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,0BAA0B,CACxB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,qBAAqB,CACnB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,kCAAkC,CACnC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,mBAAmB,CACjB,iBAAyB,EACzB,IAAY,EACZ,gBAAwB,EACxB,IAAY,EACZ,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,OAAO,EAAE,EAC5D,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,mBAAmB,CACjB,iBAAyB,EACzB,IAAY,EACZ,gBAAwB,EACxB,IAAY,EACZ,YAA0B,EAC1B,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,gBAAgB;YAChB,IAAI;YACJ,YAAY;YACZ,OAAO;SACR,EACD,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,sBAAsB,CACpB,iBAAyB,EACzB,IAAY,EACZ,gBAAwB,EACxB,IAAY,EACZ,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,OAAO,EAAE,EAC5D,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,sBAAsB,CACpB,iBAAyB,EACzB,IAAY,EACZ,gBAAwB,EACxB,IAAY,EACZ,YAAuC,EACvC,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,gBAAgB;YAChB,IAAI;YACJ,YAAY;YACZ,OAAO;SACR,EACD,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,wBAAwB,CACtB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,MAAqB,EACrB,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,EAClD,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,qCAAqC,CAC3C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAmE;QAEnE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,iDAAiD,CAClD,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,gCAAgC,CAC9B,iBAAyB,EACzB,IAAY,EACZ,6BAAqC,EACrC,IAAY,EACZ,OAA+D;QAE/D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,6BAA6B,EAAE,IAAI,EAAE,OAAO,EAAE,EACzE,6CAA6C,CAC9C,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,iDAAiD,CACrD,iBAAyB,EACzB,IAAY,EACZ,6BAAqC,EACrC,IAAY,EACZ,sBAAkE,EAClE,OAA2E;QAO3E,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACwC,EAAE;YACxE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE;gBACJ,iBAAiB;gBACjB,IAAI;gBACJ,6BAA6B;gBAC7B,IAAI;gBACJ,sBAAsB;gBACtB,OAAO;aACR;YACD,IAAI,EAAE,yDAAyD;SAChE,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,wDAAwD,CAC5D,iBAAyB,EACzB,IAAY,EACZ,6BAAqC,EACrC,IAAY,EACZ,sBAAkE,EAClE,OAA2E;QAE3E,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,iDAAiD,CACzE,iBAAiB,EACjB,IAAI,EACJ,6BAA6B,EAC7B,IAAI,EACJ,sBAAsB,EACtB,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,wCAAwC,CAC5C,iBAAyB,EACzB,IAAY,EACZ,6BAAqC,EACrC,IAAY,EACZ,OAAkE;QAOlE,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EAC+B,EAAE;YAC/D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE;gBACJ,iBAAiB;gBACjB,IAAI;gBACJ,6BAA6B;gBAC7B,IAAI;gBACJ,OAAO;aACR;YACD,IAAI,EAAE,gDAAgD;SACvD,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,+CAA+C,CACnD,iBAAyB,EACzB,IAAY,EACZ,6BAAqC,EACrC,IAAY,EACZ,OAAkE;QAElE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,wCAAwC,CAChE,iBAAiB,EACjB,IAAI,EACJ,6BAA6B,EAC7B,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;OAMG;IACH,2BAA2B,CACzB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,wCAAwC,CACzC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,kBAAkB,CACxB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,8BAA8B,CAC/B,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,cAAc,CACZ,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,OAA6C;QAE7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,EACrD,2BAA2B,CAC5B,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,iBAAiB,CACf,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,EACrD,8BAA8B,CAC/B,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,kBAAkB,CAChB,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,EACrD,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACK,uBAAuB,CAC7B,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,EACrD,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,WAAmB,EACnB,IAAY,EACZ,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,EAClE,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACK,uBAAuB,CAC7B,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,EACrD,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,2BAA2B,CACjC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,wBAAwB,CACtB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,qBAA6B,EAC7B,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,qBAAqB,EAAE,OAAO,EAAE,EACjE,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG;IACH,mCAAmC,CACjC,iBAAyB,EACzB,IAAY,EACZ,qBAA6B,EAC7B,IAAY,EACZ,iBAAoC,EACpC,OAAkE;QAElE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,qBAAqB;YACrB,IAAI;YACJ,iBAAiB;YACjB,OAAO;SACR,EACD,gDAAgD,CACjD,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,2BAA2B,CACzB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,qBAA6B,EAC7B,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,qBAAqB,EAAE,OAAO,EAAE,EACjE,wCAAwC,CACzC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,uCAAuC,CACrC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,wBAAqD,EACrD,OAAsE;QAEtE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,wBAAwB,EAAE,OAAO,EAAE,EACpE,oDAAoD,CACrD,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,0BAA0B,CACxB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,WAAW,CACT,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA0C;QAE1C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,wBAAwB,CACzB,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,8BAA8B,CAClC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAuB,EACvB,OAAwD;QAExD,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACf,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;YACzD,IAAI,EAAE,sCAAsC;SAC7C,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAA6B,GAAG,EAAE;YACrE,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,qCAAqC,CACzC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAuB,EACvB,OAAwD;QAExD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,8BAA8B,CACtD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,8BAA8B,CAClC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,cAAwC,EACxC,OAAwD;QAExD,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACf,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE;YAChE,IAAI,EAAE,sCAAsC;SAC7C,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAA6B,GAAG,EAAE;YACrE,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,qCAAqC,CACzC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,cAAwC,EACxC,OAAwD;QAExD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,8BAA8B,CACtD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,cAAc,EACd,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,wBAAwB,CAC5B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,cAAsC,EACtC,OAAkD;QAElD,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACf,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE;YAChE,IAAI,EAAE,gCAAgC;SACvC,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAA6B,GAAG,EAAE;YACrE,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,+BAA+B,CACnC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,cAAsC,EACtC,OAAkD;QAElD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,wBAAwB,CAChD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,cAAc,EACd,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;;OAOG;IACK,uBAAuB,CAC7B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,aAAqB,EACrB,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,EACzD,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,+BAA+B,CAC7B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,aAAqB,EACrB,OAAsB,EACtB,OAA8D;QAE9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,OAAO,EAAE,EAClE,4CAA4C,CAC7C,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,aAAqB,EACrB,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,EACzD,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,uBAAuB,CAC7B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,eAAuB,EACvB,IAAY,EACZ,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,OAAO,EAAE,EAC3D,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,6BAA6B,CACjC,iBAAyB,EACzB,IAAY,EACZ,eAAuB,EACvB,IAAY,EACZ,OAAuD;QAOvD,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACoB,EAAE;YACpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,OAAO,EAAE;YACjE,IAAI,EAAE,qCAAqC;SAC5C,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,oCAAoC,CACxC,iBAAyB,EACzB,IAAY,EACZ,eAAuB,EACvB,IAAY,EACZ,OAAuD;QAEvD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,6BAA6B,CACrD,iBAAiB,EACjB,IAAI,EACJ,eAAe,EACf,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;;;OAQG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,eAAuB,EACvB,IAAY,EACZ,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,OAAO,EAAE,EAC3D,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,wBAAwB,CAC9B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,cAA6B,EAC7B,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,EAC1D,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,aAAa,CACjB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,cAA6B,EAC7B,OAAuC;QAEvC,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACf,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE;YAChE,IAAI,EAAE,qBAAqB;SAC5B,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAA6B,GAAG,EAAE;YACrE,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,oBAAoB,CACxB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,cAA6B,EAC7B,OAAuC;QAEvC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CACrC,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,cAAc,EACd,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;OAMG;IACK,kBAAkB,CACxB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,8BAA8B,CAC/B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,iCAAiC,CACvC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA+D;QAE/D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,6CAA6C,CAC9C,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,oCAAoC,CACxC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,iBAAoC,EACpC,OAA8D;QAO9D,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EAC2B,EAAE;YAC3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,iBAAiB,EAAE,OAAO,EAAE;YACnE,IAAI,EAAE,4CAA4C;SACnD,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,2CAA2C,CAC/C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,iBAAoC,EACpC,OAA8D;QAE9D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,oCAAoC,CAC5D,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;;OAOG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,iBAAoC,EACpC,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC7D,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,SAAS,CACP,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAwC;QAExC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,sBAAsB,CACvB,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,0BAA0B,CAC9B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAoD;QAOpD,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACiB,EAAE;YACjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE;YAChD,IAAI,EAAE,kCAAkC;SACzC,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,iCAAiC,CACrC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAoD;QAEpD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,0BAA0B,CAClD,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;;;OAOG;IACH,QAAQ,CACN,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAuC;QAEvC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,qBAAqB,CACtB,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,kBAAkB,CAChB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,wBAAwB,CACtB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,yBAAyB,CAC/B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,sBAAsB,CACpB,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,IAAY,EACZ,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,EACtD,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,yBAAyB,CACvB,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,IAAY,EACZ,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,EACtD,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,+BAA+B,CACrC,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,IAAY,EACZ,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,EACtD,2CAA2C,CAC5C,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,6BAA6B,CAC3B,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,EAAU,EACV,IAAY,EACZ,OAA4D;QAE5D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1D,0CAA0C,CAC3C,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,sBAAsB,CACpB,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,IAAY,EACZ,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,EACtD,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,eAAe,CACrB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA6C;QAE7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,2BAA2B,CAC5B,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,qBAAqB,CACnB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,IAAY,EACZ,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,EACpD,kCAAkC,CACnC,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG;IACH,gCAAgC,CAC9B,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,IAAY,EACZ,kBAAoC,EACpC,OAA+D;QAE/D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,kBAAkB,EAAE,OAAO,EAAE,EACxE,6CAA6C,CAC9C,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,wBAAwB,CACtB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,IAAY,EACZ,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,EACpD,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG;IACH,wBAAwB,CACtB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,IAAY,EACZ,kBAAoC,EACpC,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,kBAAkB,EAAE,OAAO,EAAE,EACxE,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,4BAA4B,CAC1B,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,WAAmB,EACnB,IAAY,EACZ,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,EACjE,yCAAyC,CAC1C,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG;IACH,uCAAuC,CACrC,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,WAAmB,EACnB,IAAY,EACZ,kBAA+B,EAC/B,OAAsE;QAEtE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,QAAQ;YACR,WAAW;YACX,IAAI;YACJ,kBAAkB;YAClB,OAAO;SACR,EACD,oDAAoD,CACrD,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG;IACH,+BAA+B,CAC7B,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,WAAmB,EACnB,IAAY,EACZ,kBAA+B,EAC/B,OAA8D;QAE9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,QAAQ;YACR,WAAW;YACX,IAAI;YACJ,kBAAkB;YAClB,OAAO;SACR,EACD,4CAA4C,CAC7C,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,gBAAgB,CACtB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,4BAA4B,CAC7B,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,aAAa,CACX,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,IAAY,EACZ,OAA4C;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,EACtD,0BAA0B,CAC3B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,kCAAkC,CACxC,iBAAyB,EACzB,IAAY,EACZ,cAA6B,EAC7B,OAAgE;QAEhE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,EACpD,8CAA8C,CAC/C,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,2BAA2B,CAC/B,iBAAyB,EACzB,IAAY,EACZ,cAA6B,EAC7B,OAAqD;QAErD,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACf,EAAE;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE;YAC1D,IAAI,EAAE,mCAAmC;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAA6B,GAAG,EAAE;YACrE,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,kCAAkC,CACtC,iBAAyB,EACzB,IAAY,EACZ,cAA6B,EAC7B,OAAqD;QAErD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,2BAA2B,CACnD,iBAAiB,EACjB,IAAI,EACJ,cAAc,EACd,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;OAKG;IACK,cAAc,CACpB,iBAAyB,EACzB,IAAY,EACZ,OAA4C;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,0BAA0B,CAC3B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,6BAA6B,CACnC,iBAAyB,EACzB,IAAY,EACZ,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,yCAAyC,CAC1C,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,gBAAgB,CACd,iBAAyB,EACzB,IAAY,EACZ,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,6BAA6B,CAC9B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,gCAAgC,CACpC,iBAAyB,EACzB,IAAY,EACZ,iBAAoC,EACpC,OAA0D;QAO1D,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACuB,EAAE;YACvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,iBAAiB,EAAE,OAAO,EAAE;YAC7D,IAAI,EAAE,wCAAwC;SAC/C,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,uCAAuC,CAC3C,iBAAyB,EACzB,IAAY,EACZ,iBAAoC,EACpC,OAA0D;QAE1D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,gCAAgC,CACxD,iBAAiB,EACjB,IAAI,EACJ,iBAAiB,EACjB,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;OAKG;IACH,mBAAmB,CACjB,iBAAyB,EACzB,IAAY,EACZ,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,mBAAmB,CACjB,iBAAyB,EACzB,IAAY,EACZ,iBAAoC,EACpC,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,iBAAiB,EAAE,OAAO,EAAE,EACvD,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,KAAK,CACH,iBAAyB,EACzB,IAAY,EACZ,OAAoC;QAEpC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,kBAAkB,CACnB,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,sBAAsB,CAC1B,iBAAyB,EACzB,IAAY,EACZ,OAAgD;QAOhD,MAAM,mBAAmB,GAAG,KAAK,EAC/B,IAAmC,EACnC,IAA8B,EACa,EAAE;YAC7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,KAAK,EAC3B,IAAmC,EACnC,IAA8B,EAC9B,EAAE;;YACF,IAAI,kBAAkB,GACpB,SAAS,CAAC;YACZ,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;YAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB,EACrB,EAAE;gBACF,kBAAkB,GAAG,WAAW,CAAC;gBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;YAChD,CAAC,CAAC;YACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAClE,OAAO;gBACL,YAAY;gBACZ,WAAW,EAAE;oBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;oBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;oBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;iBAC9C;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,GAAG,GAAG,aAAa,CAAC;YACxB,eAAe;YACf,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE;YAC1C,IAAI,EAAE,8BAA8B;SACrC,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAGnC,GAAG,EAAE;YACL,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;YAChC,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;SAC1C,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,6BAA6B,CACjC,iBAAyB,EACzB,IAAY,EACZ,OAAgD;QAEhD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAC9C,iBAAiB,EACjB,IAAI,EACJ,OAAO,CACR,CAAC;QACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAED;;;;;OAKG;IACH,IAAI,CACF,iBAAyB,EACzB,IAAY,EACZ,OAAmC;QAEnC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,iBAAiB,CAClB,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,gBAAgB,CACd,iBAAyB,EACzB,IAAY,EACZ,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,6BAA6B,CAC9B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,cAAc,CACZ,iBAAyB,EACzB,IAAY,EACZ,OAA6C;QAE7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,2BAA2B,CAC5B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,qBAAqB,CAC3B,iBAAyB,EACzB,IAAY,EACZ,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,kBAAkB,CAChB,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAChD,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,qBAAqB,CACnB,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAChD,kCAAkC,CACnC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,2BAA2B,CACjC,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAChD,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,yBAAyB,CACvB,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,EAAU,EACV,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,OAAO,EAAE,EACpD,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,kBAAkB,CAChB,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAChD,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,WAAW,CACjB,iBAAyB,EACzB,IAAY,EACZ,OAAyC;QAEzC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,uBAAuB,CACxB,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,mBAAmB,CACjB,iBAAyB,EACzB,IAAY,EACZ,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,iBAAiB,CACf,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,8BAA8B,CAC/B,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,4BAA4B,CAC1B,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,kBAAoC,EACpC,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,kBAAkB,EAAE,OAAO,EAAE,EAClE,yCAAyC,CAC1C,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,oBAAoB,CAClB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,kBAAoC,EACpC,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,kBAAkB,EAAE,OAAO,EAAE,EAClE,iCAAiC,CAClC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,wBAAwB,CACtB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,WAAmB,EACnB,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE,EAC3D,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,mCAAmC,CACjC,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,WAAmB,EACnB,kBAA+B,EAC/B,OAAkE;QAElE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,QAAQ;YACR,WAAW;YACX,kBAAkB;YAClB,OAAO;SACR,EACD,gDAAgD,CACjD,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,2BAA2B,CACzB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,WAAmB,EACnB,kBAA+B,EAC/B,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,QAAQ;YACR,WAAW;YACX,kBAAkB;YAClB,OAAO;SACR,EACD,wCAAwC,CACzC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,YAAY,CAClB,iBAAyB,EACzB,IAAY,EACZ,OAA0C;QAE1C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,wBAAwB,CACzB,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,SAAS,CACP,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,OAAwC;QAExC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,EAChD,sBAAsB,CACvB,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,2BAA2B,CACzB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,wCAAwC,CACzC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,0BAA0B,CAChC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,uBAAuB,CACrB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,YAAoB,EACpB,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,EACxD,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,4BAA4B,CAC1B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,EAC1C,yCAAyC,CAC1C,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,cAAc,CACpB,iBAAyB,EACzB,IAAY,EACZ,OAA4C;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,0BAA0B,CAC3B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,WAAW,CACT,iBAAyB,EACzB,IAAY,EACZ,YAAoB,EACpB,OAA0C;QAE1C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,EAClD,wBAAwB,CACzB,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,wBAAwB,CACtB,iBAAyB,EACzB,IAAY,EACZ,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,EACpC,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACK,SAAS,CACf,QAAgB,EAChB,OAAuC;QAEvC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrB,qBAAqB,CACtB,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,wBAAwB,CAC9B,iBAAyB,EACzB,QAAgB,EAChB,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxC,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,gBAAgB,CACtB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,4BAA4B,CAC7B,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,2CAA2C,CACjD,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAyE;QAEzE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,uDAAuD,CACxD,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,uBAAuB,CAC7B,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,qCAAqC,CAC3C,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAmE;QAEnE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,iDAAiD,CAClD,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,8CAA8C,CACpD,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAA4E;QAE5E,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,0DAA0D,CAC3D,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,kCAAkC,CACxC,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAgE;QAEhE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,8CAA8C,CAC/C,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,0BAA0B,CAChC,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,yCAAyC,CAC/C,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAuE;QAEvE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,qDAAqD,CACtD,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,oBAAoB,CAC1B,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,mCAAmC,CACzC,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAiE;QAEjE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,+CAA+C,CAChD,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,kBAAkB,CACxB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,8BAA8B,CAC/B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,yBAAyB,CAC/B,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,4BAA4B,CAClC,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,wCAAwC,CACzC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,0BAA0B,CAChC,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,QAAgB,EAChB,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC1D,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG;IACK,+BAA+B,CACrC,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,UAAkB,EAClB,QAAgB,EAChB,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrE,2CAA2C,CAC5C,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG;IACK,+BAA+B,CACrC,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,UAAkB,EAClB,QAAgB,EAChB,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrE,2CAA2C,CAC5C,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,oBAAoB,CAC1B,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,wBAAwB,CAC9B,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,qCAAqC,CAC3C,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAmE;QAEnE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,iDAAiD,CAClD,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,kBAAkB,CACxB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,8BAA8B,CAC/B,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,uBAAuB,CAC7B,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,QAAgB,EAChB,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,EACzD,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,uBAAuB,CAC7B,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,QAAgB,EAChB,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,EACzD,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,2BAA2B,CACjC,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,uBAAuB,CAC7B,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,uBAAuB,CAC7B,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,mCAAmC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,cAAc,CACpB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAA4C;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,0BAA0B,CAC3B,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,oBAAoB,CAC1B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,+CAA+C,CACrD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAA6E;QAE7E,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,2DAA2D,CAC5D,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,2BAA2B,CACjC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,yCAAyC,CAC/C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAAuE;QAEvE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,qDAAqD,CACtD,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,kDAAkD,CACxD,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAAgF;QAEhF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,8DAA8D,CAC/D,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACK,sCAAsC,CAC5C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAAoE;QAEpE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,kDAAkD,CACnD,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACK,8BAA8B,CACpC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAA4D;QAE5D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,0CAA0C,CAC3C,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACK,uCAAuC,CAC7C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAAqE;QAErE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,mDAAmD,CACpD,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,wBAAwB,CAC9B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACK,uCAAuC,CAC7C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAAqE;QAErE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,mDAAmD,CACpD,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,8BAA8B,CACpC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAA4D;QAE5D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,0CAA0C,CAC3C,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACK,6BAA6B,CACnC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,yCAAyC,CAC1C,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACK,gCAAgC,CACtC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAA8D;QAE9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,4CAA4C,CAC7C,CAAC;IACJ,CAAC;IAED;;;;;;;;;;;OAWG;IACK,8BAA8B,CACpC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,UAAkB,EAClB,QAAgB,EAChB,OAA4D;QAE5D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,EAChE,0CAA0C,CAC3C,CAAC;IACJ,CAAC;IAED;;;;;;;;;;;;OAYG;IACK,mCAAmC,CACzC,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,UAAkB,EAClB,QAAgB,EAChB,OAAiE;QAEjE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,SAAS;YACT,IAAI;YACJ,UAAU;YACV,QAAQ;YACR,OAAO;SACR,EACD,+CAA+C,CAChD,CAAC;IACJ,CAAC;IAED;;;;;;;;;;;;OAYG;IACK,mCAAmC,CACzC,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,UAAkB,EAClB,QAAgB,EAChB,OAAiE;QAEjE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,IAAI;YACJ,SAAS;YACT,IAAI;YACJ,UAAU;YACV,QAAQ;YACR,OAAO;SACR,EACD,+CAA+C,CAChD,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,wBAAwB,CAC9B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,oCAAoC,CACrC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,4BAA4B,CAClC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,wCAAwC,CACzC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,yCAAyC,CAC/C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAAuE;QAEvE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,qDAAqD,CACtD,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,sBAAsB,CAC5B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,kCAAkC,CACnC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACK,2BAA2B,CACjC,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,QAAgB,EAChB,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC/D,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACK,2BAA2B,CACjC,iBAAyB,EACzB,IAAY,EACZ,SAAiB,EACjB,IAAY,EACZ,QAAgB,EAChB,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC/D,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACK,+BAA+B,CACrC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,2CAA2C,CAC5C,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,2BAA2B,CACjC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,2BAA2B,CACjC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG;IACK,4BAA4B,CAClC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,cAA6B,EAC7B,QAAgB,EAChB,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpE,wCAAwC,CACzC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,sBAAsB,CAC5B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,kCAAkC,CACnC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,qCAAqC,CAC3C,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAAmE;QAEnE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,iDAAiD,CAClD,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACK,6BAA6B,CACnC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,yCAAyC,CAC1C,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG;IACK,mCAAmC,CACzC,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,IAAY,EACZ,QAAgB,EAChB,OAAiE;QAEjE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAChE,+CAA+C,CAChD,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,mBAAmB,CACzB,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,+BAA+B,CAChC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,oBAAoB,CAC1B,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,gCAAgC,CACjC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,sCAAsC,CAC5C,iBAAyB,EACzB,IAAY,EACZ,cAA6B,EAC7B,QAAgB,EAChB,OAAoE;QAEpE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9D,kDAAkD,CACnD,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,kBAAkB,CACxB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,8BAA8B,CAC/B,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACK,iCAAiC,CACvC,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAA+D;QAE/D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,6CAA6C,CAC9C,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,yBAAyB,CAC/B,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,qCAAqC,CACtC,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,+BAA+B,CACrC,iBAAyB,EACzB,IAAY,EACZ,UAAkB,EAClB,QAAgB,EAChB,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC1D,2CAA2C,CAC5C,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,eAAe,CACrB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAA6C;QAE7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,2BAA2B,CAC5B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,gBAAgB,CACtB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,4BAA4B,CAC7B,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,8BAA8B,CACpC,iBAAyB,EACzB,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,OAA4D;QAE5D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpD,0CAA0C,CAC3C,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,kBAAkB,CACxB,iBAAyB,EACzB,IAAY,EACZ,QAAgB,EAChB,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC9C,8BAA8B,CAC/B,CAAC;IACJ,CAAC;CACF;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,iBAAiB,GAA6B;IAClD,IAAI,EAAE,+DAA+D;IACrE,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,cAAc,CAAC;IAC5D,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,kGAAkG;IACxG,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,YAAY,CAAC;IACjE,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;KAC7B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gBAAgB,GAA6B;IACjD,IAAI,EAAE,yGAAyG;IAC/G,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EAAE,yGAAyG;IAC/G,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,YAAY;IACpC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;IACpD,IAAI,EAAE,yGAAyG;IAC/G,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,aAAa;QACxB,UAAU,CAAC,qBAAqB;KACjC;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;IACpD,IAAI,EAAE,yGAAyG;IAC/G,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,aAAa;IACrC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,+HAA+H;IACrI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,4BAA4B;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,QAAQ,CAAC;IAC7D,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,yHAAyH;IAC/H,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,cAAc;IACtC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;IACpD,IAAI,EAAE,gHAAgH;IACtH,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,UAAU;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,wBAAwB,GAA6B;IACzD,IAAI,EAAE,iHAAiH;IACvH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EAAE,4HAA4H;IAClI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,UAAU;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,yBAAyB,GAA6B;IAC1D,IAAI,EAAE,4HAA4H;IAClI,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,iIAAiI;IACvI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,UAAU;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,oBAAoB,GAA6B;IACrD,IAAI,EAAE,oIAAoI;IAC1I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,mDAAmD,GACvD;IACE,IAAI,EAAE,4IAA4I;IAClJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,uCAAuC;SAC5D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,0BAA0B,GAA6B;IAC3D,IAAI,EAAE,gJAAgJ;IACtJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,sCAAsC;SAC3D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EAAE,gJAAgJ;IACtJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,sCAAsC;SAC3D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,iCAAiC;IACzD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,0BAA0B,GAA6B;IAC3D,IAAI,EAAE,gJAAgJ;IACtJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,sCAAsC;SAC3D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EAAE,gJAAgJ;IACtJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,sCAAsC;SAC3D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,iCAAiC;IACzD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,gHAAgH;IACtH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,4BAA4B;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,4HAA4H;IAClI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,WAAW;IACnC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,iIAAiI;IACvI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,6HAA6H;IACnI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,gBAAgB;IACxC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EAAE,kIAAkI;IACxI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,4CAA4C,GAA6B;IAC7E,IAAI,EAAE,+HAA+H;IACrI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,+HAA+H;IACrI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,kBAAkB;IAC1C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EAAE,oIAAoI;IAC1I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,qIAAqI;IAC3I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,sCAAsC;SAC3D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,oBAAoB;IAC5C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,0IAA0I;IAChJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,sCAAsC;SAC3D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,uHAAuH;IAC7H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,uHAAuH;IAC7H,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,4HAA4H;IAClI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6CAA6C,GACjD;IACE,IAAI,EAAE,6IAA6I;IACnJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,2CAA2C,GAA6B;IAC5E,IAAI,EAAE,6JAA6J;IACnK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,aAAa;KACzB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,sDAAsD,GAC1D;IACE,IAAI,EAAE,mJAAmJ;IACzJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,qDAAqD,GACzD;IACE,IAAI,EAAE,yKAAyK;IAC/K,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,mBAAmB;KAC/B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,kIAAkI;IACxI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,iBAAiB;IACzC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,uIAAuI;IAC7I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2CAA2C,GAA6B;IAC5E,IAAI,EAAE,qHAAqH;IAC3H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,qHAAqH;IAC3H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,cAAc;IACtC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EAAE,yHAAyH;IAC/H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,yBAAyB,GAA6B;IAC1D,IAAI,EAAE,8HAA8H;IACpI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,2IAA2I;IACjJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,6HAA6H;IACnI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,YAAY;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,YAAY;IACpC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,kIAAkI;IACxI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,YAAY;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,gIAAgI;IACtI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,uBAAuB;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EAAE,gIAAgI;IACtI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,uBAAuB;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,eAAe;IACvC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EAAE,oHAAoH;IAC1H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,oHAAoH;IAC1H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,UAAU;IAClC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,oHAAoH;IAC1H,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,UAAU;IAClC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,0CAA0C,GAA6B;IAC3E,IAAI,EAAE,8HAA8H;IACpI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,uCAAuC;SAC5D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,2IAA2I;IACjJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6CAA6C,GACjD;IACE,IAAI,EAAE,mJAAmJ;IACzJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,uHAAuH;IAC7H,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;gBACxB,cAAc,EAAE,gBAAgB;aACjC;SACF;QACD,GAAG,EAAE,EAAE;QACP,OAAO,EAAE,EAAE;KACZ;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC;IACtC,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,oIAAoI;IAC1I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;gBACxB,cAAc,EAAE,gBAAgB;aACjC;SACF;QACD,GAAG,EAAE,EAAE;QACP,OAAO,EAAE,EAAE;KACZ;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC;IACtC,UAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,2HAA2H;IACjI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,wIAAwI;IAC9I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,wIAAwI;IAC9I,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,8IAA8I;IACpJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,6IAA6I;IACnJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iDAAiD,GACrD;IACE,IAAI,EAAE,0HAA0H;IAChI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,6BAA6B;SAClD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,8CAA8C,GAClD;IACE,IAAI,EAAE,+IAA+I;IACrJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,kBAAkB;KAC9B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EAAE,qHAAqH;IAC3H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,0BAA0B,GAA6B;IAC3D,IAAI,EAAE,0HAA0H;IAChI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,UAAU;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,EAAE;KACd;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EAAE,0HAA0H;IAChI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,UAAU;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,UAAU;IAClC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,EAAE;KACd;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EAAE,0HAA0H;IAChI,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,EAAE;KACd;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EAAE,8HAA8H;IACpI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,UAAU;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,EAAE;KACd;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EAAE,wHAAwH;IAC9H,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,2CAA2C,GAA6B;IAC5E,IAAI,EAAE,oIAAoI;IAC1I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EAAE,oKAAoK;IAC1K,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,UAAU;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,6BAA6B;KACzC;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oDAAoD,GACxD;IACE,IAAI,EAAE,oKAAoK;IAC1K,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,UAAU;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,0BAA0B;IAClD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,6BAA6B;KACzC;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,4CAA4C,GAA6B;IAC7E,IAAI,EAAE,oKAAoK;IAC1K,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,6BAA6B;KACzC;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,4CAA4C,GAA6B;IAC7E,IAAI,EAAE,oKAAoK;IAC1K,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,UAAU;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,0BAA0B;IAClD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,6BAA6B;KACzC;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EAAE,6HAA6H;IACnI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,6HAA6H;IACnI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EAAE,iIAAiI;IACvI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,WAAW;SAChC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,8HAA8H;IACpI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;aAC/D;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,8HAA8H;IACpI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;aAC/D;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,0BAA0B,GAA6B;IAC3D,IAAI,EAAE,mHAAmH;IACzH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,+HAA+H;IACrI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,wBAAwB,GAA6B;IACzD,IAAI,EAAE,kIAAkI;IACxI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EAAE,kIAAkI;IACxI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,gBAAgB;IACxC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EAAE,kIAAkI;IACxI,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EAAE,iJAAiJ;IACvJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,OAAO;SAC5B;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,OAAO;SAC5B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,GAAG;IAC3B,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,OAAO;KACnB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,iJAAiJ;IACvJ,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,OAAO;KACnB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EAAE,2IAA2I;IACjJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,8IAA8I;IACpJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,eAAe;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,yBAAyB,GAA6B;IAC1D,IAAI,EAAE,+HAA+H;IACrI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,QAAQ;SAC7B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EAAE,qIAAqI;IAC3I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,0BAA0B,GAA6B;IAC3D,IAAI,EAAE,2HAA2H;IACjI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,0IAA0I;IAChJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,OAAO;SAC5B;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,OAAO;SAC5B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,GAAG;IAC3B,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,OAAO;KACnB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EAAE,0IAA0I;IAChJ,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,OAAO;KACnB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,0HAA0H;IAChI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,yBAAyB;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,qIAAqI;IAC3I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,eAAe;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,0CAA0C,GAA6B;IAC3E,IAAI,EAAE,qIAAqI;IAC3I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,eAAe;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,eAAe;IACvC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,qIAAqI;IAC3I,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,uKAAuK;IAC7K,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,aAAa;QACxB,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2CAA2C,GAA6B;IAC5E,IAAI,EAAE,uKAAuK;IAC7K,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,mBAAmB;IAC3C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,aAAa;QACxB,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,uKAAuK;IAC7K,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,aAAa;QACxB,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,uKAAuK;IAC7K,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,mBAAmB;IAC3C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,aAAa;QACxB,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,gIAAgI;IACtI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,0HAA0H;IAChI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,4BAA4B;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,uIAAuI;IAC7I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,4BAA4B;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iDAAiD,GACrD;IACE,IAAI,EAAE,uIAAuI;IAC7I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,4BAA4B;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,mBAAmB;IAC3C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EAAE,uIAAuI;IAC7I,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EAAE,uIAAuI;IAC7I,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,4BAA4B;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,mBAAmB;IAC3C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,mHAAmH;IACzH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,8BAA8B;SACnD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EAAE,gIAAgI;IACtI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,qBAAqB;SAC1C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,oJAAoJ;IAC1J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,4CAA4C,GAA6B;IAC7E,IAAI,EAAE,oJAAoJ;IAC1J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,wJAAwJ;IAC9J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,WAAW;SAChC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,0IAA0I;IAChJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,qBAAqB;SAC1C;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,sJAAsJ;IAC5J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,WAAW;SAChC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,sJAAsJ;IAC5J,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,2JAA2J;IACjK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;gBACxB,cAAc,EAAE,gBAAgB;aACjC;SACF;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,8JAA8J;IACpK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,4KAA4K;IAClL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,WAAW;KACvB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,8JAA8J;IACpK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,wBAAwB,GAA6B;IACzD,IAAI,EAAE,qHAAqH;IAC3H,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EAAE,qHAAqH;IAC3H,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,uIAAuI;IAC7I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,eAAe;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EAAE,0HAA0H;IAChI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;aAC/D;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EAAE,iHAAiH;IACvH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;SAC7C;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;SAC7C;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;SAC7C;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,gBAAgB;IACxC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,gBAAgB,CAAC;IACrE,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,yBAAyB,GAA6B;IAC1D,IAAI,EAAE,sHAAsH;IAC5H,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,SAAS;SAC9B;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,SAAS;SAC9B;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,SAAS;SAC9B;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,SAAS;SAC9B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,wBAAwB;IAChD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,6HAA6H;IACnI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6CAA6C,GACjD;IACE,IAAI,EAAE,sIAAsI;IAC5I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,iEAAiE,GACrE;IACE,IAAI,EAAE,sIAAsI;IAC5I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,mBAAmB;IAC3C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,sIAAsI;IAC5I,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,yDAAyD,GAC7D;IACE,IAAI,EAAE,sIAAsI;IAC5I,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,mBAAmB;IAC3C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,gIAAgI;IACtI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,eAAe;SACpC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,qJAAqJ;IAC3J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,WAAW;KACvB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,4HAA4H;IAClI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,MAAM;KAClB;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,8CAA8C,GAClD;IACE,IAAI,EAAE,qIAAqI;IAC3I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,MAAM;KAClB;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,2HAA2H;IACjI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EAAE,oIAAoI;IAC1I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,WAAW;KACvB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,8JAA8J;IACpK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,WAAW;KACvB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,qIAAqI;IAC3I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,WAAW;KACvB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,8CAA8C,GAClD;IACE,IAAI,EAAE,qHAAqH;IAC3H,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,sHAAsH;IAC5H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,MAAM,CAAC;IAC3D,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,oHAAoH;IAC1H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EAAE,uHAAuH;IAC7H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,YAAY;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EAAE,0IAA0I;IAChJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,YAAY;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,gBAAgB;KAC5B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EAAE,0IAA0I;IAChJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,YAAY;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,YAAY;IACpC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,gBAAgB;KAC5B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,0IAA0I;IAChJ,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,gBAAgB;KAC5B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,0IAA0I;IAChJ,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,YAAY;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,aAAa;IACrC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,gBAAgB;KAC5B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EAAE,uIAAuI;IAC7I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,uIAAuI;IAC7I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,MAAM;IAC9B,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,6CAA6C,GACjD;IACE,IAAI,EAAE,oIAAoI;IAC1I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mCAAmC;SACxD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EAAE,oKAAoK;IAC1K,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0CAA0C;SAC/D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,6BAA6B;KACzC;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qDAAqD,GACzD;IACE,IAAI,EAAE,oKAAoK;IAC1K,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0CAA0C;SAC/D;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0CAA0C;SAC/D;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0CAA0C;SAC/D;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0CAA0C;SAC/D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,sBAAsB;IAC9C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,6BAA6B;KACzC;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,4CAA4C,GAA6B;IAC7E,IAAI,EAAE,oKAAoK;IAC1K,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;aAC/D;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;aAC/D;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;aAC/D;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;aAC/D;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,6BAA6B;KACzC;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,8HAA8H;IACpI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,0BAA0B,GAA6B;IAC3D,IAAI,EAAE,mHAAmH;IACzH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,qBAAqB;SAC1C;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uBAAuB,GAA6B;IACxD,IAAI,EAAE,+HAA+H;IACrI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,WAAW;SAChC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,0BAA0B,GAA6B;IAC3D,IAAI,EAAE,+HAA+H;IACrI,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EAAE,oIAAoI;IAC1I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;gBACxB,cAAc,EAAE,gBAAgB;aACjC;SACF;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,uIAAuI;IAC7I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EAAE,qJAAqJ;IAC3J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,WAAW;KACvB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,uIAAuI;IAC7I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,4HAA4H;IAClI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,oJAAoJ;IAC1J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,qBAAqB;KACjC;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,4CAA4C,GAA6B;IAC7E,IAAI,EAAE,oJAAoJ;IAC1J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,iBAAiB;IACzC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,qBAAqB;KACjC;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,oJAAoJ;IAC1J,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,qBAAqB;KACjC;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gDAAgD,GACpD;IACE,IAAI,EAAE,oHAAoH;IAC1H,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;gBACxB,cAAc,EAAE,gBAAgB;aACjC;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,wBAAwB;IAChD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,UAAU,CAAC,OAAO,CAAC;IAC9D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,yHAAyH;IAC/H,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oBAAoB,GAA6B;IACrD,IAAI,EAAE,iHAAiH;IACvH,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,WAAW;KACvB;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,+HAA+H;IACrI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,+HAA+H;IACrI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,cAAc;IACtC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EAAE,yHAAyH;IAC/H,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,eAAe;IACvC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,wHAAwH;IAC9H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,uBAAuB;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EAAE,wIAAwI;IAC9I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,aAAa;KACzB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,wIAAwI;IAC9I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,aAAa;KACzB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,wIAAwI;IAC9I,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,aAAa;KACzB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,wHAAwH;IAC9H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EAAE,0IAA0I;IAChJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,eAAe;KAC3B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,0IAA0I;IAChJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,eAAe;KAC3B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,0IAA0I;IAChJ,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,eAAe;KAC3B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,sBAAsB,GAA6B;IACvD,IAAI,EAAE,+GAA+G;IACrH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oBAAoB,GAA6B;IACrD,IAAI,EAAE,sHAAsH;IAC5H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,sHAAsH;IAC5H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,YAAY;IACpC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,uBAAuB,GAA6B;IACxD,IAAI,EAAE,sHAAsH;IAC5H,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,aAAa;QACxB,UAAU,CAAC,qBAAqB;KACjC;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uBAAuB,GAA6B;IACxD,IAAI,EAAE,sHAAsH;IAC5H,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,aAAa;IACrC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,4IAA4I;IAClJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,4BAA4B;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,QAAQ,CAAC;IAC7D,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,sIAAsI;IAC5I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,cAAc;IACtC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,uBAAuB,GAA6B;IACxD,IAAI,EAAE,6HAA6H;IACnI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,UAAU;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EAAE,8HAA8H;IACpI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,yIAAyI;IAC/I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,UAAU;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EAAE,yIAAyI;IAC/I,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,8IAA8I;IACpJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,UAAU;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,wBAAwB,GAA6B;IACzD,IAAI,EAAE,iJAAiJ;IACvJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,uDAAuD,GAC3D;IACE,IAAI,EAAE,yJAAyJ;IAC/J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,uCAAuC;SAC5D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EAAE,6JAA6J;IACnK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,sCAAsC;SAC3D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,6JAA6J;IACnK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,sCAAsC;SAC3D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,iCAAiC;IACzD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EAAE,6JAA6J;IACnK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,sCAAsC;SAC3D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,6JAA6J;IACnK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,sCAAsC;SAC3D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,iCAAiC;IACzD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,6HAA6H;IACnI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,4BAA4B;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,0CAA0C,GAA6B;IAC3E,IAAI,EAAE,yIAAyI;IAC/I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,WAAW;IACnC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,8IAA8I;IACpJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,0IAA0I;IAChJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,gBAAgB;IACxC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,+IAA+I;IACrJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gDAAgD,GACpD;IACE,IAAI,EAAE,4IAA4I;IAClJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,4IAA4I;IAClJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,kBAAkB;IAC1C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,iJAAiJ;IACvJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2CAA2C,GAA6B;IAC5E,IAAI,EAAE,kJAAkJ;IACxJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,sCAAsC;SAC3D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,oBAAoB;IAC5C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EAAE,uJAAuJ;IAC7J,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,sCAAsC;SAC3D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,0CAA0C,GAA6B;IAC3E,IAAI,EAAE,oIAAoI;IAC1I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,0CAA0C,GAA6B;IAC3E,IAAI,EAAE,oIAAoI;IAC1I,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,yIAAyI;IAC/I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iDAAiD,GACrD;IACE,IAAI,EAAE,0JAA0J;IAChK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,+CAA+C,GACnD;IACE,IAAI,EAAE,0KAA0K;IAChL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,aAAa;KACzB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,0DAA0D,GAC9D;IACE,IAAI,EAAE,gKAAgK;IACtK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,yDAAyD,GAC7D;IACE,IAAI,EAAE,sLAAsL;IAC5L,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,mBAAmB;KAC/B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,+IAA+I;IACrJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,iBAAiB;IACzC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,oJAAoJ;IAC1J,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+CAA+C,GACnD;IACE,IAAI,EAAE,kIAAkI;IACxI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,2CAA2C,GAA6B;IAC5E,IAAI,EAAE,kIAAkI;IACxI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,cAAc;IACtC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,sIAAsI;IAC5I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EAAE,2IAA2I;IACjJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,0CAA0C,GAA6B;IAC3E,IAAI,EAAE,wJAAwJ;IAC9J,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,IAAI;SACzB;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,0IAA0I;IAChJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,YAAY;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,YAAY;IACpC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,+IAA+I;IACrJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,YAAY;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,iIAAiI;IACvI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,4CAA4C,GAA6B;IAC7E,IAAI,EAAE,iIAAiI;IACvI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,UAAU;IAClC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,iIAAiI;IACvI,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,UAAU;IAClC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,8CAA8C,GAClD;IACE,IAAI,EAAE,2IAA2I;IACjJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,uCAAuC;SAC5D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EAAE,wJAAwJ;IAC9J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iDAAiD,GACrD;IACE,IAAI,EAAE,gKAAgK;IACtK,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,oIAAoI;IAC1I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;gBACxB,cAAc,EAAE,gBAAgB;aACjC;SACF;QACD,GAAG,EAAE,EAAE;QACP,OAAO,EAAE,EAAE;KACZ;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC;IACtC,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,iJAAiJ;IACvJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;gBACxB,cAAc,EAAE,gBAAgB;aACjC;SACF;QACD,GAAG,EAAE,EAAE;QACP,OAAO,EAAE,EAAE;KACZ;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC;IACtC,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,wIAAwI;IAC9I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,qJAAqJ;IAC3J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,qJAAqJ;IAC3J,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,2JAA2J;IACjK,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,0JAA0J;IAChK,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+CAA+C,GACnD;IACE,IAAI,EAAE,uIAAuI;IAC7I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,6BAA6B;SAClD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,4CAA4C,GAA6B;IAC7E,IAAI,EAAE,4JAA4J;IAClK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,kBAAkB;KAC9B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,kIAAkI;IACxI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EAAE,uIAAuI;IAC7I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,UAAU;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,EAAE;KACd;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,uIAAuI;IAC7I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,UAAU;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,UAAU;IAClC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,EAAE;KACd;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,uIAAuI;IAC7I,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,EAAE;KACd;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,2IAA2I;IACjJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,UAAU;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,EAAE;KACd;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,qIAAqI;IAC3I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,+CAA+C,GACnD;IACE,IAAI,EAAE,iJAAiJ;IACvJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,6CAA6C,GACjD;IACE,IAAI,EAAE,iLAAiL;IACvL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,UAAU;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,6BAA6B;KACzC;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,wDAAwD,GAC5D;IACE,IAAI,EAAE,iLAAiL;IACvL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,UAAU;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,0BAA0B;IAClD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,6BAA6B;KACzC;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,gDAAgD,GACpD;IACE,IAAI,EAAE,iLAAiL;IACvL,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,6BAA6B;KACzC;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,gDAAgD,GACpD;IACE,IAAI,EAAE,iLAAiL;IACvL,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,UAAU;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,0BAA0B;IAClD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,6BAA6B;KACzC;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,0IAA0I;IAChJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,0IAA0I;IAChJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,8IAA8I;IACpJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,WAAW;SAChC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,gIAAgI;IACtI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,4IAA4I;IAClJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,+IAA+I;IACrJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,+IAA+I;IACrJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,gBAAgB;IACxC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,+IAA+I;IACrJ,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6CAA6C,GACjD;IACE,IAAI,EAAE,8JAA8J;IACpK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,OAAO;SAC5B;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,OAAO;SAC5B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,GAAG;IAC3B,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,OAAO;KACnB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,8JAA8J;IACpK,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,OAAO;KACnB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,wJAAwJ;IAC9J,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,2JAA2J;IACjK,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,eAAe;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EAAE,4IAA4I;IAClJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,QAAQ;SAC7B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,kJAAkJ;IACxJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EAAE,wIAAwI;IAC9I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EAAE,uJAAuJ;IAC7J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,OAAO;SAC5B;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,OAAO;SAC5B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,GAAG;IAC3B,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,OAAO;KACnB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,uJAAuJ;IAC7J,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,OAAO;KACnB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,uIAAuI;IAC7I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,yBAAyB;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,kJAAkJ;IACxJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,eAAe;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,8CAA8C,GAClD;IACE,IAAI,EAAE,kJAAkJ;IACxJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,eAAe;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,eAAe;IACvC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,kJAAkJ;IACxJ,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,oLAAoL;IAC1L,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,aAAa;QACxB,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+CAA+C,GACnD;IACE,IAAI,EAAE,oLAAoL;IAC1L,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,mBAAmB;IAC3C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,aAAa;QACxB,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,oLAAoL;IAC1L,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,aAAa;QACxB,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,oLAAoL;IAC1L,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,mBAAmB;IAC3C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,aAAa;QACxB,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,6IAA6I;IACnJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,4CAA4C,GAA6B;IAC7E,IAAI,EAAE,uIAAuI;IAC7I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,4BAA4B;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,0CAA0C,GAA6B;IAC3E,IAAI,EAAE,oJAAoJ;IAC1J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,4BAA4B;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qDAAqD,GACzD;IACE,IAAI,EAAE,oJAAoJ;IAC1J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,4BAA4B;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,mBAAmB;IAC3C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,6CAA6C,GACjD;IACE,IAAI,EAAE,oJAAoJ;IAC1J,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,6CAA6C,GACjD;IACE,IAAI,EAAE,oJAAoJ;IAC1J,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,4BAA4B;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,mBAAmB;IAC3C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,gIAAgI;IACtI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,8BAA8B;SACnD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,6IAA6I;IACnJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,qBAAqB;SAC1C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,0CAA0C,GAA6B;IAC3E,IAAI,EAAE,iKAAiK;IACvK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gDAAgD,GACpD;IACE,IAAI,EAAE,iKAAiK;IACvK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,qKAAqK;IAC3K,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,WAAW;SAChC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,uJAAuJ;IAC7J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,qBAAqB;SAC1C;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,mKAAmK;IACzK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,WAAW;SAChC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,mKAAmK;IACzK,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,wKAAwK;IAC9K,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;gBACxB,cAAc,EAAE,gBAAgB;aACjC;SACF;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2CAA2C,GAA6B;IAC5E,IAAI,EAAE,2KAA2K;IACjL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EAAE,yLAAyL;IAC/L,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,WAAW;KACvB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2CAA2C,GAA6B;IAC5E,IAAI,EAAE,2KAA2K;IACjL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EAAE,kIAAkI;IACxI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,kIAAkI;IACxI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EAAE,oJAAoJ;IAC1J,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,eAAe;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,0IAA0I;IAChJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iDAAiD,GACrD;IACE,IAAI,EAAE,mJAAmJ;IACzJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,qEAAqE,GACzE;IACE,IAAI,EAAE,mJAAmJ;IACzJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,mBAAmB;IAC3C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,0CAA0C,GAA6B;IAC3E,IAAI,EAAE,mJAAmJ;IACzJ,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6DAA6D,GACjE;IACE,IAAI,EAAE,mJAAmJ;IACzJ,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,mBAAmB;IAC3C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,6IAA6I;IACnJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,eAAe;SACpC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EAAE,kKAAkK;IACxK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,WAAW;KACvB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EAAE,yIAAyI;IAC/I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,MAAM;KAClB;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,kDAAkD,GACtD;IACE,IAAI,EAAE,kJAAkJ;IACxJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,MAAM;KAClB;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,wIAAwI;IAC9I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,iJAAiJ;IACvJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,WAAW;KACvB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2CAA2C,GAA6B;IAC5E,IAAI,EAAE,2KAA2K;IACjL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,WAAW;KACvB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,kJAAkJ;IACxJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,WAAW;KACvB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,kDAAkD,GACtD;IACE,IAAI,EAAE,kIAAkI;IACxI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,mIAAmI;IACzI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,MAAM,CAAC;IAC3D,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,iIAAiI;IACvI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,oIAAoI;IAC1I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,YAAY;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,uJAAuJ;IAC7J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,YAAY;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,gBAAgB;KAC5B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,uJAAuJ;IAC7J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,YAAY;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,YAAY;IACpC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,gBAAgB;KAC5B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,uJAAuJ;IAC7J,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,gBAAgB;KAC5B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,uJAAuJ;IAC7J,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,YAAY;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,aAAa;IACrC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,gBAAgB;KAC5B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,oJAAoJ;IAC1J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,oJAAoJ;IAC1J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,MAAM;IAC9B,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,iDAAiD,GACrD;IACE,IAAI,EAAE,iJAAiJ;IACvJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mCAAmC;SACxD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,6CAA6C,GACjD;IACE,IAAI,EAAE,iLAAiL;IACvL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0CAA0C;SAC/D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,6BAA6B;QACxC,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,yDAAyD,GAC7D;IACE,IAAI,EAAE,iLAAiL;IACvL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0CAA0C;SAC/D;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0CAA0C;SAC/D;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0CAA0C;SAC/D;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0CAA0C;SAC/D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,sBAAsB;IAC9C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,6BAA6B;QACxC,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,gDAAgD,GACpD;IACE,IAAI,EAAE,iLAAiL;IACvL,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;aAC/D;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;aAC/D;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;aAC/D;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;aAC/D;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,6BAA6B;QACxC,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,2IAA2I;IACjJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EAAE,gIAAgI;IACtI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,qBAAqB;SAC1C;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EAAE,4IAA4I;IAClJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,WAAW;SAChC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EAAE,4IAA4I;IAClJ,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,iJAAiJ;IACvJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;gBACxB,cAAc,EAAE,gBAAgB;aACjC;SACF;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,oJAAoJ;IAC1J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,kKAAkK;IACxK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,WAAW;KACvB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,oJAAoJ;IAC1J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,yIAAyI;IAC/I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,iKAAiK;IACvK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,qBAAqB;KACjC;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gDAAgD,GACpD;IACE,IAAI,EAAE,iKAAiK;IACvK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,iBAAiB;IACzC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,qBAAqB;KACjC;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,iKAAiK;IACvK,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,qBAAqB;KACjC;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oDAAoD,GACxD;IACE,IAAI,EAAE,iIAAiI;IACvI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;gBACxB,cAAc,EAAE,gBAAgB;aACjC;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,wBAAwB;IAChD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,UAAU,CAAC,OAAO,CAAC;IAC9D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,sIAAsI;IAC5I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,wBAAwB,GAA6B;IACzD,IAAI,EAAE,8HAA8H;IACpI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,WAAW;KACvB;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,4IAA4I;IAClJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,4IAA4I;IAClJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,cAAc;IACtC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,sIAAsI;IAC5I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,eAAe;IACvC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,qIAAqI;IAC3I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,uBAAuB;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,qJAAqJ;IAC3J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,aAAa;KACzB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,4CAA4C,GAA6B;IAC7E,IAAI,EAAE,qJAAqJ;IAC3J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,aAAa;SAClC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,aAAa;KACzB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,qJAAqJ;IAC3J,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,aAAa;KACzB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,qIAAqI;IAC3I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,uJAAuJ;IAC7J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,eAAe;KAC3B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,uJAAuJ;IAC7J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,eAAe;KAC3B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,uJAAuJ;IAC7J,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,eAAe;KAC3B;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,iIAAiI;IACvI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,cAAc;IACtC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,qBAAqB,GAA6B;IACtD,IAAI,EAAE,gIAAgI;IACtI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,cAAc;IACtC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EAAE,gIAAgI;IACtI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6CAA6C,GACjD;IACE,IAAI,EAAE,kIAAkI;IACxI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,yIAAyI;IAC/I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,4CAA4C,GAA6B;IAC7E,IAAI,EAAE,yIAAyI;IAC/I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,iBAAiB;IACzC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,yIAAyI;IAC/I,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,eAAe,CAAC;IACpE,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,yIAAyI;IAC/I,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,iBAAiB;IACzC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,sBAAsB,GAA6B;IACvD,IAAI,EAAE,4HAA4H;IAClI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,wIAAwI;IAC9I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,MAAM;KAClB;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qBAAqB,GAA6B;IACtD,IAAI,EAAE,2HAA2H;IACjI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,uIAAuI;IAC7I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,2HAA2H;IACjI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,2IAA2I;IACjJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,uIAAuI;IAC7I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,yBAAyB;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,oJAAoJ;IAC1J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,eAAe;SACpC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,oJAAoJ;IAC1J,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2CAA2C,GAA6B;IAC5E,IAAI,EAAE,4JAA4J;IAClK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,6BAA6B;SAClD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,0CAA0C,GAA6B;IAC3E,IAAI,EAAE,iKAAiK;IACvK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,EAAE;KACd;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,wJAAwJ;IAC9J,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EAAE,6HAA6H;IACnI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,uBAAuB;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,MAAM,CAAC;IAC3D,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,gJAAgJ;IACtJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,kBAAkB,EAAE;qBAC3D;iBACF;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,2JAA2J;IACjK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6CAA6C,GACjD;IACE,IAAI,EAAE,2JAA2J;IACjK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,mBAAmB;IAC3C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,2JAA2J;IACjK,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,2JAA2J;IACjK,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,mBAAmB;IAC3C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EAAE,kLAAkL;IACxL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,WAAW;SAChC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oDAAoD,GACxD;IACE,IAAI,EAAE,kLAAkL;IACxL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,WAAW;SAChC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,kBAAkB;IAC1C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,4CAA4C,GAA6B;IAC7E,IAAI,EAAE,kLAAkL;IACxL,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,WAAW;SAChC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,kBAAkB;IAC1C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EAAE,8HAA8H;IACpI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,0BAA0B,GAA6B;IAC3D,IAAI,EAAE,2IAA2I;IACjJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,MAAM;SAC3B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,8CAA8C,GAClD;IACE,IAAI,EAAE,oHAAoH;IAC1H,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,cAAc;IACtC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,mHAAmH;IACzH,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,cAAc;IACtC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,0BAA0B,GAA6B;IAC3D,IAAI,EAAE,mHAAmH;IACzH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EAAE,qHAAqH;IAC3H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EAAE,4HAA4H;IAClI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,4HAA4H;IAClI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,iBAAiB;IACzC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,4HAA4H;IAClI,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,eAAe,CAAC;IACpE,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,4HAA4H;IAClI,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,iBAAiB;IACzC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,kBAAkB,GAA6B;IACnD,IAAI,EAAE,+GAA+G;IACrH,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EAAE,2HAA2H;IACjI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,EAAE;iBACpE;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,MAAM;KAClB;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iBAAiB,GAA6B;IAClD,IAAI,EAAE,8GAA8G;IACpH,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EAAE,0HAA0H;IAChI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EAAE,8GAA8G;IACpH,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,8HAA8H;IACpI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,0HAA0H;IAChI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,yBAAyB;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,uIAAuI;IAC7I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,eAAe;SACpC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,uIAAuI;IAC7I,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,+IAA+I;IACrJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,6BAA6B;SAClD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,oJAAoJ;IAC1J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,EAAE;KACd;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,2IAA2I;IACjJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uBAAuB,GAA6B;IACxD,IAAI,EAAE,gHAAgH;IACtH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,uBAAuB;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,MAAM,CAAC;IAC3D,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,mIAAmI;IACzI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,kBAAkB,EAAE;qBAC3D;iBACF;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EAAE,8IAA8I;IACpJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EAAE,8IAA8I;IACpJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,mBAAmB;IAC3C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,8IAA8I;IACpJ,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,8IAA8I;IACpJ,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,mBAAmB;IAC3C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,qKAAqK;IAC3K,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,WAAW;SAChC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,WAAW;KACvB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gDAAgD,GACpD;IACE,IAAI,EAAE,qKAAqK;IAC3K,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,WAAW;SAChC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,kBAAkB;IAC1C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,WAAW;KACvB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,qKAAqK;IAC3K,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,WAAW;SAChC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,kBAAkB;IAC1C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,WAAW;KACvB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,wBAAwB,GAA6B;IACzD,IAAI,EAAE,iHAAiH;IACvH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,sBAAsB,GAA6B;IACvD,IAAI,EAAE,8HAA8H;IACpI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,MAAM;SAC3B;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,iIAAiI;IACvI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,iBAAiB;IACzC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,8IAA8I;IACpJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,iBAAiB;IACzC,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,gIAAgI;IACtI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,+IAA+I;IACrJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EAAE,+IAA+I;IACrJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,0BAA0B,GAA6B;IAC3D,IAAI,EAAE,mHAAmH;IACzH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,wBAAwB,GAA6B;IACzD,IAAI,EAAE,kIAAkI;IACxI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,YAAY;KACxB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,kIAAkI;IACxI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uDAAuD,GAC3D;IACE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,uCAAuC;SAC5D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,4BAA4B;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iDAAiD,GACrD;IACE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,0DAA0D,GAC9D;IACE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,8CAA8C,GAClD;IACE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,uCAAuC;SAC5D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qDAAqD,GACzD;IACE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,6BAA6B;SAClD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+CAA+C,GACnD;IACE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,yBAAyB;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,8BAA8B;SACnD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,qBAAqB;SAC1C;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2CAA2C,GAA6B;IAC5E,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2CAA2C,GAA6B;IAC5E,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iDAAiD,GACrD;IACE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mCAAmC;SACxD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,qBAAqB;SAC1C;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,uBAAuB;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,0BAA0B,GAA6B;IAC3D,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2DAA2D,GAC/D;IACE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,uCAAuC;SAC5D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,4BAA4B;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qDAAqD,GACzD;IACE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,8DAA8D,GAClE;IACE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,kDAAkD,GACtD;IACE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,uCAAuC;SAC5D;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,0CAA0C,GAA6B;IAC3E,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mDAAmD,GACvD;IACE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,6BAA6B;SAClD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,mDAAmD,GACvD;IACE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,0CAA0C,GAA6B;IAC3E,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,yBAAyB;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,4CAA4C,GAA6B;IAC7E,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,8BAA8B;SACnD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,0CAA0C,GAA6B;IAC3E,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,qBAAqB;SAC1C;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+CAA+C,GACnD;IACE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,+CAA+C,GACnD;IACE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,qDAAqD,GACzD;IACE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mCAAmC;SACxD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,qBAAqB;SAC1C;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,SAAS;KACrB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2CAA2C,GAA6B;IAC5E,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,uBAAuB;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,uCAAuC,GAA6B;IACxE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,2BAA2B;SAChD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,iDAAiD,GACrD;IACE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,yBAAyB;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,+CAA+C,GACnD;IACE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,6BAA6B;SAClD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,uBAAuB;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,kDAAkD,GACtD;IACE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACJ,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,6CAA6C,GACjD;IACE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACJ,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,yBAAyB;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2CAA2C,GAA6B;IAC5E,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,6BAA6B;SAClD;QACD,GAAG,EAAE;YACH,OAAO,EAAE,IAAI;SACd;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,UAAU;KACtB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,uBAAuB;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,gBAAgB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,0CAA0C,GAA6B;IAC3E,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,IAAI;KAChB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,0BAA0B;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,iBAAiB;QAC5B,UAAU,CAAC,IAAI;QACf,UAAU,CAAC,QAAQ;KACpB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { WebApps } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { WebSiteManagementClient } from \"../webSiteManagementClient.js\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller,\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl.js\";\nimport {\n  Site,\n  WebAppsListNextOptionalParams,\n  WebAppsListOptionalParams,\n  WebAppsListResponse,\n  WebAppsListByResourceGroupNextOptionalParams,\n  WebAppsListByResourceGroupOptionalParams,\n  WebAppsListByResourceGroupResponse,\n  BackupItem,\n  WebAppsListBackupsNextOptionalParams,\n  WebAppsListBackupsOptionalParams,\n  WebAppsListBackupsResponse,\n  CsmPublishingCredentialsPoliciesEntity,\n  WebAppsListBasicPublishingCredentialsPoliciesNextOptionalParams,\n  WebAppsListBasicPublishingCredentialsPoliciesOptionalParams,\n  WebAppsListBasicPublishingCredentialsPoliciesResponse,\n  SiteConfigResource,\n  WebAppsListConfigurationsNextOptionalParams,\n  WebAppsListConfigurationsOptionalParams,\n  WebAppsListConfigurationsResponse,\n  ApiKVReference,\n  WebAppsGetAppSettingsKeyVaultReferencesNextOptionalParams,\n  WebAppsGetAppSettingsKeyVaultReferencesOptionalParams,\n  WebAppsGetAppSettingsKeyVaultReferencesResponse,\n  WebAppsGetSiteConnectionStringKeyVaultReferencesNextOptionalParams,\n  WebAppsGetSiteConnectionStringKeyVaultReferencesOptionalParams,\n  WebAppsGetSiteConnectionStringKeyVaultReferencesResponse,\n  SiteConfigurationSnapshotInfo,\n  WebAppsListConfigurationSnapshotInfoNextOptionalParams,\n  WebAppsListConfigurationSnapshotInfoOptionalParams,\n  WebAppsListConfigurationSnapshotInfoResponse,\n  ContinuousWebJob,\n  WebAppsListContinuousWebJobsNextOptionalParams,\n  WebAppsListContinuousWebJobsOptionalParams,\n  WebAppsListContinuousWebJobsResponse,\n  CsmDeploymentStatus,\n  WebAppsListProductionSiteDeploymentStatusesNextOptionalParams,\n  WebAppsListProductionSiteDeploymentStatusesOptionalParams,\n  WebAppsListProductionSiteDeploymentStatusesResponse,\n  Deployment,\n  WebAppsListDeploymentsNextOptionalParams,\n  WebAppsListDeploymentsOptionalParams,\n  WebAppsListDeploymentsResponse,\n  Identifier,\n  WebAppsListDomainOwnershipIdentifiersNextOptionalParams,\n  WebAppsListDomainOwnershipIdentifiersOptionalParams,\n  WebAppsListDomainOwnershipIdentifiersResponse,\n  FunctionEnvelope,\n  WebAppsListFunctionsNextOptionalParams,\n  WebAppsListFunctionsOptionalParams,\n  WebAppsListFunctionsResponse,\n  HostNameBinding,\n  WebAppsListHostNameBindingsNextOptionalParams,\n  WebAppsListHostNameBindingsOptionalParams,\n  WebAppsListHostNameBindingsResponse,\n  WebSiteInstanceStatus,\n  WebAppsListInstanceIdentifiersNextOptionalParams,\n  WebAppsListInstanceIdentifiersOptionalParams,\n  WebAppsListInstanceIdentifiersResponse,\n  ProcessInfo,\n  WebAppsListInstanceProcessesNextOptionalParams,\n  WebAppsListInstanceProcessesOptionalParams,\n  WebAppsListInstanceProcessesResponse,\n  ProcessModuleInfo,\n  WebAppsListInstanceProcessModulesNextOptionalParams,\n  WebAppsListInstanceProcessModulesOptionalParams,\n  WebAppsListInstanceProcessModulesResponse,\n  ProcessThreadInfo,\n  WebAppsListInstanceProcessThreadsNextOptionalParams,\n  WebAppsListInstanceProcessThreadsOptionalParams,\n  WebAppsListInstanceProcessThreadsResponse,\n  WebAppsListSiteBackupsNextOptionalParams,\n  WebAppsListSiteBackupsOptionalParams,\n  WebAppsListSiteBackupsResponse,\n  PerfMonResponse,\n  WebAppsListPerfMonCountersNextOptionalParams,\n  WebAppsListPerfMonCountersOptionalParams,\n  WebAppsListPerfMonCountersResponse,\n  RemotePrivateEndpointConnectionARMResource,\n  WebAppsGetPrivateEndpointConnectionListNextOptionalParams,\n  WebAppsGetPrivateEndpointConnectionListOptionalParams,\n  WebAppsGetPrivateEndpointConnectionListResponse,\n  WebAppsListProcessesNextOptionalParams,\n  WebAppsListProcessesOptionalParams,\n  WebAppsListProcessesResponse,\n  WebAppsListProcessModulesNextOptionalParams,\n  WebAppsListProcessModulesOptionalParams,\n  WebAppsListProcessModulesResponse,\n  WebAppsListProcessThreadsNextOptionalParams,\n  WebAppsListProcessThreadsOptionalParams,\n  WebAppsListProcessThreadsResponse,\n  PublicCertificate,\n  WebAppsListPublicCertificatesNextOptionalParams,\n  WebAppsListPublicCertificatesOptionalParams,\n  WebAppsListPublicCertificatesResponse,\n  SiteContainer,\n  WebAppsListSiteContainersNextOptionalParams,\n  WebAppsListSiteContainersOptionalParams,\n  WebAppsListSiteContainersResponse,\n  SiteExtensionInfo,\n  WebAppsListSiteExtensionsNextOptionalParams,\n  WebAppsListSiteExtensionsOptionalParams,\n  WebAppsListSiteExtensionsResponse,\n  WebAppsListSlotsNextOptionalParams,\n  WebAppsListSlotsOptionalParams,\n  WebAppsListSlotsResponse,\n  WebAppsListBackupsSlotNextOptionalParams,\n  WebAppsListBackupsSlotOptionalParams,\n  WebAppsListBackupsSlotResponse,\n  WebAppsListBasicPublishingCredentialsPoliciesSlotNextOptionalParams,\n  WebAppsListBasicPublishingCredentialsPoliciesSlotOptionalParams,\n  WebAppsListBasicPublishingCredentialsPoliciesSlotResponse,\n  WebAppsListConfigurationsSlotNextOptionalParams,\n  WebAppsListConfigurationsSlotOptionalParams,\n  WebAppsListConfigurationsSlotResponse,\n  WebAppsGetAppSettingsKeyVaultReferencesSlotNextOptionalParams,\n  WebAppsGetAppSettingsKeyVaultReferencesSlotOptionalParams,\n  WebAppsGetAppSettingsKeyVaultReferencesSlotResponse,\n  WebAppsGetSiteConnectionStringKeyVaultReferencesSlotNextOptionalParams,\n  WebAppsGetSiteConnectionStringKeyVaultReferencesSlotOptionalParams,\n  WebAppsGetSiteConnectionStringKeyVaultReferencesSlotResponse,\n  WebAppsListConfigurationSnapshotInfoSlotNextOptionalParams,\n  WebAppsListConfigurationSnapshotInfoSlotOptionalParams,\n  WebAppsListConfigurationSnapshotInfoSlotResponse,\n  WebAppsListContinuousWebJobsSlotNextOptionalParams,\n  WebAppsListContinuousWebJobsSlotOptionalParams,\n  WebAppsListContinuousWebJobsSlotResponse,\n  WebAppsListSlotSiteDeploymentStatusesSlotNextOptionalParams,\n  WebAppsListSlotSiteDeploymentStatusesSlotOptionalParams,\n  WebAppsListSlotSiteDeploymentStatusesSlotResponse,\n  WebAppsListDeploymentsSlotNextOptionalParams,\n  WebAppsListDeploymentsSlotOptionalParams,\n  WebAppsListDeploymentsSlotResponse,\n  WebAppsListDomainOwnershipIdentifiersSlotNextOptionalParams,\n  WebAppsListDomainOwnershipIdentifiersSlotOptionalParams,\n  WebAppsListDomainOwnershipIdentifiersSlotResponse,\n  WebAppsListInstanceFunctionsSlotNextOptionalParams,\n  WebAppsListInstanceFunctionsSlotOptionalParams,\n  WebAppsListInstanceFunctionsSlotResponse,\n  WebAppsListHostNameBindingsSlotNextOptionalParams,\n  WebAppsListHostNameBindingsSlotOptionalParams,\n  WebAppsListHostNameBindingsSlotResponse,\n  WebAppsListInstanceIdentifiersSlotNextOptionalParams,\n  WebAppsListInstanceIdentifiersSlotOptionalParams,\n  WebAppsListInstanceIdentifiersSlotResponse,\n  WebAppsListInstanceProcessesSlotNextOptionalParams,\n  WebAppsListInstanceProcessesSlotOptionalParams,\n  WebAppsListInstanceProcessesSlotResponse,\n  WebAppsListInstanceProcessModulesSlotNextOptionalParams,\n  WebAppsListInstanceProcessModulesSlotOptionalParams,\n  WebAppsListInstanceProcessModulesSlotResponse,\n  WebAppsListInstanceProcessThreadsSlotNextOptionalParams,\n  WebAppsListInstanceProcessThreadsSlotOptionalParams,\n  WebAppsListInstanceProcessThreadsSlotResponse,\n  WebAppsListSiteBackupsSlotNextOptionalParams,\n  WebAppsListSiteBackupsSlotOptionalParams,\n  WebAppsListSiteBackupsSlotResponse,\n  WebAppsListPerfMonCountersSlotNextOptionalParams,\n  WebAppsListPerfMonCountersSlotOptionalParams,\n  WebAppsListPerfMonCountersSlotResponse,\n  WebAppsGetPrivateEndpointConnectionListSlotNextOptionalParams,\n  WebAppsGetPrivateEndpointConnectionListSlotOptionalParams,\n  WebAppsGetPrivateEndpointConnectionListSlotResponse,\n  WebAppsListProcessesSlotNextOptionalParams,\n  WebAppsListProcessesSlotOptionalParams,\n  WebAppsListProcessesSlotResponse,\n  WebAppsListProcessModulesSlotNextOptionalParams,\n  WebAppsListProcessModulesSlotOptionalParams,\n  WebAppsListProcessModulesSlotResponse,\n  WebAppsListProcessThreadsSlotNextOptionalParams,\n  WebAppsListProcessThreadsSlotOptionalParams,\n  WebAppsListProcessThreadsSlotResponse,\n  WebAppsListPublicCertificatesSlotNextOptionalParams,\n  WebAppsListPublicCertificatesSlotOptionalParams,\n  WebAppsListPublicCertificatesSlotResponse,\n  WebAppsListSiteContainersSlotNextOptionalParams,\n  WebAppsListSiteContainersSlotOptionalParams,\n  WebAppsListSiteContainersSlotResponse,\n  WebAppsListSiteExtensionsSlotNextOptionalParams,\n  WebAppsListSiteExtensionsSlotOptionalParams,\n  WebAppsListSiteExtensionsSlotResponse,\n  SlotDifference,\n  CsmSlotEntity,\n  WebAppsListSlotDifferencesSlotNextOptionalParams,\n  WebAppsListSlotDifferencesSlotOptionalParams,\n  WebAppsListSlotDifferencesSlotResponse,\n  Snapshot,\n  WebAppsListSnapshotsSlotNextOptionalParams,\n  WebAppsListSnapshotsSlotOptionalParams,\n  WebAppsListSnapshotsSlotResponse,\n  WebAppsListSnapshotsFromDRSecondarySlotNextOptionalParams,\n  WebAppsListSnapshotsFromDRSecondarySlotOptionalParams,\n  WebAppsListSnapshotsFromDRSecondarySlotResponse,\n  TriggeredWebJob,\n  WebAppsListTriggeredWebJobsSlotNextOptionalParams,\n  WebAppsListTriggeredWebJobsSlotOptionalParams,\n  WebAppsListTriggeredWebJobsSlotResponse,\n  TriggeredJobHistory,\n  WebAppsListTriggeredWebJobHistorySlotNextOptionalParams,\n  WebAppsListTriggeredWebJobHistorySlotOptionalParams,\n  WebAppsListTriggeredWebJobHistorySlotResponse,\n  CsmUsageQuota,\n  WebAppsListUsagesSlotNextOptionalParams,\n  WebAppsListUsagesSlotOptionalParams,\n  WebAppsListUsagesSlotResponse,\n  WebJob,\n  WebAppsListWebJobsSlotNextOptionalParams,\n  WebAppsListWebJobsSlotOptionalParams,\n  WebAppsListWebJobsSlotResponse,\n  WebAppsListSlotDifferencesFromProductionNextOptionalParams,\n  WebAppsListSlotDifferencesFromProductionOptionalParams,\n  WebAppsListSlotDifferencesFromProductionResponse,\n  WebAppsListSnapshotsNextOptionalParams,\n  WebAppsListSnapshotsOptionalParams,\n  WebAppsListSnapshotsResponse,\n  WebAppsListSnapshotsFromDRSecondaryNextOptionalParams,\n  WebAppsListSnapshotsFromDRSecondaryOptionalParams,\n  WebAppsListSnapshotsFromDRSecondaryResponse,\n  WebAppsListTriggeredWebJobsNextOptionalParams,\n  WebAppsListTriggeredWebJobsOptionalParams,\n  WebAppsListTriggeredWebJobsResponse,\n  WebAppsListTriggeredWebJobHistoryNextOptionalParams,\n  WebAppsListTriggeredWebJobHistoryOptionalParams,\n  WebAppsListTriggeredWebJobHistoryResponse,\n  WebAppsListUsagesNextOptionalParams,\n  WebAppsListUsagesOptionalParams,\n  WebAppsListUsagesResponse,\n  WebAppsListWebJobsNextOptionalParams,\n  WebAppsListWebJobsOptionalParams,\n  WebAppsListWebJobsResponse,\n  WorkflowEnvelope,\n  WebAppsListInstanceWorkflowsSlotNextOptionalParams,\n  WebAppsListInstanceWorkflowsSlotOptionalParams,\n  WebAppsListInstanceWorkflowsSlotResponse,\n  WebAppsListWorkflowsNextOptionalParams,\n  WebAppsListWorkflowsOptionalParams,\n  WebAppsListWorkflowsResponse,\n  WebAppsGetOptionalParams,\n  WebAppsGetResponse,\n  WebAppsCreateOrUpdateOptionalParams,\n  WebAppsCreateOrUpdateResponse,\n  WebAppsDeleteOptionalParams,\n  SitePatchResource,\n  WebAppsUpdateOptionalParams,\n  WebAppsUpdateResponse,\n  WebAppsAnalyzeCustomHostnameOptionalParams,\n  WebAppsAnalyzeCustomHostnameResponse,\n  WebAppsApplySlotConfigToProductionOptionalParams,\n  BackupRequest,\n  WebAppsBackupOptionalParams,\n  WebAppsBackupResponse,\n  WebAppsGetBackupStatusOptionalParams,\n  WebAppsGetBackupStatusResponse,\n  WebAppsDeleteBackupOptionalParams,\n  WebAppsListBackupStatusSecretsOptionalParams,\n  WebAppsListBackupStatusSecretsResponse,\n  RestoreRequest,\n  WebAppsRestoreOptionalParams,\n  WebAppsGetFtpAllowedOptionalParams,\n  WebAppsGetFtpAllowedResponse,\n  WebAppsUpdateFtpAllowedOptionalParams,\n  WebAppsUpdateFtpAllowedResponse,\n  WebAppsGetScmAllowedOptionalParams,\n  WebAppsGetScmAllowedResponse,\n  WebAppsUpdateScmAllowedOptionalParams,\n  WebAppsUpdateScmAllowedResponse,\n  StringDictionary,\n  WebAppsUpdateApplicationSettingsOptionalParams,\n  WebAppsUpdateApplicationSettingsResponse,\n  WebAppsListApplicationSettingsOptionalParams,\n  WebAppsListApplicationSettingsResponse,\n  SiteAuthSettings,\n  WebAppsUpdateAuthSettingsOptionalParams,\n  WebAppsUpdateAuthSettingsResponse,\n  WebAppsGetAuthSettingsOptionalParams,\n  WebAppsGetAuthSettingsResponse,\n  WebAppsGetAuthSettingsV2WithoutSecretsOptionalParams,\n  WebAppsGetAuthSettingsV2WithoutSecretsResponse,\n  SiteAuthSettingsV2,\n  WebAppsUpdateAuthSettingsV2OptionalParams,\n  WebAppsUpdateAuthSettingsV2Response,\n  WebAppsGetAuthSettingsV2OptionalParams,\n  WebAppsGetAuthSettingsV2Response,\n  AzureStoragePropertyDictionaryResource,\n  WebAppsUpdateAzureStorageAccountsOptionalParams,\n  WebAppsUpdateAzureStorageAccountsResponse,\n  WebAppsListAzureStorageAccountsOptionalParams,\n  WebAppsListAzureStorageAccountsResponse,\n  WebAppsUpdateBackupConfigurationOptionalParams,\n  WebAppsUpdateBackupConfigurationResponse,\n  WebAppsDeleteBackupConfigurationOptionalParams,\n  WebAppsGetBackupConfigurationOptionalParams,\n  WebAppsGetBackupConfigurationResponse,\n  WebAppsGetAppSettingKeyVaultReferenceOptionalParams,\n  WebAppsGetAppSettingKeyVaultReferenceResponse,\n  WebAppsGetSiteConnectionStringKeyVaultReferenceOptionalParams,\n  WebAppsGetSiteConnectionStringKeyVaultReferenceResponse,\n  ConnectionStringDictionary,\n  WebAppsUpdateConnectionStringsOptionalParams,\n  WebAppsUpdateConnectionStringsResponse,\n  WebAppsListConnectionStringsOptionalParams,\n  WebAppsListConnectionStringsResponse,\n  WebAppsGetDiagnosticLogsConfigurationOptionalParams,\n  WebAppsGetDiagnosticLogsConfigurationResponse,\n  SiteLogsConfig,\n  WebAppsUpdateDiagnosticLogsConfigOptionalParams,\n  WebAppsUpdateDiagnosticLogsConfigResponse,\n  WebAppsUpdateMetadataOptionalParams,\n  WebAppsUpdateMetadataResponse,\n  WebAppsListMetadataOptionalParams,\n  WebAppsListMetadataResponse,\n  WebAppsListPublishingCredentialsOptionalParams,\n  WebAppsListPublishingCredentialsResponse,\n  PushSettings,\n  WebAppsUpdateSitePushSettingsOptionalParams,\n  WebAppsUpdateSitePushSettingsResponse,\n  WebAppsListSitePushSettingsOptionalParams,\n  WebAppsListSitePushSettingsResponse,\n  WebAppsListSlotConfigurationNamesOptionalParams,\n  WebAppsListSlotConfigurationNamesResponse,\n  SlotConfigNamesResource,\n  WebAppsUpdateSlotConfigurationNamesOptionalParams,\n  WebAppsUpdateSlotConfigurationNamesResponse,\n  WebAppsGetConfigurationOptionalParams,\n  WebAppsGetConfigurationResponse,\n  WebAppsCreateOrUpdateConfigurationOptionalParams,\n  WebAppsCreateOrUpdateConfigurationResponse,\n  WebAppsUpdateConfigurationOptionalParams,\n  WebAppsUpdateConfigurationResponse,\n  WebAppsGetConfigurationSnapshotOptionalParams,\n  WebAppsGetConfigurationSnapshotResponse,\n  WebAppsRecoverSiteConfigurationSnapshotOptionalParams,\n  WebAppsGetWebSiteContainerLogsOptionalParams,\n  WebAppsGetWebSiteContainerLogsResponse,\n  WebAppsGetContainerLogsZipOptionalParams,\n  WebAppsGetContainerLogsZipResponse,\n  WebAppsGetContinuousWebJobOptionalParams,\n  WebAppsGetContinuousWebJobResponse,\n  WebAppsDeleteContinuousWebJobOptionalParams,\n  WebAppsStartContinuousWebJobOptionalParams,\n  WebAppsStopContinuousWebJobOptionalParams,\n  WebAppsGetProductionSiteDeploymentStatusOptionalParams,\n  WebAppsGetProductionSiteDeploymentStatusResponse,\n  WebAppsGetDeploymentOptionalParams,\n  WebAppsGetDeploymentResponse,\n  WebAppsCreateDeploymentOptionalParams,\n  WebAppsCreateDeploymentResponse,\n  WebAppsDeleteDeploymentOptionalParams,\n  WebAppsListDeploymentLogOptionalParams,\n  WebAppsListDeploymentLogResponse,\n  WebAppsDiscoverBackupOptionalParams,\n  WebAppsDiscoverBackupResponse,\n  WebAppsGetDomainOwnershipIdentifierOptionalParams,\n  WebAppsGetDomainOwnershipIdentifierResponse,\n  WebAppsCreateOrUpdateDomainOwnershipIdentifierOptionalParams,\n  WebAppsCreateOrUpdateDomainOwnershipIdentifierResponse,\n  WebAppsDeleteDomainOwnershipIdentifierOptionalParams,\n  WebAppsUpdateDomainOwnershipIdentifierOptionalParams,\n  WebAppsUpdateDomainOwnershipIdentifierResponse,\n  WebAppsGetMSDeployStatusOptionalParams,\n  WebAppsGetMSDeployStatusResponse,\n  MSDeploy,\n  WebAppsCreateMSDeployOperationOptionalParams,\n  WebAppsCreateMSDeployOperationResponse,\n  WebAppsGetMSDeployLogOptionalParams,\n  WebAppsGetMSDeployLogResponse,\n  WebAppsGetOneDeployStatusOptionalParams,\n  WebAppsGetOneDeployStatusResponse,\n  WebAppsCreateOneDeployOperationOptionalParams,\n  WebAppsCreateOneDeployOperationResponse,\n  WebAppsGetFunctionsAdminTokenOptionalParams,\n  WebAppsGetFunctionsAdminTokenResponse,\n  WebAppsGetFunctionOptionalParams,\n  WebAppsGetFunctionResponse,\n  WebAppsCreateFunctionOptionalParams,\n  WebAppsCreateFunctionResponse,\n  WebAppsDeleteFunctionOptionalParams,\n  KeyInfo,\n  WebAppsCreateOrUpdateFunctionSecretOptionalParams,\n  WebAppsCreateOrUpdateFunctionSecretResponse,\n  WebAppsDeleteFunctionSecretOptionalParams,\n  WebAppsListFunctionKeysOptionalParams,\n  WebAppsListFunctionKeysResponse,\n  WebAppsListFunctionSecretsOptionalParams,\n  WebAppsListFunctionSecretsResponse,\n  WebAppsListHostKeysOptionalParams,\n  WebAppsListHostKeysResponse,\n  WebAppsListSyncStatusOptionalParams,\n  WebAppsSyncFunctionsOptionalParams,\n  WebAppsCreateOrUpdateHostSecretOptionalParams,\n  WebAppsCreateOrUpdateHostSecretResponse,\n  WebAppsDeleteHostSecretOptionalParams,\n  WebAppsGetHostNameBindingOptionalParams,\n  WebAppsGetHostNameBindingResponse,\n  WebAppsCreateOrUpdateHostNameBindingOptionalParams,\n  WebAppsCreateOrUpdateHostNameBindingResponse,\n  WebAppsDeleteHostNameBindingOptionalParams,\n  WebAppsGetHybridConnectionOptionalParams,\n  WebAppsGetHybridConnectionResponse,\n  HybridConnection,\n  WebAppsCreateOrUpdateHybridConnectionOptionalParams,\n  WebAppsCreateOrUpdateHybridConnectionResponse,\n  WebAppsDeleteHybridConnectionOptionalParams,\n  WebAppsUpdateHybridConnectionOptionalParams,\n  WebAppsUpdateHybridConnectionResponse,\n  WebAppsListHybridConnectionsOptionalParams,\n  WebAppsListHybridConnectionsResponse,\n  WebAppsListRelayServiceConnectionsOptionalParams,\n  WebAppsListRelayServiceConnectionsResponse,\n  WebAppsGetRelayServiceConnectionOptionalParams,\n  WebAppsGetRelayServiceConnectionResponse,\n  RelayServiceConnectionEntity,\n  WebAppsCreateOrUpdateRelayServiceConnectionOptionalParams,\n  WebAppsCreateOrUpdateRelayServiceConnectionResponse,\n  WebAppsDeleteRelayServiceConnectionOptionalParams,\n  WebAppsUpdateRelayServiceConnectionOptionalParams,\n  WebAppsUpdateRelayServiceConnectionResponse,\n  WebAppsGetInstanceInfoOptionalParams,\n  WebAppsGetInstanceInfoResponse,\n  WebAppsGetInstanceMsDeployStatusOptionalParams,\n  WebAppsGetInstanceMsDeployStatusResponse,\n  WebAppsCreateInstanceMSDeployOperationOptionalParams,\n  WebAppsCreateInstanceMSDeployOperationResponse,\n  WebAppsGetInstanceMSDeployLogOptionalParams,\n  WebAppsGetInstanceMSDeployLogResponse,\n  WebAppsGetInstanceProcessOptionalParams,\n  WebAppsGetInstanceProcessResponse,\n  WebAppsDeleteInstanceProcessOptionalParams,\n  WebAppsGetInstanceProcessDumpOptionalParams,\n  WebAppsGetInstanceProcessDumpResponse,\n  WebAppsGetInstanceProcessModuleOptionalParams,\n  WebAppsGetInstanceProcessModuleResponse,\n  WebAppsIsCloneableOptionalParams,\n  WebAppsIsCloneableResponse,\n  WebAppsListSyncFunctionTriggersOptionalParams,\n  WebAppsListSyncFunctionTriggersResponse,\n  WebAppsUpdateMachineKeyOptionalParams,\n  WebAppsUpdateMachineKeyResponse,\n  StorageMigrationOptions,\n  WebAppsMigrateStorageOptionalParams,\n  WebAppsMigrateStorageResponse,\n  MigrateMySqlRequest,\n  WebAppsMigrateMySqlOptionalParams,\n  WebAppsMigrateMySqlResponse,\n  WebAppsGetMigrateMySqlStatusOptionalParams,\n  WebAppsGetMigrateMySqlStatusResponse,\n  WebAppsGetSwiftVirtualNetworkConnectionOptionalParams,\n  WebAppsGetSwiftVirtualNetworkConnectionResponse,\n  SwiftVirtualNetwork,\n  WebAppsCreateOrUpdateSwiftVirtualNetworkConnectionWithCheckOptionalParams,\n  WebAppsCreateOrUpdateSwiftVirtualNetworkConnectionWithCheckResponse,\n  WebAppsDeleteSwiftVirtualNetworkOptionalParams,\n  WebAppsUpdateSwiftVirtualNetworkConnectionWithCheckOptionalParams,\n  WebAppsUpdateSwiftVirtualNetworkConnectionWithCheckResponse,\n  WebAppsListNetworkFeaturesOptionalParams,\n  WebAppsListNetworkFeaturesResponse,\n  WebAppsGetNetworkTraceOperationOptionalParams,\n  WebAppsGetNetworkTraceOperationResponse,\n  WebAppsStartWebSiteNetworkTraceOptionalParams,\n  WebAppsStartWebSiteNetworkTraceResponse,\n  WebAppsStartWebSiteNetworkTraceOperationOptionalParams,\n  WebAppsStartWebSiteNetworkTraceOperationResponse,\n  WebAppsStopWebSiteNetworkTraceOptionalParams,\n  WebAppsGetNetworkTracesOptionalParams,\n  WebAppsGetNetworkTracesResponse,\n  WebAppsGetNetworkTraceOperationV2OptionalParams,\n  WebAppsGetNetworkTraceOperationV2Response,\n  WebAppsGetNetworkTracesV2OptionalParams,\n  WebAppsGetNetworkTracesV2Response,\n  WebAppsGenerateNewSitePublishingPasswordOptionalParams,\n  WebAppsGetSitePhpErrorLogFlagOptionalParams,\n  WebAppsGetSitePhpErrorLogFlagResponse,\n  WebAppsListPremierAddOnsOptionalParams,\n  WebAppsListPremierAddOnsResponse,\n  WebAppsGetPremierAddOnOptionalParams,\n  WebAppsGetPremierAddOnResponse,\n  PremierAddOn,\n  WebAppsAddPremierAddOnOptionalParams,\n  WebAppsAddPremierAddOnResponse,\n  WebAppsDeletePremierAddOnOptionalParams,\n  PremierAddOnPatchResource,\n  WebAppsUpdatePremierAddOnOptionalParams,\n  WebAppsUpdatePremierAddOnResponse,\n  WebAppsGetPrivateAccessOptionalParams,\n  WebAppsGetPrivateAccessResponse,\n  PrivateAccess,\n  WebAppsPutPrivateAccessVnetOptionalParams,\n  WebAppsPutPrivateAccessVnetResponse,\n  WebAppsGetPrivateEndpointConnectionOptionalParams,\n  WebAppsGetPrivateEndpointConnectionResponse,\n  WebAppsApproveOrRejectPrivateEndpointConnectionOptionalParams,\n  WebAppsApproveOrRejectPrivateEndpointConnectionResponse,\n  WebAppsDeletePrivateEndpointConnectionOptionalParams,\n  WebAppsDeletePrivateEndpointConnectionResponse,\n  WebAppsGetPrivateLinkResourcesOptionalParams,\n  WebAppsGetPrivateLinkResourcesResponse,\n  WebAppsGetProcessOptionalParams,\n  WebAppsGetProcessResponse,\n  WebAppsDeleteProcessOptionalParams,\n  WebAppsGetProcessDumpOptionalParams,\n  WebAppsGetProcessDumpResponse,\n  WebAppsGetProcessModuleOptionalParams,\n  WebAppsGetProcessModuleResponse,\n  WebAppsGetPublicCertificateOptionalParams,\n  WebAppsGetPublicCertificateResponse,\n  WebAppsCreateOrUpdatePublicCertificateOptionalParams,\n  WebAppsCreateOrUpdatePublicCertificateResponse,\n  WebAppsDeletePublicCertificateOptionalParams,\n  CsmPublishingProfileOptions,\n  WebAppsListPublishingProfileXmlWithSecretsOptionalParams,\n  WebAppsListPublishingProfileXmlWithSecretsResponse,\n  WebAppsResetProductionSlotConfigOptionalParams,\n  WebAppsRestartOptionalParams,\n  WebAppsRestoreFromBackupBlobOptionalParams,\n  DeletedAppRestoreRequest,\n  WebAppsRestoreFromDeletedAppOptionalParams,\n  SnapshotRestoreRequest,\n  WebAppsRestoreSnapshotOptionalParams,\n  WebAppsGetSiteContainerOptionalParams,\n  WebAppsGetSiteContainerResponse,\n  WebAppsCreateOrUpdateSiteContainerOptionalParams,\n  WebAppsCreateOrUpdateSiteContainerResponse,\n  WebAppsDeleteSiteContainerOptionalParams,\n  WebAppsGetSiteExtensionOptionalParams,\n  WebAppsGetSiteExtensionResponse,\n  WebAppsInstallSiteExtensionOptionalParams,\n  WebAppsInstallSiteExtensionResponse,\n  WebAppsDeleteSiteExtensionOptionalParams,\n  WebAppsGetSlotOptionalParams,\n  WebAppsGetSlotResponse,\n  WebAppsCreateOrUpdateSlotOptionalParams,\n  WebAppsCreateOrUpdateSlotResponse,\n  WebAppsDeleteSlotOptionalParams,\n  WebAppsUpdateSlotOptionalParams,\n  WebAppsUpdateSlotResponse,\n  WebAppsAnalyzeCustomHostnameSlotOptionalParams,\n  WebAppsAnalyzeCustomHostnameSlotResponse,\n  WebAppsApplySlotConfigurationSlotOptionalParams,\n  WebAppsBackupSlotOptionalParams,\n  WebAppsBackupSlotResponse,\n  WebAppsGetBackupStatusSlotOptionalParams,\n  WebAppsGetBackupStatusSlotResponse,\n  WebAppsDeleteBackupSlotOptionalParams,\n  WebAppsListBackupStatusSecretsSlotOptionalParams,\n  WebAppsListBackupStatusSecretsSlotResponse,\n  WebAppsRestoreSlotOptionalParams,\n  WebAppsGetFtpAllowedSlotOptionalParams,\n  WebAppsGetFtpAllowedSlotResponse,\n  WebAppsUpdateFtpAllowedSlotOptionalParams,\n  WebAppsUpdateFtpAllowedSlotResponse,\n  WebAppsGetScmAllowedSlotOptionalParams,\n  WebAppsGetScmAllowedSlotResponse,\n  WebAppsUpdateScmAllowedSlotOptionalParams,\n  WebAppsUpdateScmAllowedSlotResponse,\n  WebAppsUpdateApplicationSettingsSlotOptionalParams,\n  WebAppsUpdateApplicationSettingsSlotResponse,\n  WebAppsListApplicationSettingsSlotOptionalParams,\n  WebAppsListApplicationSettingsSlotResponse,\n  WebAppsUpdateAuthSettingsSlotOptionalParams,\n  WebAppsUpdateAuthSettingsSlotResponse,\n  WebAppsGetAuthSettingsSlotOptionalParams,\n  WebAppsGetAuthSettingsSlotResponse,\n  WebAppsGetAuthSettingsV2WithoutSecretsSlotOptionalParams,\n  WebAppsGetAuthSettingsV2WithoutSecretsSlotResponse,\n  WebAppsUpdateAuthSettingsV2SlotOptionalParams,\n  WebAppsUpdateAuthSettingsV2SlotResponse,\n  WebAppsGetAuthSettingsV2SlotOptionalParams,\n  WebAppsGetAuthSettingsV2SlotResponse,\n  WebAppsUpdateAzureStorageAccountsSlotOptionalParams,\n  WebAppsUpdateAzureStorageAccountsSlotResponse,\n  WebAppsListAzureStorageAccountsSlotOptionalParams,\n  WebAppsListAzureStorageAccountsSlotResponse,\n  WebAppsUpdateBackupConfigurationSlotOptionalParams,\n  WebAppsUpdateBackupConfigurationSlotResponse,\n  WebAppsDeleteBackupConfigurationSlotOptionalParams,\n  WebAppsGetBackupConfigurationSlotOptionalParams,\n  WebAppsGetBackupConfigurationSlotResponse,\n  WebAppsGetAppSettingKeyVaultReferenceSlotOptionalParams,\n  WebAppsGetAppSettingKeyVaultReferenceSlotResponse,\n  WebAppsGetSiteConnectionStringKeyVaultReferenceSlotOptionalParams,\n  WebAppsGetSiteConnectionStringKeyVaultReferenceSlotResponse,\n  WebAppsUpdateConnectionStringsSlotOptionalParams,\n  WebAppsUpdateConnectionStringsSlotResponse,\n  WebAppsListConnectionStringsSlotOptionalParams,\n  WebAppsListConnectionStringsSlotResponse,\n  WebAppsGetDiagnosticLogsConfigurationSlotOptionalParams,\n  WebAppsGetDiagnosticLogsConfigurationSlotResponse,\n  WebAppsUpdateDiagnosticLogsConfigSlotOptionalParams,\n  WebAppsUpdateDiagnosticLogsConfigSlotResponse,\n  WebAppsUpdateMetadataSlotOptionalParams,\n  WebAppsUpdateMetadataSlotResponse,\n  WebAppsListMetadataSlotOptionalParams,\n  WebAppsListMetadataSlotResponse,\n  WebAppsListPublishingCredentialsSlotOptionalParams,\n  WebAppsListPublishingCredentialsSlotResponse,\n  WebAppsUpdateSitePushSettingsSlotOptionalParams,\n  WebAppsUpdateSitePushSettingsSlotResponse,\n  WebAppsListSitePushSettingsSlotOptionalParams,\n  WebAppsListSitePushSettingsSlotResponse,\n  WebAppsGetConfigurationSlotOptionalParams,\n  WebAppsGetConfigurationSlotResponse,\n  WebAppsCreateOrUpdateConfigurationSlotOptionalParams,\n  WebAppsCreateOrUpdateConfigurationSlotResponse,\n  WebAppsUpdateConfigurationSlotOptionalParams,\n  WebAppsUpdateConfigurationSlotResponse,\n  WebAppsGetConfigurationSnapshotSlotOptionalParams,\n  WebAppsGetConfigurationSnapshotSlotResponse,\n  WebAppsRecoverSiteConfigurationSnapshotSlotOptionalParams,\n  WebAppsGetWebSiteContainerLogsSlotOptionalParams,\n  WebAppsGetWebSiteContainerLogsSlotResponse,\n  WebAppsGetContainerLogsZipSlotOptionalParams,\n  WebAppsGetContainerLogsZipSlotResponse,\n  WebAppsGetContinuousWebJobSlotOptionalParams,\n  WebAppsGetContinuousWebJobSlotResponse,\n  WebAppsDeleteContinuousWebJobSlotOptionalParams,\n  WebAppsStartContinuousWebJobSlotOptionalParams,\n  WebAppsStopContinuousWebJobSlotOptionalParams,\n  WebAppsGetSlotSiteDeploymentStatusSlotOptionalParams,\n  WebAppsGetSlotSiteDeploymentStatusSlotResponse,\n  WebAppsGetDeploymentSlotOptionalParams,\n  WebAppsGetDeploymentSlotResponse,\n  WebAppsCreateDeploymentSlotOptionalParams,\n  WebAppsCreateDeploymentSlotResponse,\n  WebAppsDeleteDeploymentSlotOptionalParams,\n  WebAppsListDeploymentLogSlotOptionalParams,\n  WebAppsListDeploymentLogSlotResponse,\n  WebAppsDiscoverBackupSlotOptionalParams,\n  WebAppsDiscoverBackupSlotResponse,\n  WebAppsGetDomainOwnershipIdentifierSlotOptionalParams,\n  WebAppsGetDomainOwnershipIdentifierSlotResponse,\n  WebAppsCreateOrUpdateDomainOwnershipIdentifierSlotOptionalParams,\n  WebAppsCreateOrUpdateDomainOwnershipIdentifierSlotResponse,\n  WebAppsDeleteDomainOwnershipIdentifierSlotOptionalParams,\n  WebAppsUpdateDomainOwnershipIdentifierSlotOptionalParams,\n  WebAppsUpdateDomainOwnershipIdentifierSlotResponse,\n  WebAppsGetMSDeployStatusSlotOptionalParams,\n  WebAppsGetMSDeployStatusSlotResponse,\n  WebAppsCreateMSDeployOperationSlotOptionalParams,\n  WebAppsCreateMSDeployOperationSlotResponse,\n  WebAppsGetMSDeployLogSlotOptionalParams,\n  WebAppsGetMSDeployLogSlotResponse,\n  WebAppsGetFunctionsAdminTokenSlotOptionalParams,\n  WebAppsGetFunctionsAdminTokenSlotResponse,\n  WebAppsGetInstanceFunctionSlotOptionalParams,\n  WebAppsGetInstanceFunctionSlotResponse,\n  WebAppsCreateInstanceFunctionSlotOptionalParams,\n  WebAppsCreateInstanceFunctionSlotResponse,\n  WebAppsDeleteInstanceFunctionSlotOptionalParams,\n  WebAppsCreateOrUpdateFunctionSecretSlotOptionalParams,\n  WebAppsCreateOrUpdateFunctionSecretSlotResponse,\n  WebAppsDeleteFunctionSecretSlotOptionalParams,\n  WebAppsListFunctionKeysSlotOptionalParams,\n  WebAppsListFunctionKeysSlotResponse,\n  WebAppsListFunctionSecretsSlotOptionalParams,\n  WebAppsListFunctionSecretsSlotResponse,\n  WebAppsListHostKeysSlotOptionalParams,\n  WebAppsListHostKeysSlotResponse,\n  WebAppsListSyncStatusSlotOptionalParams,\n  WebAppsSyncFunctionsSlotOptionalParams,\n  WebAppsCreateOrUpdateHostSecretSlotOptionalParams,\n  WebAppsCreateOrUpdateHostSecretSlotResponse,\n  WebAppsDeleteHostSecretSlotOptionalParams,\n  WebAppsGetHostNameBindingSlotOptionalParams,\n  WebAppsGetHostNameBindingSlotResponse,\n  WebAppsCreateOrUpdateHostNameBindingSlotOptionalParams,\n  WebAppsCreateOrUpdateHostNameBindingSlotResponse,\n  WebAppsDeleteHostNameBindingSlotOptionalParams,\n  WebAppsGetHybridConnectionSlotOptionalParams,\n  WebAppsGetHybridConnectionSlotResponse,\n  WebAppsCreateOrUpdateHybridConnectionSlotOptionalParams,\n  WebAppsCreateOrUpdateHybridConnectionSlotResponse,\n  WebAppsDeleteHybridConnectionSlotOptionalParams,\n  WebAppsUpdateHybridConnectionSlotOptionalParams,\n  WebAppsUpdateHybridConnectionSlotResponse,\n  WebAppsListHybridConnectionsSlotOptionalParams,\n  WebAppsListHybridConnectionsSlotResponse,\n  WebAppsListRelayServiceConnectionsSlotOptionalParams,\n  WebAppsListRelayServiceConnectionsSlotResponse,\n  WebAppsGetRelayServiceConnectionSlotOptionalParams,\n  WebAppsGetRelayServiceConnectionSlotResponse,\n  WebAppsCreateOrUpdateRelayServiceConnectionSlotOptionalParams,\n  WebAppsCreateOrUpdateRelayServiceConnectionSlotResponse,\n  WebAppsDeleteRelayServiceConnectionSlotOptionalParams,\n  WebAppsUpdateRelayServiceConnectionSlotOptionalParams,\n  WebAppsUpdateRelayServiceConnectionSlotResponse,\n  WebAppsGetInstanceInfoSlotOptionalParams,\n  WebAppsGetInstanceInfoSlotResponse,\n  WebAppsGetInstanceMsDeployStatusSlotOptionalParams,\n  WebAppsGetInstanceMsDeployStatusSlotResponse,\n  WebAppsCreateInstanceMSDeployOperationSlotOptionalParams,\n  WebAppsCreateInstanceMSDeployOperationSlotResponse,\n  WebAppsGetInstanceMSDeployLogSlotOptionalParams,\n  WebAppsGetInstanceMSDeployLogSlotResponse,\n  WebAppsGetInstanceProcessSlotOptionalParams,\n  WebAppsGetInstanceProcessSlotResponse,\n  WebAppsDeleteInstanceProcessSlotOptionalParams,\n  WebAppsGetInstanceProcessDumpSlotOptionalParams,\n  WebAppsGetInstanceProcessDumpSlotResponse,\n  WebAppsGetInstanceProcessModuleSlotOptionalParams,\n  WebAppsGetInstanceProcessModuleSlotResponse,\n  WebAppsIsCloneableSlotOptionalParams,\n  WebAppsIsCloneableSlotResponse,\n  WebAppsListSyncFunctionTriggersSlotOptionalParams,\n  WebAppsListSyncFunctionTriggersSlotResponse,\n  WebAppsGetMigrateMySqlStatusSlotOptionalParams,\n  WebAppsGetMigrateMySqlStatusSlotResponse,\n  WebAppsGetSwiftVirtualNetworkConnectionSlotOptionalParams,\n  WebAppsGetSwiftVirtualNetworkConnectionSlotResponse,\n  WebAppsCreateOrUpdateSwiftVirtualNetworkConnectionWithCheckSlotOptionalParams,\n  WebAppsCreateOrUpdateSwiftVirtualNetworkConnectionWithCheckSlotResponse,\n  WebAppsDeleteSwiftVirtualNetworkSlotOptionalParams,\n  WebAppsUpdateSwiftVirtualNetworkConnectionWithCheckSlotOptionalParams,\n  WebAppsUpdateSwiftVirtualNetworkConnectionWithCheckSlotResponse,\n  WebAppsListNetworkFeaturesSlotOptionalParams,\n  WebAppsListNetworkFeaturesSlotResponse,\n  WebAppsGetNetworkTraceOperationSlotOptionalParams,\n  WebAppsGetNetworkTraceOperationSlotResponse,\n  WebAppsStartWebSiteNetworkTraceSlotOptionalParams,\n  WebAppsStartWebSiteNetworkTraceSlotResponse,\n  WebAppsStartWebSiteNetworkTraceOperationSlotOptionalParams,\n  WebAppsStartWebSiteNetworkTraceOperationSlotResponse,\n  WebAppsStopWebSiteNetworkTraceSlotOptionalParams,\n  WebAppsGetNetworkTracesSlotOptionalParams,\n  WebAppsGetNetworkTracesSlotResponse,\n  WebAppsGetNetworkTraceOperationSlotV2OptionalParams,\n  WebAppsGetNetworkTraceOperationSlotV2Response,\n  WebAppsGetNetworkTracesSlotV2OptionalParams,\n  WebAppsGetNetworkTracesSlotV2Response,\n  WebAppsGenerateNewSitePublishingPasswordSlotOptionalParams,\n  WebAppsGetSitePhpErrorLogFlagSlotOptionalParams,\n  WebAppsGetSitePhpErrorLogFlagSlotResponse,\n  WebAppsListPremierAddOnsSlotOptionalParams,\n  WebAppsListPremierAddOnsSlotResponse,\n  WebAppsGetPremierAddOnSlotOptionalParams,\n  WebAppsGetPremierAddOnSlotResponse,\n  WebAppsAddPremierAddOnSlotOptionalParams,\n  WebAppsAddPremierAddOnSlotResponse,\n  WebAppsDeletePremierAddOnSlotOptionalParams,\n  WebAppsUpdatePremierAddOnSlotOptionalParams,\n  WebAppsUpdatePremierAddOnSlotResponse,\n  WebAppsGetPrivateAccessSlotOptionalParams,\n  WebAppsGetPrivateAccessSlotResponse,\n  WebAppsPutPrivateAccessVnetSlotOptionalParams,\n  WebAppsPutPrivateAccessVnetSlotResponse,\n  WebAppsGetPrivateEndpointConnectionSlotOptionalParams,\n  WebAppsGetPrivateEndpointConnectionSlotResponse,\n  WebAppsApproveOrRejectPrivateEndpointConnectionSlotOptionalParams,\n  WebAppsApproveOrRejectPrivateEndpointConnectionSlotResponse,\n  WebAppsDeletePrivateEndpointConnectionSlotOptionalParams,\n  WebAppsDeletePrivateEndpointConnectionSlotResponse,\n  WebAppsGetPrivateLinkResourcesSlotOptionalParams,\n  WebAppsGetPrivateLinkResourcesSlotResponse,\n  WebAppsGetProcessSlotOptionalParams,\n  WebAppsGetProcessSlotResponse,\n  WebAppsDeleteProcessSlotOptionalParams,\n  WebAppsGetProcessDumpSlotOptionalParams,\n  WebAppsGetProcessDumpSlotResponse,\n  WebAppsGetProcessModuleSlotOptionalParams,\n  WebAppsGetProcessModuleSlotResponse,\n  WebAppsGetPublicCertificateSlotOptionalParams,\n  WebAppsGetPublicCertificateSlotResponse,\n  WebAppsCreateOrUpdatePublicCertificateSlotOptionalParams,\n  WebAppsCreateOrUpdatePublicCertificateSlotResponse,\n  WebAppsDeletePublicCertificateSlotOptionalParams,\n  WebAppsListPublishingProfileXmlWithSecretsSlotOptionalParams,\n  WebAppsListPublishingProfileXmlWithSecretsSlotResponse,\n  WebAppsResetSlotConfigurationSlotOptionalParams,\n  WebAppsRestartSlotOptionalParams,\n  WebAppsRestoreFromBackupBlobSlotOptionalParams,\n  WebAppsRestoreFromDeletedAppSlotOptionalParams,\n  WebAppsRestoreSnapshotSlotOptionalParams,\n  WebAppsGetSiteContainerSlotOptionalParams,\n  WebAppsGetSiteContainerSlotResponse,\n  WebAppsCreateOrUpdateSiteContainerSlotOptionalParams,\n  WebAppsCreateOrUpdateSiteContainerSlotResponse,\n  WebAppsDeleteSiteContainerSlotOptionalParams,\n  WebAppsGetSiteExtensionSlotOptionalParams,\n  WebAppsGetSiteExtensionSlotResponse,\n  WebAppsInstallSiteExtensionSlotOptionalParams,\n  WebAppsInstallSiteExtensionSlotResponse,\n  WebAppsDeleteSiteExtensionSlotOptionalParams,\n  WebAppsSwapSlotOptionalParams,\n  WebAppsGetSourceControlSlotOptionalParams,\n  WebAppsGetSourceControlSlotResponse,\n  SiteSourceControl,\n  WebAppsCreateOrUpdateSourceControlSlotOptionalParams,\n  WebAppsCreateOrUpdateSourceControlSlotResponse,\n  WebAppsDeleteSourceControlSlotOptionalParams,\n  WebAppsUpdateSourceControlSlotOptionalParams,\n  WebAppsUpdateSourceControlSlotResponse,\n  WebAppsStartSlotOptionalParams,\n  WebAppsStartNetworkTraceSlotOptionalParams,\n  WebAppsStartNetworkTraceSlotResponse,\n  WebAppsStopSlotOptionalParams,\n  WebAppsStopNetworkTraceSlotOptionalParams,\n  WebAppsSyncRepositorySlotOptionalParams,\n  WebAppsSyncFunctionTriggersSlotOptionalParams,\n  WebAppsGetTriggeredWebJobSlotOptionalParams,\n  WebAppsGetTriggeredWebJobSlotResponse,\n  WebAppsDeleteTriggeredWebJobSlotOptionalParams,\n  WebAppsGetTriggeredWebJobHistorySlotOptionalParams,\n  WebAppsGetTriggeredWebJobHistorySlotResponse,\n  WebAppsRunTriggeredWebJobSlotOptionalParams,\n  WebAppsListVnetConnectionsSlotOptionalParams,\n  WebAppsListVnetConnectionsSlotResponse,\n  WebAppsGetVnetConnectionSlotOptionalParams,\n  WebAppsGetVnetConnectionSlotResponse,\n  VnetInfoResource,\n  WebAppsCreateOrUpdateVnetConnectionSlotOptionalParams,\n  WebAppsCreateOrUpdateVnetConnectionSlotResponse,\n  WebAppsDeleteVnetConnectionSlotOptionalParams,\n  WebAppsUpdateVnetConnectionSlotOptionalParams,\n  WebAppsUpdateVnetConnectionSlotResponse,\n  WebAppsGetVnetConnectionGatewaySlotOptionalParams,\n  WebAppsGetVnetConnectionGatewaySlotResponse,\n  VnetGateway,\n  WebAppsCreateOrUpdateVnetConnectionGatewaySlotOptionalParams,\n  WebAppsCreateOrUpdateVnetConnectionGatewaySlotResponse,\n  WebAppsUpdateVnetConnectionGatewaySlotOptionalParams,\n  WebAppsUpdateVnetConnectionGatewaySlotResponse,\n  WebAppsGetWebJobSlotOptionalParams,\n  WebAppsGetWebJobSlotResponse,\n  WebAppsSwapSlotWithProductionOptionalParams,\n  WebAppsGetSourceControlOptionalParams,\n  WebAppsGetSourceControlResponse,\n  WebAppsCreateOrUpdateSourceControlOptionalParams,\n  WebAppsCreateOrUpdateSourceControlResponse,\n  WebAppsDeleteSourceControlOptionalParams,\n  WebAppsUpdateSourceControlOptionalParams,\n  WebAppsUpdateSourceControlResponse,\n  WebAppsStartOptionalParams,\n  WebAppsStartNetworkTraceOptionalParams,\n  WebAppsStartNetworkTraceResponse,\n  WebAppsStopOptionalParams,\n  WebAppsStopNetworkTraceOptionalParams,\n  WebAppsSyncRepositoryOptionalParams,\n  WebAppsSyncFunctionTriggersOptionalParams,\n  WebAppsGetTriggeredWebJobOptionalParams,\n  WebAppsGetTriggeredWebJobResponse,\n  WebAppsDeleteTriggeredWebJobOptionalParams,\n  WebAppsGetTriggeredWebJobHistoryOptionalParams,\n  WebAppsGetTriggeredWebJobHistoryResponse,\n  WebAppsRunTriggeredWebJobOptionalParams,\n  WebAppsListVnetConnectionsOptionalParams,\n  WebAppsListVnetConnectionsResponse,\n  WebAppsGetVnetConnectionOptionalParams,\n  WebAppsGetVnetConnectionResponse,\n  WebAppsCreateOrUpdateVnetConnectionOptionalParams,\n  WebAppsCreateOrUpdateVnetConnectionResponse,\n  WebAppsDeleteVnetConnectionOptionalParams,\n  WebAppsUpdateVnetConnectionOptionalParams,\n  WebAppsUpdateVnetConnectionResponse,\n  WebAppsGetVnetConnectionGatewayOptionalParams,\n  WebAppsGetVnetConnectionGatewayResponse,\n  WebAppsCreateOrUpdateVnetConnectionGatewayOptionalParams,\n  WebAppsCreateOrUpdateVnetConnectionGatewayResponse,\n  WebAppsUpdateVnetConnectionGatewayOptionalParams,\n  WebAppsUpdateVnetConnectionGatewayResponse,\n  WebAppsGetWebJobOptionalParams,\n  WebAppsGetWebJobResponse,\n  WebAppsDeployWorkflowArtifactsOptionalParams,\n  WebAppsDeployWorkflowArtifactsSlotOptionalParams,\n  WebAppsGetInstanceWorkflowSlotOptionalParams,\n  WebAppsGetInstanceWorkflowSlotResponse,\n  WebAppsListWorkflowsConnectionsSlotOptionalParams,\n  WebAppsListWorkflowsConnectionsSlotResponse,\n  WebAppsGetWorkflowOptionalParams,\n  WebAppsGetWorkflowResponse,\n  WebAppsListWorkflowsConnectionsOptionalParams,\n  WebAppsListWorkflowsConnectionsResponse,\n  WebAppsListNextResponse,\n  WebAppsListByResourceGroupNextResponse,\n  WebAppsListBackupsNextResponse,\n  WebAppsListBasicPublishingCredentialsPoliciesNextResponse,\n  WebAppsListConfigurationsNextResponse,\n  WebAppsGetAppSettingsKeyVaultReferencesNextResponse,\n  WebAppsGetSiteConnectionStringKeyVaultReferencesNextResponse,\n  WebAppsListConfigurationSnapshotInfoNextResponse,\n  WebAppsListContinuousWebJobsNextResponse,\n  WebAppsListProductionSiteDeploymentStatusesNextResponse,\n  WebAppsListDeploymentsNextResponse,\n  WebAppsListDomainOwnershipIdentifiersNextResponse,\n  WebAppsListFunctionsNextResponse,\n  WebAppsListHostNameBindingsNextResponse,\n  WebAppsListInstanceIdentifiersNextResponse,\n  WebAppsListInstanceProcessesNextResponse,\n  WebAppsListInstanceProcessModulesNextResponse,\n  WebAppsListInstanceProcessThreadsNextResponse,\n  WebAppsListSiteBackupsNextResponse,\n  WebAppsListPerfMonCountersNextResponse,\n  WebAppsGetPrivateEndpointConnectionListNextResponse,\n  WebAppsListProcessesNextResponse,\n  WebAppsListProcessModulesNextResponse,\n  WebAppsListProcessThreadsNextResponse,\n  WebAppsListPublicCertificatesNextResponse,\n  WebAppsListSiteContainersNextResponse,\n  WebAppsListSiteExtensionsNextResponse,\n  WebAppsListSlotsNextResponse,\n  WebAppsListBackupsSlotNextResponse,\n  WebAppsListBasicPublishingCredentialsPoliciesSlotNextResponse,\n  WebAppsListConfigurationsSlotNextResponse,\n  WebAppsGetAppSettingsKeyVaultReferencesSlotNextResponse,\n  WebAppsGetSiteConnectionStringKeyVaultReferencesSlotNextResponse,\n  WebAppsListConfigurationSnapshotInfoSlotNextResponse,\n  WebAppsListContinuousWebJobsSlotNextResponse,\n  WebAppsListSlotSiteDeploymentStatusesSlotNextResponse,\n  WebAppsListDeploymentsSlotNextResponse,\n  WebAppsListDomainOwnershipIdentifiersSlotNextResponse,\n  WebAppsListInstanceFunctionsSlotNextResponse,\n  WebAppsListHostNameBindingsSlotNextResponse,\n  WebAppsListInstanceIdentifiersSlotNextResponse,\n  WebAppsListInstanceProcessesSlotNextResponse,\n  WebAppsListInstanceProcessModulesSlotNextResponse,\n  WebAppsListInstanceProcessThreadsSlotNextResponse,\n  WebAppsListSiteBackupsSlotNextResponse,\n  WebAppsListPerfMonCountersSlotNextResponse,\n  WebAppsGetPrivateEndpointConnectionListSlotNextResponse,\n  WebAppsListProcessesSlotNextResponse,\n  WebAppsListProcessModulesSlotNextResponse,\n  WebAppsListProcessThreadsSlotNextResponse,\n  WebAppsListPublicCertificatesSlotNextResponse,\n  WebAppsListSiteContainersSlotNextResponse,\n  WebAppsListSiteExtensionsSlotNextResponse,\n  WebAppsListSlotDifferencesSlotNextResponse,\n  WebAppsListSnapshotsSlotNextResponse,\n  WebAppsListSnapshotsFromDRSecondarySlotNextResponse,\n  WebAppsListTriggeredWebJobsSlotNextResponse,\n  WebAppsListTriggeredWebJobHistorySlotNextResponse,\n  WebAppsListUsagesSlotNextResponse,\n  WebAppsListWebJobsSlotNextResponse,\n  WebAppsListSlotDifferencesFromProductionNextResponse,\n  WebAppsListSnapshotsNextResponse,\n  WebAppsListSnapshotsFromDRSecondaryNextResponse,\n  WebAppsListTriggeredWebJobsNextResponse,\n  WebAppsListTriggeredWebJobHistoryNextResponse,\n  WebAppsListUsagesNextResponse,\n  WebAppsListWebJobsNextResponse,\n  WebAppsListInstanceWorkflowsSlotNextResponse,\n  WebAppsListWorkflowsNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing WebApps operations. */\nexport class WebAppsImpl implements WebApps {\n  private readonly client: WebSiteManagementClient;\n\n  /**\n   * Initialize a new instance of the class WebApps class.\n   * @param client Reference to the service client\n   */\n  constructor(client: WebSiteManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Description for Get all apps for a subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: WebAppsListOptionalParams,\n  ): PagedAsyncIterableIterator<Site> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    options?: WebAppsListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Site[]> {\n    let result: WebAppsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: WebAppsListOptionalParams,\n  ): AsyncIterableIterator<Site> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets all web, mobile, and API apps in the specified resource group.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: WebAppsListByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<Site> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: WebAppsListByResourceGroupOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Site[]> {\n    let result: WebAppsListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: WebAppsListByResourceGroupOptionalParams,\n  ): AsyncIterableIterator<Site> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets existing backups of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  public listBackups(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListBackupsOptionalParams,\n  ): PagedAsyncIterableIterator<BackupItem> {\n    const iter = this.listBackupsPagingAll(resourceGroupName, name, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBackupsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listBackupsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListBackupsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<BackupItem[]> {\n    let result: WebAppsListBackupsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBackups(resourceGroupName, name, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBackupsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBackupsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListBackupsOptionalParams,\n  ): AsyncIterableIterator<BackupItem> {\n    for await (const page of this.listBackupsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Returns whether Scm basic auth is allowed and whether Ftp is allowed for a given\n   * site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  public listBasicPublishingCredentialsPolicies(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListBasicPublishingCredentialsPoliciesOptionalParams,\n  ): PagedAsyncIterableIterator<CsmPublishingCredentialsPoliciesEntity> {\n    const iter = this.listBasicPublishingCredentialsPoliciesPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBasicPublishingCredentialsPoliciesPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listBasicPublishingCredentialsPoliciesPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListBasicPublishingCredentialsPoliciesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<CsmPublishingCredentialsPoliciesEntity[]> {\n    let result: WebAppsListBasicPublishingCredentialsPoliciesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBasicPublishingCredentialsPolicies(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBasicPublishingCredentialsPoliciesNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBasicPublishingCredentialsPoliciesPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListBasicPublishingCredentialsPoliciesOptionalParams,\n  ): AsyncIterableIterator<CsmPublishingCredentialsPoliciesEntity> {\n    for await (const page of this.listBasicPublishingCredentialsPoliciesPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List the configurations of an app\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  public listConfigurations(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListConfigurationsOptionalParams,\n  ): PagedAsyncIterableIterator<SiteConfigResource> {\n    const iter = this.listConfigurationsPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listConfigurationsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listConfigurationsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListConfigurationsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<SiteConfigResource[]> {\n    let result: WebAppsListConfigurationsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listConfigurations(resourceGroupName, name, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listConfigurationsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listConfigurationsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListConfigurationsOptionalParams,\n  ): AsyncIterableIterator<SiteConfigResource> {\n    for await (const page of this.listConfigurationsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets the config reference app settings and status of an app\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  public listAppSettingsKeyVaultReferences(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetAppSettingsKeyVaultReferencesOptionalParams,\n  ): PagedAsyncIterableIterator<ApiKVReference> {\n    const iter = this.getAppSettingsKeyVaultReferencesPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getAppSettingsKeyVaultReferencesPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getAppSettingsKeyVaultReferencesPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetAppSettingsKeyVaultReferencesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ApiKVReference[]> {\n    let result: WebAppsGetAppSettingsKeyVaultReferencesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getAppSettingsKeyVaultReferences(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getAppSettingsKeyVaultReferencesNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getAppSettingsKeyVaultReferencesPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetAppSettingsKeyVaultReferencesOptionalParams,\n  ): AsyncIterableIterator<ApiKVReference> {\n    for await (const page of this.getAppSettingsKeyVaultReferencesPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets the config reference app settings and status of an app\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  public listSiteConnectionStringKeyVaultReferences(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetSiteConnectionStringKeyVaultReferencesOptionalParams,\n  ): PagedAsyncIterableIterator<ApiKVReference> {\n    const iter = this.getSiteConnectionStringKeyVaultReferencesPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getSiteConnectionStringKeyVaultReferencesPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getSiteConnectionStringKeyVaultReferencesPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetSiteConnectionStringKeyVaultReferencesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ApiKVReference[]> {\n    let result: WebAppsGetSiteConnectionStringKeyVaultReferencesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getSiteConnectionStringKeyVaultReferences(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getSiteConnectionStringKeyVaultReferencesNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getSiteConnectionStringKeyVaultReferencesPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetSiteConnectionStringKeyVaultReferencesOptionalParams,\n  ): AsyncIterableIterator<ApiKVReference> {\n    for await (const page of this.getSiteConnectionStringKeyVaultReferencesPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets a list of web app configuration snapshots identifiers. Each element of the list\n   * contains a timestamp and the ID of the snapshot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  public listConfigurationSnapshotInfo(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListConfigurationSnapshotInfoOptionalParams,\n  ): PagedAsyncIterableIterator<SiteConfigurationSnapshotInfo> {\n    const iter = this.listConfigurationSnapshotInfoPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listConfigurationSnapshotInfoPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listConfigurationSnapshotInfoPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListConfigurationSnapshotInfoOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<SiteConfigurationSnapshotInfo[]> {\n    let result: WebAppsListConfigurationSnapshotInfoResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listConfigurationSnapshotInfo(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listConfigurationSnapshotInfoNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listConfigurationSnapshotInfoPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListConfigurationSnapshotInfoOptionalParams,\n  ): AsyncIterableIterator<SiteConfigurationSnapshotInfo> {\n    for await (const page of this.listConfigurationSnapshotInfoPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List continuous web jobs for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param options The options parameters.\n   */\n  public listContinuousWebJobs(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListContinuousWebJobsOptionalParams,\n  ): PagedAsyncIterableIterator<ContinuousWebJob> {\n    const iter = this.listContinuousWebJobsPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listContinuousWebJobsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listContinuousWebJobsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListContinuousWebJobsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ContinuousWebJob[]> {\n    let result: WebAppsListContinuousWebJobsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listContinuousWebJobs(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listContinuousWebJobsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listContinuousWebJobsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListContinuousWebJobsOptionalParams,\n  ): AsyncIterableIterator<ContinuousWebJob> {\n    for await (const page of this.listContinuousWebJobsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List deployment statuses for an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  public listProductionSiteDeploymentStatuses(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListProductionSiteDeploymentStatusesOptionalParams,\n  ): PagedAsyncIterableIterator<CsmDeploymentStatus> {\n    const iter = this.listProductionSiteDeploymentStatusesPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listProductionSiteDeploymentStatusesPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listProductionSiteDeploymentStatusesPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListProductionSiteDeploymentStatusesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<CsmDeploymentStatus[]> {\n    let result: WebAppsListProductionSiteDeploymentStatusesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listProductionSiteDeploymentStatuses(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listProductionSiteDeploymentStatusesNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listProductionSiteDeploymentStatusesPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListProductionSiteDeploymentStatusesOptionalParams,\n  ): AsyncIterableIterator<CsmDeploymentStatus> {\n    for await (const page of this.listProductionSiteDeploymentStatusesPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List deployments for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  public listDeployments(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListDeploymentsOptionalParams,\n  ): PagedAsyncIterableIterator<Deployment> {\n    const iter = this.listDeploymentsPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listDeploymentsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listDeploymentsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListDeploymentsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Deployment[]> {\n    let result: WebAppsListDeploymentsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listDeployments(resourceGroupName, name, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listDeploymentsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listDeploymentsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListDeploymentsOptionalParams,\n  ): AsyncIterableIterator<Deployment> {\n    for await (const page of this.listDeploymentsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Lists ownership identifiers for domain associated with web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  public listDomainOwnershipIdentifiers(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListDomainOwnershipIdentifiersOptionalParams,\n  ): PagedAsyncIterableIterator<Identifier> {\n    const iter = this.listDomainOwnershipIdentifiersPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listDomainOwnershipIdentifiersPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listDomainOwnershipIdentifiersPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListDomainOwnershipIdentifiersOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Identifier[]> {\n    let result: WebAppsListDomainOwnershipIdentifiersResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listDomainOwnershipIdentifiers(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listDomainOwnershipIdentifiersNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listDomainOwnershipIdentifiersPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListDomainOwnershipIdentifiersOptionalParams,\n  ): AsyncIterableIterator<Identifier> {\n    for await (const page of this.listDomainOwnershipIdentifiersPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List the functions for a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param options The options parameters.\n   */\n  public listFunctions(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListFunctionsOptionalParams,\n  ): PagedAsyncIterableIterator<FunctionEnvelope> {\n    const iter = this.listFunctionsPagingAll(resourceGroupName, name, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listFunctionsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listFunctionsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListFunctionsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<FunctionEnvelope[]> {\n    let result: WebAppsListFunctionsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listFunctions(resourceGroupName, name, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listFunctionsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listFunctionsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListFunctionsOptionalParams,\n  ): AsyncIterableIterator<FunctionEnvelope> {\n    for await (const page of this.listFunctionsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get hostname bindings for an app or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  public listHostNameBindings(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListHostNameBindingsOptionalParams,\n  ): PagedAsyncIterableIterator<HostNameBinding> {\n    const iter = this.listHostNameBindingsPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listHostNameBindingsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listHostNameBindingsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListHostNameBindingsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<HostNameBinding[]> {\n    let result: WebAppsListHostNameBindingsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listHostNameBindings(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listHostNameBindingsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listHostNameBindingsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListHostNameBindingsOptionalParams,\n  ): AsyncIterableIterator<HostNameBinding> {\n    for await (const page of this.listHostNameBindingsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets all scale-out instances of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  public listInstanceIdentifiers(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListInstanceIdentifiersOptionalParams,\n  ): PagedAsyncIterableIterator<WebSiteInstanceStatus> {\n    const iter = this.listInstanceIdentifiersPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listInstanceIdentifiersPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listInstanceIdentifiersPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListInstanceIdentifiersOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<WebSiteInstanceStatus[]> {\n    let result: WebAppsListInstanceIdentifiersResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listInstanceIdentifiers(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listInstanceIdentifiersNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listInstanceIdentifiersPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListInstanceIdentifiersOptionalParams,\n  ): AsyncIterableIterator<WebSiteInstanceStatus> {\n    for await (const page of this.listInstanceIdentifiersPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get list of processes for a web site, or a deployment slot, or for a specific\n   * scaled-out instance in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param options The options parameters.\n   */\n  public listInstanceProcesses(\n    resourceGroupName: string,\n    name: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessesOptionalParams,\n  ): PagedAsyncIterableIterator<ProcessInfo> {\n    const iter = this.listInstanceProcessesPagingAll(\n      resourceGroupName,\n      name,\n      instanceId,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listInstanceProcessesPagingPage(\n          resourceGroupName,\n          name,\n          instanceId,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listInstanceProcessesPagingPage(\n    resourceGroupName: string,\n    name: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ProcessInfo[]> {\n    let result: WebAppsListInstanceProcessesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listInstanceProcesses(\n        resourceGroupName,\n        name,\n        instanceId,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listInstanceProcessesNext(\n        resourceGroupName,\n        name,\n        instanceId,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listInstanceProcessesPagingAll(\n    resourceGroupName: string,\n    name: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessesOptionalParams,\n  ): AsyncIterableIterator<ProcessInfo> {\n    for await (const page of this.listInstanceProcessesPagingPage(\n      resourceGroupName,\n      name,\n      instanceId,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List module information for a process by its ID for a specific scaled-out instance\n   * in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param options The options parameters.\n   */\n  public listInstanceProcessModules(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessModulesOptionalParams,\n  ): PagedAsyncIterableIterator<ProcessModuleInfo> {\n    const iter = this.listInstanceProcessModulesPagingAll(\n      resourceGroupName,\n      name,\n      processId,\n      instanceId,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listInstanceProcessModulesPagingPage(\n          resourceGroupName,\n          name,\n          processId,\n          instanceId,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listInstanceProcessModulesPagingPage(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessModulesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ProcessModuleInfo[]> {\n    let result: WebAppsListInstanceProcessModulesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listInstanceProcessModules(\n        resourceGroupName,\n        name,\n        processId,\n        instanceId,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listInstanceProcessModulesNext(\n        resourceGroupName,\n        name,\n        processId,\n        instanceId,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listInstanceProcessModulesPagingAll(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessModulesOptionalParams,\n  ): AsyncIterableIterator<ProcessModuleInfo> {\n    for await (const page of this.listInstanceProcessModulesPagingPage(\n      resourceGroupName,\n      name,\n      processId,\n      instanceId,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List the threads in a process by its ID for a specific scaled-out instance in a web\n   * site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param options The options parameters.\n   */\n  public listInstanceProcessThreads(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessThreadsOptionalParams,\n  ): PagedAsyncIterableIterator<ProcessThreadInfo> {\n    const iter = this.listInstanceProcessThreadsPagingAll(\n      resourceGroupName,\n      name,\n      processId,\n      instanceId,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listInstanceProcessThreadsPagingPage(\n          resourceGroupName,\n          name,\n          processId,\n          instanceId,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listInstanceProcessThreadsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessThreadsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ProcessThreadInfo[]> {\n    let result: WebAppsListInstanceProcessThreadsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listInstanceProcessThreads(\n        resourceGroupName,\n        name,\n        processId,\n        instanceId,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listInstanceProcessThreadsNext(\n        resourceGroupName,\n        name,\n        processId,\n        instanceId,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listInstanceProcessThreadsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessThreadsOptionalParams,\n  ): AsyncIterableIterator<ProcessThreadInfo> {\n    for await (const page of this.listInstanceProcessThreadsPagingPage(\n      resourceGroupName,\n      name,\n      processId,\n      instanceId,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets existing backups of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  public listSiteBackups(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSiteBackupsOptionalParams,\n  ): PagedAsyncIterableIterator<BackupItem> {\n    const iter = this.listSiteBackupsPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listSiteBackupsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listSiteBackupsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSiteBackupsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<BackupItem[]> {\n    let result: WebAppsListSiteBackupsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listSiteBackups(resourceGroupName, name, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listSiteBackupsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listSiteBackupsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSiteBackupsOptionalParams,\n  ): AsyncIterableIterator<BackupItem> {\n    for await (const page of this.listSiteBackupsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets perfmon counters for web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param options The options parameters.\n   */\n  public listPerfMonCounters(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListPerfMonCountersOptionalParams,\n  ): PagedAsyncIterableIterator<PerfMonResponse> {\n    const iter = this.listPerfMonCountersPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPerfMonCountersPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listPerfMonCountersPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListPerfMonCountersOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<PerfMonResponse[]> {\n    let result: WebAppsListPerfMonCountersResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listPerfMonCounters(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listPerfMonCountersNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPerfMonCountersPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListPerfMonCountersOptionalParams,\n  ): AsyncIterableIterator<PerfMonResponse> {\n    for await (const page of this.listPerfMonCountersPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets the list of private endpoint connections associated with a site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the site.\n   * @param options The options parameters.\n   */\n  public listPrivateEndpointConnectionList(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetPrivateEndpointConnectionListOptionalParams,\n  ): PagedAsyncIterableIterator<RemotePrivateEndpointConnectionARMResource> {\n    const iter = this.getPrivateEndpointConnectionListPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getPrivateEndpointConnectionListPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getPrivateEndpointConnectionListPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetPrivateEndpointConnectionListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<RemotePrivateEndpointConnectionARMResource[]> {\n    let result: WebAppsGetPrivateEndpointConnectionListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getPrivateEndpointConnectionList(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getPrivateEndpointConnectionListNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getPrivateEndpointConnectionListPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetPrivateEndpointConnectionListOptionalParams,\n  ): AsyncIterableIterator<RemotePrivateEndpointConnectionARMResource> {\n    for await (const page of this.getPrivateEndpointConnectionListPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get list of processes for a web site, or a deployment slot, or for a specific\n   * scaled-out instance in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param options The options parameters.\n   */\n  public listProcesses(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListProcessesOptionalParams,\n  ): PagedAsyncIterableIterator<ProcessInfo> {\n    const iter = this.listProcessesPagingAll(resourceGroupName, name, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listProcessesPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listProcessesPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListProcessesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ProcessInfo[]> {\n    let result: WebAppsListProcessesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listProcesses(resourceGroupName, name, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listProcessesNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listProcessesPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListProcessesOptionalParams,\n  ): AsyncIterableIterator<ProcessInfo> {\n    for await (const page of this.listProcessesPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List module information for a process by its ID for a specific scaled-out instance\n   * in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param options The options parameters.\n   */\n  public listProcessModules(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    options?: WebAppsListProcessModulesOptionalParams,\n  ): PagedAsyncIterableIterator<ProcessModuleInfo> {\n    const iter = this.listProcessModulesPagingAll(\n      resourceGroupName,\n      name,\n      processId,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listProcessModulesPagingPage(\n          resourceGroupName,\n          name,\n          processId,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listProcessModulesPagingPage(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    options?: WebAppsListProcessModulesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ProcessModuleInfo[]> {\n    let result: WebAppsListProcessModulesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listProcessModules(\n        resourceGroupName,\n        name,\n        processId,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listProcessModulesNext(\n        resourceGroupName,\n        name,\n        processId,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listProcessModulesPagingAll(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    options?: WebAppsListProcessModulesOptionalParams,\n  ): AsyncIterableIterator<ProcessModuleInfo> {\n    for await (const page of this.listProcessModulesPagingPage(\n      resourceGroupName,\n      name,\n      processId,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List the threads in a process by its ID for a specific scaled-out instance in a web\n   * site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param options The options parameters.\n   */\n  public listProcessThreads(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    options?: WebAppsListProcessThreadsOptionalParams,\n  ): PagedAsyncIterableIterator<ProcessThreadInfo> {\n    const iter = this.listProcessThreadsPagingAll(\n      resourceGroupName,\n      name,\n      processId,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listProcessThreadsPagingPage(\n          resourceGroupName,\n          name,\n          processId,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listProcessThreadsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    options?: WebAppsListProcessThreadsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ProcessThreadInfo[]> {\n    let result: WebAppsListProcessThreadsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listProcessThreads(\n        resourceGroupName,\n        name,\n        processId,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listProcessThreadsNext(\n        resourceGroupName,\n        name,\n        processId,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listProcessThreadsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    options?: WebAppsListProcessThreadsOptionalParams,\n  ): AsyncIterableIterator<ProcessThreadInfo> {\n    for await (const page of this.listProcessThreadsPagingPage(\n      resourceGroupName,\n      name,\n      processId,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get public certificates for an app or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  public listPublicCertificates(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListPublicCertificatesOptionalParams,\n  ): PagedAsyncIterableIterator<PublicCertificate> {\n    const iter = this.listPublicCertificatesPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPublicCertificatesPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listPublicCertificatesPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListPublicCertificatesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<PublicCertificate[]> {\n    let result: WebAppsListPublicCertificatesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listPublicCertificates(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listPublicCertificatesNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPublicCertificatesPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListPublicCertificatesOptionalParams,\n  ): AsyncIterableIterator<PublicCertificate> {\n    for await (const page of this.listPublicCertificatesPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all the site containers of a site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  public listSiteContainers(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSiteContainersOptionalParams,\n  ): PagedAsyncIterableIterator<SiteContainer> {\n    const iter = this.listSiteContainersPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listSiteContainersPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listSiteContainersPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSiteContainersOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<SiteContainer[]> {\n    let result: WebAppsListSiteContainersResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listSiteContainers(resourceGroupName, name, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listSiteContainersNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listSiteContainersPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSiteContainersOptionalParams,\n  ): AsyncIterableIterator<SiteContainer> {\n    for await (const page of this.listSiteContainersPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get list of siteextensions for a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param options The options parameters.\n   */\n  public listSiteExtensions(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSiteExtensionsOptionalParams,\n  ): PagedAsyncIterableIterator<SiteExtensionInfo> {\n    const iter = this.listSiteExtensionsPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listSiteExtensionsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listSiteExtensionsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSiteExtensionsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<SiteExtensionInfo[]> {\n    let result: WebAppsListSiteExtensionsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listSiteExtensions(resourceGroupName, name, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listSiteExtensionsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listSiteExtensionsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSiteExtensionsOptionalParams,\n  ): AsyncIterableIterator<SiteExtensionInfo> {\n    for await (const page of this.listSiteExtensionsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets an app's deployment slots.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  public listSlots(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSlotsOptionalParams,\n  ): PagedAsyncIterableIterator<Site> {\n    const iter = this.listSlotsPagingAll(resourceGroupName, name, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listSlotsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listSlotsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSlotsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Site[]> {\n    let result: WebAppsListSlotsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listSlots(resourceGroupName, name, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listSlotsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listSlotsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSlotsOptionalParams,\n  ): AsyncIterableIterator<Site> {\n    for await (const page of this.listSlotsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets existing backups of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get backups of the\n   *             production slot.\n   * @param options The options parameters.\n   */\n  public listBackupsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListBackupsSlotOptionalParams,\n  ): PagedAsyncIterableIterator<BackupItem> {\n    const iter = this.listBackupsSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBackupsSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listBackupsSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListBackupsSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<BackupItem[]> {\n    let result: WebAppsListBackupsSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBackupsSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBackupsSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBackupsSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListBackupsSlotOptionalParams,\n  ): AsyncIterableIterator<BackupItem> {\n    for await (const page of this.listBackupsSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Returns whether Scm basic auth is allowed and whether Ftp is allowed for a given\n   * site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot\n   * @param options The options parameters.\n   */\n  public listBasicPublishingCredentialsPoliciesSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListBasicPublishingCredentialsPoliciesSlotOptionalParams,\n  ): PagedAsyncIterableIterator<CsmPublishingCredentialsPoliciesEntity> {\n    const iter = this.listBasicPublishingCredentialsPoliciesSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBasicPublishingCredentialsPoliciesSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listBasicPublishingCredentialsPoliciesSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListBasicPublishingCredentialsPoliciesSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<CsmPublishingCredentialsPoliciesEntity[]> {\n    let result: WebAppsListBasicPublishingCredentialsPoliciesSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBasicPublishingCredentialsPoliciesSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBasicPublishingCredentialsPoliciesSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBasicPublishingCredentialsPoliciesSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListBasicPublishingCredentialsPoliciesSlotOptionalParams,\n  ): AsyncIterableIterator<CsmPublishingCredentialsPoliciesEntity> {\n    for await (const page of this.listBasicPublishingCredentialsPoliciesSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List the configurations of an app\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will return\n   *             configuration for the production slot.\n   * @param options The options parameters.\n   */\n  public listConfigurationsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListConfigurationsSlotOptionalParams,\n  ): PagedAsyncIterableIterator<SiteConfigResource> {\n    const iter = this.listConfigurationsSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listConfigurationsSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listConfigurationsSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListConfigurationsSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<SiteConfigResource[]> {\n    let result: WebAppsListConfigurationsSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listConfigurationsSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listConfigurationsSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listConfigurationsSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListConfigurationsSlotOptionalParams,\n  ): AsyncIterableIterator<SiteConfigResource> {\n    for await (const page of this.listConfigurationsSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets the config reference app settings and status of an app\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot\n   * @param options The options parameters.\n   */\n  public listAppSettingsKeyVaultReferencesSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetAppSettingsKeyVaultReferencesSlotOptionalParams,\n  ): PagedAsyncIterableIterator<ApiKVReference> {\n    const iter = this.getAppSettingsKeyVaultReferencesSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getAppSettingsKeyVaultReferencesSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getAppSettingsKeyVaultReferencesSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetAppSettingsKeyVaultReferencesSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ApiKVReference[]> {\n    let result: WebAppsGetAppSettingsKeyVaultReferencesSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getAppSettingsKeyVaultReferencesSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getAppSettingsKeyVaultReferencesSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getAppSettingsKeyVaultReferencesSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetAppSettingsKeyVaultReferencesSlotOptionalParams,\n  ): AsyncIterableIterator<ApiKVReference> {\n    for await (const page of this.getAppSettingsKeyVaultReferencesSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets the config reference app settings and status of an app\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot\n   * @param options The options parameters.\n   */\n  public listSiteConnectionStringKeyVaultReferencesSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetSiteConnectionStringKeyVaultReferencesSlotOptionalParams,\n  ): PagedAsyncIterableIterator<ApiKVReference> {\n    const iter = this.getSiteConnectionStringKeyVaultReferencesSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getSiteConnectionStringKeyVaultReferencesSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getSiteConnectionStringKeyVaultReferencesSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetSiteConnectionStringKeyVaultReferencesSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ApiKVReference[]> {\n    let result: WebAppsGetSiteConnectionStringKeyVaultReferencesSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getSiteConnectionStringKeyVaultReferencesSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getSiteConnectionStringKeyVaultReferencesSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getSiteConnectionStringKeyVaultReferencesSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetSiteConnectionStringKeyVaultReferencesSlotOptionalParams,\n  ): AsyncIterableIterator<ApiKVReference> {\n    for await (const page of this.getSiteConnectionStringKeyVaultReferencesSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets a list of web app configuration snapshots identifiers. Each element of the list\n   * contains a timestamp and the ID of the snapshot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will return\n   *             configuration for the production slot.\n   * @param options The options parameters.\n   */\n  public listConfigurationSnapshotInfoSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListConfigurationSnapshotInfoSlotOptionalParams,\n  ): PagedAsyncIterableIterator<SiteConfigurationSnapshotInfo> {\n    const iter = this.listConfigurationSnapshotInfoSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listConfigurationSnapshotInfoSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listConfigurationSnapshotInfoSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListConfigurationSnapshotInfoSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<SiteConfigurationSnapshotInfo[]> {\n    let result: WebAppsListConfigurationSnapshotInfoSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listConfigurationSnapshotInfoSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listConfigurationSnapshotInfoSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listConfigurationSnapshotInfoSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListConfigurationSnapshotInfoSlotOptionalParams,\n  ): AsyncIterableIterator<SiteConfigurationSnapshotInfo> {\n    for await (const page of this.listConfigurationSnapshotInfoSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List continuous web jobs for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  public listContinuousWebJobsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListContinuousWebJobsSlotOptionalParams,\n  ): PagedAsyncIterableIterator<ContinuousWebJob> {\n    const iter = this.listContinuousWebJobsSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listContinuousWebJobsSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listContinuousWebJobsSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListContinuousWebJobsSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ContinuousWebJob[]> {\n    let result: WebAppsListContinuousWebJobsSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listContinuousWebJobsSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listContinuousWebJobsSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listContinuousWebJobsSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListContinuousWebJobsSlotOptionalParams,\n  ): AsyncIterableIterator<ContinuousWebJob> {\n    for await (const page of this.listContinuousWebJobsSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List deployment statuses for an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the deployment\n   *             status for the production slot.\n   * @param options The options parameters.\n   */\n  public listSlotSiteDeploymentStatusesSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSlotSiteDeploymentStatusesSlotOptionalParams,\n  ): PagedAsyncIterableIterator<CsmDeploymentStatus> {\n    const iter = this.listSlotSiteDeploymentStatusesSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listSlotSiteDeploymentStatusesSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listSlotSiteDeploymentStatusesSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSlotSiteDeploymentStatusesSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<CsmDeploymentStatus[]> {\n    let result: WebAppsListSlotSiteDeploymentStatusesSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listSlotSiteDeploymentStatusesSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listSlotSiteDeploymentStatusesSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listSlotSiteDeploymentStatusesSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSlotSiteDeploymentStatusesSlotOptionalParams,\n  ): AsyncIterableIterator<CsmDeploymentStatus> {\n    for await (const page of this.listSlotSiteDeploymentStatusesSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List deployments for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param options The options parameters.\n   */\n  public listDeploymentsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListDeploymentsSlotOptionalParams,\n  ): PagedAsyncIterableIterator<Deployment> {\n    const iter = this.listDeploymentsSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listDeploymentsSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listDeploymentsSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListDeploymentsSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Deployment[]> {\n    let result: WebAppsListDeploymentsSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listDeploymentsSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listDeploymentsSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listDeploymentsSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListDeploymentsSlotOptionalParams,\n  ): AsyncIterableIterator<Deployment> {\n    for await (const page of this.listDeploymentsSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Lists ownership identifiers for domain associated with web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  public listDomainOwnershipIdentifiersSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListDomainOwnershipIdentifiersSlotOptionalParams,\n  ): PagedAsyncIterableIterator<Identifier> {\n    const iter = this.listDomainOwnershipIdentifiersSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listDomainOwnershipIdentifiersSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listDomainOwnershipIdentifiersSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListDomainOwnershipIdentifiersSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Identifier[]> {\n    let result: WebAppsListDomainOwnershipIdentifiersSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listDomainOwnershipIdentifiersSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listDomainOwnershipIdentifiersSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listDomainOwnershipIdentifiersSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListDomainOwnershipIdentifiersSlotOptionalParams,\n  ): AsyncIterableIterator<Identifier> {\n    for await (const page of this.listDomainOwnershipIdentifiersSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List the functions for a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot.\n   * @param options The options parameters.\n   */\n  public listInstanceFunctionsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListInstanceFunctionsSlotOptionalParams,\n  ): PagedAsyncIterableIterator<FunctionEnvelope> {\n    const iter = this.listInstanceFunctionsSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listInstanceFunctionsSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listInstanceFunctionsSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListInstanceFunctionsSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<FunctionEnvelope[]> {\n    let result: WebAppsListInstanceFunctionsSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listInstanceFunctionsSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listInstanceFunctionsSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listInstanceFunctionsSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListInstanceFunctionsSlotOptionalParams,\n  ): AsyncIterableIterator<FunctionEnvelope> {\n    for await (const page of this.listInstanceFunctionsSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get hostname bindings for an app or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API gets hostname bindings\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  public listHostNameBindingsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListHostNameBindingsSlotOptionalParams,\n  ): PagedAsyncIterableIterator<HostNameBinding> {\n    const iter = this.listHostNameBindingsSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listHostNameBindingsSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listHostNameBindingsSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListHostNameBindingsSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<HostNameBinding[]> {\n    let result: WebAppsListHostNameBindingsSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listHostNameBindingsSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listHostNameBindingsSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listHostNameBindingsSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListHostNameBindingsSlotOptionalParams,\n  ): AsyncIterableIterator<HostNameBinding> {\n    for await (const page of this.listHostNameBindingsSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets all scale-out instances of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API gets the production\n   *             slot instances.\n   * @param options The options parameters.\n   */\n  public listInstanceIdentifiersSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListInstanceIdentifiersSlotOptionalParams,\n  ): PagedAsyncIterableIterator<WebSiteInstanceStatus> {\n    const iter = this.listInstanceIdentifiersSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listInstanceIdentifiersSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listInstanceIdentifiersSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListInstanceIdentifiersSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<WebSiteInstanceStatus[]> {\n    let result: WebAppsListInstanceIdentifiersSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listInstanceIdentifiersSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listInstanceIdentifiersSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listInstanceIdentifiersSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListInstanceIdentifiersSlotOptionalParams,\n  ): AsyncIterableIterator<WebSiteInstanceStatus> {\n    for await (const page of this.listInstanceIdentifiersSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get list of processes for a web site, or a deployment slot, or for a specific\n   * scaled-out instance in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param options The options parameters.\n   */\n  public listInstanceProcessesSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessesSlotOptionalParams,\n  ): PagedAsyncIterableIterator<ProcessInfo> {\n    const iter = this.listInstanceProcessesSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      instanceId,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listInstanceProcessesSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          instanceId,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listInstanceProcessesSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessesSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ProcessInfo[]> {\n    let result: WebAppsListInstanceProcessesSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listInstanceProcessesSlot(\n        resourceGroupName,\n        name,\n        slot,\n        instanceId,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listInstanceProcessesSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        instanceId,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listInstanceProcessesSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessesSlotOptionalParams,\n  ): AsyncIterableIterator<ProcessInfo> {\n    for await (const page of this.listInstanceProcessesSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      instanceId,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List module information for a process by its ID for a specific scaled-out instance\n   * in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param options The options parameters.\n   */\n  public listInstanceProcessModulesSlot(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessModulesSlotOptionalParams,\n  ): PagedAsyncIterableIterator<ProcessModuleInfo> {\n    const iter = this.listInstanceProcessModulesSlotPagingAll(\n      resourceGroupName,\n      name,\n      processId,\n      slot,\n      instanceId,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listInstanceProcessModulesSlotPagingPage(\n          resourceGroupName,\n          name,\n          processId,\n          slot,\n          instanceId,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listInstanceProcessModulesSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessModulesSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ProcessModuleInfo[]> {\n    let result: WebAppsListInstanceProcessModulesSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listInstanceProcessModulesSlot(\n        resourceGroupName,\n        name,\n        processId,\n        slot,\n        instanceId,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listInstanceProcessModulesSlotNext(\n        resourceGroupName,\n        name,\n        processId,\n        slot,\n        instanceId,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listInstanceProcessModulesSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessModulesSlotOptionalParams,\n  ): AsyncIterableIterator<ProcessModuleInfo> {\n    for await (const page of this.listInstanceProcessModulesSlotPagingPage(\n      resourceGroupName,\n      name,\n      processId,\n      slot,\n      instanceId,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List the threads in a process by its ID for a specific scaled-out instance in a web\n   * site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param options The options parameters.\n   */\n  public listInstanceProcessThreadsSlot(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessThreadsSlotOptionalParams,\n  ): PagedAsyncIterableIterator<ProcessThreadInfo> {\n    const iter = this.listInstanceProcessThreadsSlotPagingAll(\n      resourceGroupName,\n      name,\n      processId,\n      slot,\n      instanceId,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listInstanceProcessThreadsSlotPagingPage(\n          resourceGroupName,\n          name,\n          processId,\n          slot,\n          instanceId,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listInstanceProcessThreadsSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessThreadsSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ProcessThreadInfo[]> {\n    let result: WebAppsListInstanceProcessThreadsSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listInstanceProcessThreadsSlot(\n        resourceGroupName,\n        name,\n        processId,\n        slot,\n        instanceId,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listInstanceProcessThreadsSlotNext(\n        resourceGroupName,\n        name,\n        processId,\n        slot,\n        instanceId,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listInstanceProcessThreadsSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessThreadsSlotOptionalParams,\n  ): AsyncIterableIterator<ProcessThreadInfo> {\n    for await (const page of this.listInstanceProcessThreadsSlotPagingPage(\n      resourceGroupName,\n      name,\n      processId,\n      slot,\n      instanceId,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets existing backups of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get backups of the\n   *             production slot.\n   * @param options The options parameters.\n   */\n  public listSiteBackupsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSiteBackupsSlotOptionalParams,\n  ): PagedAsyncIterableIterator<BackupItem> {\n    const iter = this.listSiteBackupsSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listSiteBackupsSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listSiteBackupsSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSiteBackupsSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<BackupItem[]> {\n    let result: WebAppsListSiteBackupsSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listSiteBackupsSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listSiteBackupsSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listSiteBackupsSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSiteBackupsSlotOptionalParams,\n  ): AsyncIterableIterator<BackupItem> {\n    for await (const page of this.listSiteBackupsSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets perfmon counters for web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param options The options parameters.\n   */\n  public listPerfMonCountersSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListPerfMonCountersSlotOptionalParams,\n  ): PagedAsyncIterableIterator<PerfMonResponse> {\n    const iter = this.listPerfMonCountersSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPerfMonCountersSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listPerfMonCountersSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListPerfMonCountersSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<PerfMonResponse[]> {\n    let result: WebAppsListPerfMonCountersSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listPerfMonCountersSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listPerfMonCountersSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPerfMonCountersSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListPerfMonCountersSlotOptionalParams,\n  ): AsyncIterableIterator<PerfMonResponse> {\n    for await (const page of this.listPerfMonCountersSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets the list of private endpoint connections associated with a site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the site.\n   * @param slot Name of the site deployment slot.\n   * @param options The options parameters.\n   */\n  public listPrivateEndpointConnectionListSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetPrivateEndpointConnectionListSlotOptionalParams,\n  ): PagedAsyncIterableIterator<RemotePrivateEndpointConnectionARMResource> {\n    const iter = this.getPrivateEndpointConnectionListSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getPrivateEndpointConnectionListSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getPrivateEndpointConnectionListSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetPrivateEndpointConnectionListSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<RemotePrivateEndpointConnectionARMResource[]> {\n    let result: WebAppsGetPrivateEndpointConnectionListSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getPrivateEndpointConnectionListSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getPrivateEndpointConnectionListSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getPrivateEndpointConnectionListSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetPrivateEndpointConnectionListSlotOptionalParams,\n  ): AsyncIterableIterator<RemotePrivateEndpointConnectionARMResource> {\n    for await (const page of this.getPrivateEndpointConnectionListSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get list of processes for a web site, or a deployment slot, or for a specific\n   * scaled-out instance in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param options The options parameters.\n   */\n  public listProcessesSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListProcessesSlotOptionalParams,\n  ): PagedAsyncIterableIterator<ProcessInfo> {\n    const iter = this.listProcessesSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listProcessesSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listProcessesSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListProcessesSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ProcessInfo[]> {\n    let result: WebAppsListProcessesSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listProcessesSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listProcessesSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listProcessesSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListProcessesSlotOptionalParams,\n  ): AsyncIterableIterator<ProcessInfo> {\n    for await (const page of this.listProcessesSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List module information for a process by its ID for a specific scaled-out instance\n   * in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param options The options parameters.\n   */\n  public listProcessModulesSlot(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    options?: WebAppsListProcessModulesSlotOptionalParams,\n  ): PagedAsyncIterableIterator<ProcessModuleInfo> {\n    const iter = this.listProcessModulesSlotPagingAll(\n      resourceGroupName,\n      name,\n      processId,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listProcessModulesSlotPagingPage(\n          resourceGroupName,\n          name,\n          processId,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listProcessModulesSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    options?: WebAppsListProcessModulesSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ProcessModuleInfo[]> {\n    let result: WebAppsListProcessModulesSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listProcessModulesSlot(\n        resourceGroupName,\n        name,\n        processId,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listProcessModulesSlotNext(\n        resourceGroupName,\n        name,\n        processId,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listProcessModulesSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    options?: WebAppsListProcessModulesSlotOptionalParams,\n  ): AsyncIterableIterator<ProcessModuleInfo> {\n    for await (const page of this.listProcessModulesSlotPagingPage(\n      resourceGroupName,\n      name,\n      processId,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List the threads in a process by its ID for a specific scaled-out instance in a web\n   * site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param options The options parameters.\n   */\n  public listProcessThreadsSlot(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    options?: WebAppsListProcessThreadsSlotOptionalParams,\n  ): PagedAsyncIterableIterator<ProcessThreadInfo> {\n    const iter = this.listProcessThreadsSlotPagingAll(\n      resourceGroupName,\n      name,\n      processId,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listProcessThreadsSlotPagingPage(\n          resourceGroupName,\n          name,\n          processId,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listProcessThreadsSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    options?: WebAppsListProcessThreadsSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ProcessThreadInfo[]> {\n    let result: WebAppsListProcessThreadsSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listProcessThreadsSlot(\n        resourceGroupName,\n        name,\n        processId,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listProcessThreadsSlotNext(\n        resourceGroupName,\n        name,\n        processId,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listProcessThreadsSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    options?: WebAppsListProcessThreadsSlotOptionalParams,\n  ): AsyncIterableIterator<ProcessThreadInfo> {\n    for await (const page of this.listProcessThreadsSlotPagingPage(\n      resourceGroupName,\n      name,\n      processId,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get public certificates for an app or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API gets hostname bindings\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  public listPublicCertificatesSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListPublicCertificatesSlotOptionalParams,\n  ): PagedAsyncIterableIterator<PublicCertificate> {\n    const iter = this.listPublicCertificatesSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPublicCertificatesSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listPublicCertificatesSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListPublicCertificatesSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<PublicCertificate[]> {\n    let result: WebAppsListPublicCertificatesSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listPublicCertificatesSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listPublicCertificatesSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPublicCertificatesSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListPublicCertificatesSlotOptionalParams,\n  ): AsyncIterableIterator<PublicCertificate> {\n    for await (const page of this.listPublicCertificatesSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all the site containers of a site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get a list of site\n   *             containers for the production slot.\n   * @param options The options parameters.\n   */\n  public listSiteContainersSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSiteContainersSlotOptionalParams,\n  ): PagedAsyncIterableIterator<SiteContainer> {\n    const iter = this.listSiteContainersSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listSiteContainersSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listSiteContainersSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSiteContainersSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<SiteContainer[]> {\n    let result: WebAppsListSiteContainersSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listSiteContainersSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listSiteContainersSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listSiteContainersSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSiteContainersSlotOptionalParams,\n  ): AsyncIterableIterator<SiteContainer> {\n    for await (const page of this.listSiteContainersSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get list of siteextensions for a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production\n   *             slot.\n   * @param options The options parameters.\n   */\n  public listSiteExtensionsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSiteExtensionsSlotOptionalParams,\n  ): PagedAsyncIterableIterator<SiteExtensionInfo> {\n    const iter = this.listSiteExtensionsSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listSiteExtensionsSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listSiteExtensionsSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSiteExtensionsSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<SiteExtensionInfo[]> {\n    let result: WebAppsListSiteExtensionsSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listSiteExtensionsSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listSiteExtensionsSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listSiteExtensionsSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSiteExtensionsSlotOptionalParams,\n  ): AsyncIterableIterator<SiteExtensionInfo> {\n    for await (const page of this.listSiteExtensionsSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get the difference in configuration settings between two web app slots.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the source slot. If a slot is not specified, the production slot is used as the\n   *             source slot.\n   * @param slotSwapEntity JSON object that contains the target slot name. See example.\n   * @param options The options parameters.\n   */\n  public listSlotDifferencesSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    slotSwapEntity: CsmSlotEntity,\n    options?: WebAppsListSlotDifferencesSlotOptionalParams,\n  ): PagedAsyncIterableIterator<SlotDifference> {\n    const iter = this.listSlotDifferencesSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      slotSwapEntity,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listSlotDifferencesSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          slotSwapEntity,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listSlotDifferencesSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    slotSwapEntity: CsmSlotEntity,\n    options?: WebAppsListSlotDifferencesSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<SlotDifference[]> {\n    let result: WebAppsListSlotDifferencesSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listSlotDifferencesSlot(\n        resourceGroupName,\n        name,\n        slot,\n        slotSwapEntity,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listSlotDifferencesSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        slotSwapEntity,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listSlotDifferencesSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    slotSwapEntity: CsmSlotEntity,\n    options?: WebAppsListSlotDifferencesSlotOptionalParams,\n  ): AsyncIterableIterator<SlotDifference> {\n    for await (const page of this.listSlotDifferencesSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      slotSwapEntity,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Returns all Snapshots to the user.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Website Name.\n   * @param slot Website Slot.\n   * @param options The options parameters.\n   */\n  public listSnapshotsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSnapshotsSlotOptionalParams,\n  ): PagedAsyncIterableIterator<Snapshot> {\n    const iter = this.listSnapshotsSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listSnapshotsSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listSnapshotsSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSnapshotsSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Snapshot[]> {\n    let result: WebAppsListSnapshotsSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listSnapshotsSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listSnapshotsSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listSnapshotsSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSnapshotsSlotOptionalParams,\n  ): AsyncIterableIterator<Snapshot> {\n    for await (const page of this.listSnapshotsSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Returns all Snapshots to the user from DRSecondary endpoint.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Website Name.\n   * @param slot Website Slot.\n   * @param options The options parameters.\n   */\n  public listSnapshotsFromDRSecondarySlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSnapshotsFromDRSecondarySlotOptionalParams,\n  ): PagedAsyncIterableIterator<Snapshot> {\n    const iter = this.listSnapshotsFromDRSecondarySlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listSnapshotsFromDRSecondarySlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listSnapshotsFromDRSecondarySlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSnapshotsFromDRSecondarySlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Snapshot[]> {\n    let result: WebAppsListSnapshotsFromDRSecondarySlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listSnapshotsFromDRSecondarySlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listSnapshotsFromDRSecondarySlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listSnapshotsFromDRSecondarySlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSnapshotsFromDRSecondarySlotOptionalParams,\n  ): AsyncIterableIterator<Snapshot> {\n    for await (const page of this.listSnapshotsFromDRSecondarySlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List triggered web jobs for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  public listTriggeredWebJobsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListTriggeredWebJobsSlotOptionalParams,\n  ): PagedAsyncIterableIterator<TriggeredWebJob> {\n    const iter = this.listTriggeredWebJobsSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listTriggeredWebJobsSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listTriggeredWebJobsSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListTriggeredWebJobsSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<TriggeredWebJob[]> {\n    let result: WebAppsListTriggeredWebJobsSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listTriggeredWebJobsSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listTriggeredWebJobsSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listTriggeredWebJobsSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListTriggeredWebJobsSlotOptionalParams,\n  ): AsyncIterableIterator<TriggeredWebJob> {\n    for await (const page of this.listTriggeredWebJobsSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List a triggered web job's history for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production\n   *             slot.\n   * @param options The options parameters.\n   */\n  public listTriggeredWebJobHistorySlot(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    slot: string,\n    options?: WebAppsListTriggeredWebJobHistorySlotOptionalParams,\n  ): PagedAsyncIterableIterator<TriggeredJobHistory> {\n    const iter = this.listTriggeredWebJobHistorySlotPagingAll(\n      resourceGroupName,\n      name,\n      webJobName,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listTriggeredWebJobHistorySlotPagingPage(\n          resourceGroupName,\n          name,\n          webJobName,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listTriggeredWebJobHistorySlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    slot: string,\n    options?: WebAppsListTriggeredWebJobHistorySlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<TriggeredJobHistory[]> {\n    let result: WebAppsListTriggeredWebJobHistorySlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listTriggeredWebJobHistorySlot(\n        resourceGroupName,\n        name,\n        webJobName,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listTriggeredWebJobHistorySlotNext(\n        resourceGroupName,\n        name,\n        webJobName,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listTriggeredWebJobHistorySlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    slot: string,\n    options?: WebAppsListTriggeredWebJobHistorySlotOptionalParams,\n  ): AsyncIterableIterator<TriggeredJobHistory> {\n    for await (const page of this.listTriggeredWebJobHistorySlotPagingPage(\n      resourceGroupName,\n      name,\n      webJobName,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets the quota usage information of an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get quota\n   *             information of the production slot.\n   * @param options The options parameters.\n   */\n  public listUsagesSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListUsagesSlotOptionalParams,\n  ): PagedAsyncIterableIterator<CsmUsageQuota> {\n    const iter = this.listUsagesSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listUsagesSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listUsagesSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListUsagesSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<CsmUsageQuota[]> {\n    let result: WebAppsListUsagesSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listUsagesSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listUsagesSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listUsagesSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListUsagesSlotOptionalParams,\n  ): AsyncIterableIterator<CsmUsageQuota> {\n    for await (const page of this.listUsagesSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List webjobs for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param options The options parameters.\n   */\n  public listWebJobsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListWebJobsSlotOptionalParams,\n  ): PagedAsyncIterableIterator<WebJob> {\n    const iter = this.listWebJobsSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listWebJobsSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listWebJobsSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListWebJobsSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<WebJob[]> {\n    let result: WebAppsListWebJobsSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listWebJobsSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listWebJobsSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listWebJobsSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListWebJobsSlotOptionalParams,\n  ): AsyncIterableIterator<WebJob> {\n    for await (const page of this.listWebJobsSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get the difference in configuration settings between two web app slots.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slotSwapEntity JSON object that contains the target slot name. See example.\n   * @param options The options parameters.\n   */\n  public listSlotDifferencesFromProduction(\n    resourceGroupName: string,\n    name: string,\n    slotSwapEntity: CsmSlotEntity,\n    options?: WebAppsListSlotDifferencesFromProductionOptionalParams,\n  ): PagedAsyncIterableIterator<SlotDifference> {\n    const iter = this.listSlotDifferencesFromProductionPagingAll(\n      resourceGroupName,\n      name,\n      slotSwapEntity,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listSlotDifferencesFromProductionPagingPage(\n          resourceGroupName,\n          name,\n          slotSwapEntity,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listSlotDifferencesFromProductionPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slotSwapEntity: CsmSlotEntity,\n    options?: WebAppsListSlotDifferencesFromProductionOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<SlotDifference[]> {\n    let result: WebAppsListSlotDifferencesFromProductionResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listSlotDifferencesFromProduction(\n        resourceGroupName,\n        name,\n        slotSwapEntity,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listSlotDifferencesFromProductionNext(\n        resourceGroupName,\n        name,\n        slotSwapEntity,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listSlotDifferencesFromProductionPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slotSwapEntity: CsmSlotEntity,\n    options?: WebAppsListSlotDifferencesFromProductionOptionalParams,\n  ): AsyncIterableIterator<SlotDifference> {\n    for await (const page of this.listSlotDifferencesFromProductionPagingPage(\n      resourceGroupName,\n      name,\n      slotSwapEntity,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Returns all Snapshots to the user.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Website Name.\n   * @param options The options parameters.\n   */\n  public listSnapshots(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSnapshotsOptionalParams,\n  ): PagedAsyncIterableIterator<Snapshot> {\n    const iter = this.listSnapshotsPagingAll(resourceGroupName, name, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listSnapshotsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listSnapshotsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSnapshotsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Snapshot[]> {\n    let result: WebAppsListSnapshotsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listSnapshots(resourceGroupName, name, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listSnapshotsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listSnapshotsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSnapshotsOptionalParams,\n  ): AsyncIterableIterator<Snapshot> {\n    for await (const page of this.listSnapshotsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Returns all Snapshots to the user from DRSecondary endpoint.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Website Name.\n   * @param options The options parameters.\n   */\n  public listSnapshotsFromDRSecondary(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSnapshotsFromDRSecondaryOptionalParams,\n  ): PagedAsyncIterableIterator<Snapshot> {\n    const iter = this.listSnapshotsFromDRSecondaryPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listSnapshotsFromDRSecondaryPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listSnapshotsFromDRSecondaryPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSnapshotsFromDRSecondaryOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Snapshot[]> {\n    let result: WebAppsListSnapshotsFromDRSecondaryResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listSnapshotsFromDRSecondary(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listSnapshotsFromDRSecondaryNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listSnapshotsFromDRSecondaryPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSnapshotsFromDRSecondaryOptionalParams,\n  ): AsyncIterableIterator<Snapshot> {\n    for await (const page of this.listSnapshotsFromDRSecondaryPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List triggered web jobs for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param options The options parameters.\n   */\n  public listTriggeredWebJobs(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListTriggeredWebJobsOptionalParams,\n  ): PagedAsyncIterableIterator<TriggeredWebJob> {\n    const iter = this.listTriggeredWebJobsPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listTriggeredWebJobsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listTriggeredWebJobsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListTriggeredWebJobsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<TriggeredWebJob[]> {\n    let result: WebAppsListTriggeredWebJobsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listTriggeredWebJobs(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listTriggeredWebJobsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listTriggeredWebJobsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListTriggeredWebJobsOptionalParams,\n  ): AsyncIterableIterator<TriggeredWebJob> {\n    for await (const page of this.listTriggeredWebJobsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List a triggered web job's history for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param options The options parameters.\n   */\n  public listTriggeredWebJobHistory(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    options?: WebAppsListTriggeredWebJobHistoryOptionalParams,\n  ): PagedAsyncIterableIterator<TriggeredJobHistory> {\n    const iter = this.listTriggeredWebJobHistoryPagingAll(\n      resourceGroupName,\n      name,\n      webJobName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listTriggeredWebJobHistoryPagingPage(\n          resourceGroupName,\n          name,\n          webJobName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listTriggeredWebJobHistoryPagingPage(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    options?: WebAppsListTriggeredWebJobHistoryOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<TriggeredJobHistory[]> {\n    let result: WebAppsListTriggeredWebJobHistoryResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listTriggeredWebJobHistory(\n        resourceGroupName,\n        name,\n        webJobName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listTriggeredWebJobHistoryNext(\n        resourceGroupName,\n        name,\n        webJobName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listTriggeredWebJobHistoryPagingAll(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    options?: WebAppsListTriggeredWebJobHistoryOptionalParams,\n  ): AsyncIterableIterator<TriggeredJobHistory> {\n    for await (const page of this.listTriggeredWebJobHistoryPagingPage(\n      resourceGroupName,\n      name,\n      webJobName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets the quota usage information of an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  public listUsages(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListUsagesOptionalParams,\n  ): PagedAsyncIterableIterator<CsmUsageQuota> {\n    const iter = this.listUsagesPagingAll(resourceGroupName, name, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listUsagesPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listUsagesPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListUsagesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<CsmUsageQuota[]> {\n    let result: WebAppsListUsagesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listUsages(resourceGroupName, name, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listUsagesNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listUsagesPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListUsagesOptionalParams,\n  ): AsyncIterableIterator<CsmUsageQuota> {\n    for await (const page of this.listUsagesPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for List webjobs for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param options The options parameters.\n   */\n  public listWebJobs(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListWebJobsOptionalParams,\n  ): PagedAsyncIterableIterator<WebJob> {\n    const iter = this.listWebJobsPagingAll(resourceGroupName, name, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listWebJobsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listWebJobsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListWebJobsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<WebJob[]> {\n    let result: WebAppsListWebJobsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listWebJobs(resourceGroupName, name, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listWebJobsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listWebJobsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListWebJobsOptionalParams,\n  ): AsyncIterableIterator<WebJob> {\n    for await (const page of this.listWebJobsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List the workflows for a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot.\n   * @param options The options parameters.\n   */\n  public listInstanceWorkflowsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListInstanceWorkflowsSlotOptionalParams,\n  ): PagedAsyncIterableIterator<WorkflowEnvelope> {\n    const iter = this.listInstanceWorkflowsSlotPagingAll(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listInstanceWorkflowsSlotPagingPage(\n          resourceGroupName,\n          name,\n          slot,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listInstanceWorkflowsSlotPagingPage(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListInstanceWorkflowsSlotOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<WorkflowEnvelope[]> {\n    let result: WebAppsListInstanceWorkflowsSlotResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listInstanceWorkflowsSlot(\n        resourceGroupName,\n        name,\n        slot,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listInstanceWorkflowsSlotNext(\n        resourceGroupName,\n        name,\n        slot,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listInstanceWorkflowsSlotPagingAll(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListInstanceWorkflowsSlotOptionalParams,\n  ): AsyncIterableIterator<WorkflowEnvelope> {\n    for await (const page of this.listInstanceWorkflowsSlotPagingPage(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List the workflows for a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param options The options parameters.\n   */\n  public listWorkflows(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListWorkflowsOptionalParams,\n  ): PagedAsyncIterableIterator<WorkflowEnvelope> {\n    const iter = this.listWorkflowsPagingAll(resourceGroupName, name, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listWorkflowsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listWorkflowsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListWorkflowsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<WorkflowEnvelope[]> {\n    let result: WebAppsListWorkflowsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listWorkflows(resourceGroupName, name, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listWorkflowsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listWorkflowsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListWorkflowsOptionalParams,\n  ): AsyncIterableIterator<WorkflowEnvelope> {\n    for await (const page of this.listWorkflowsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get all apps for a subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: WebAppsListOptionalParams,\n  ): Promise<WebAppsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Description for Gets all web, mobile, and API apps in the specified resource group.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: WebAppsListByResourceGroupOptionalParams,\n  ): Promise<WebAppsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the details of a web, mobile, or API app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetOptionalParams,\n  ): Promise<WebAppsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a new web, mobile, or API app in an existing resource group, or updates an\n   * existing app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Unique name of the app to create or update. To create or update a deployment slot, use\n   *             the {slot} parameter.\n   * @param siteEnvelope A JSON representation of the app properties. See example.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    name: string,\n    siteEnvelope: Site,\n    options?: WebAppsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsCreateOrUpdateResponse>,\n      WebAppsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, siteEnvelope, options },\n      spec: createOrUpdateOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsCreateOrUpdateResponse,\n      OperationState<WebAppsCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Creates a new web, mobile, or API app in an existing resource group, or updates an\n   * existing app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Unique name of the app to create or update. To create or update a deployment slot, use\n   *             the {slot} parameter.\n   * @param siteEnvelope A JSON representation of the app properties. See example.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    name: string,\n    siteEnvelope: Site,\n    options?: WebAppsCreateOrUpdateOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      name,\n      siteEnvelope,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Deletes a web, mobile, or API app, or one of the deployment slots.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app to delete.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsDeleteOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      deleteOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a new web, mobile, or API app in an existing resource group, or updates an\n   * existing app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Unique name of the app to create or update. To create or update a deployment slot, use\n   *             the {slot} parameter.\n   * @param siteEnvelope A JSON representation of the app properties. See example.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    name: string,\n    siteEnvelope: SitePatchResource,\n    options?: WebAppsUpdateOptionalParams,\n  ): Promise<WebAppsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, siteEnvelope, options },\n      updateOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Analyze a custom hostname.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param options The options parameters.\n   */\n  analyzeCustomHostname(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsAnalyzeCustomHostnameOptionalParams,\n  ): Promise<WebAppsAnalyzeCustomHostnameResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      analyzeCustomHostnameOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Applies the configuration settings from the target slot onto the current slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slotSwapEntity JSON object that contains the target slot name. See example.\n   * @param options The options parameters.\n   */\n  applySlotConfigToProduction(\n    resourceGroupName: string,\n    name: string,\n    slotSwapEntity: CsmSlotEntity,\n    options?: WebAppsApplySlotConfigToProductionOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slotSwapEntity, options },\n      applySlotConfigToProductionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a backup of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param request Backup configuration. You can use the JSON response from the POST action as input\n   *                here.\n   * @param options The options parameters.\n   */\n  backup(\n    resourceGroupName: string,\n    name: string,\n    request: BackupRequest,\n    options?: WebAppsBackupOptionalParams,\n  ): Promise<WebAppsBackupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, request, options },\n      backupOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets existing backups of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  private _listBackups(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListBackupsOptionalParams,\n  ): Promise<WebAppsListBackupsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listBackupsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a backup of an app by its ID.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param backupId ID of the backup.\n   * @param options The options parameters.\n   */\n  getBackupStatus(\n    resourceGroupName: string,\n    name: string,\n    backupId: string,\n    options?: WebAppsGetBackupStatusOptionalParams,\n  ): Promise<WebAppsGetBackupStatusResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, backupId, options },\n      getBackupStatusOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Deletes a backup of an app by its ID.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param backupId ID of the backup.\n   * @param options The options parameters.\n   */\n  deleteBackup(\n    resourceGroupName: string,\n    name: string,\n    backupId: string,\n    options?: WebAppsDeleteBackupOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, backupId, options },\n      deleteBackupOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets status of a web app backup that may be in progress, including secrets\n   * associated with the backup, such as the Azure Storage SAS URL. Also can be used to update the SAS\n   * URL for the backup if a new URL is passed in the request body.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param backupId ID of backup.\n   * @param request Information on backup request.\n   * @param options The options parameters.\n   */\n  listBackupStatusSecrets(\n    resourceGroupName: string,\n    name: string,\n    backupId: string,\n    request: BackupRequest,\n    options?: WebAppsListBackupStatusSecretsOptionalParams,\n  ): Promise<WebAppsListBackupStatusSecretsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, backupId, request, options },\n      listBackupStatusSecretsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Restores a specific backup to another app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param backupId ID of the backup.\n   * @param request Information on restore request .\n   * @param options The options parameters.\n   */\n  async beginRestore(\n    resourceGroupName: string,\n    name: string,\n    backupId: string,\n    request: RestoreRequest,\n    options?: WebAppsRestoreOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, backupId, request, options },\n      spec: restoreOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Restores a specific backup to another app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param backupId ID of the backup.\n   * @param request Information on restore request .\n   * @param options The options parameters.\n   */\n  async beginRestoreAndWait(\n    resourceGroupName: string,\n    name: string,\n    backupId: string,\n    request: RestoreRequest,\n    options?: WebAppsRestoreOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginRestore(\n      resourceGroupName,\n      name,\n      backupId,\n      request,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Returns whether Scm basic auth is allowed and whether Ftp is allowed for a given\n   * site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  private _listBasicPublishingCredentialsPolicies(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListBasicPublishingCredentialsPoliciesOptionalParams,\n  ): Promise<WebAppsListBasicPublishingCredentialsPoliciesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listBasicPublishingCredentialsPoliciesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Returns whether FTP is allowed on the site or not.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  getFtpAllowed(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetFtpAllowedOptionalParams,\n  ): Promise<WebAppsGetFtpAllowedResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getFtpAllowedOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates whether FTP is allowed on the site or not.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param csmPublishingAccessPoliciesEntity Publishing Credentials Policies parameters.\n   * @param options The options parameters.\n   */\n  updateFtpAllowed(\n    resourceGroupName: string,\n    name: string,\n    csmPublishingAccessPoliciesEntity: CsmPublishingCredentialsPoliciesEntity,\n    options?: WebAppsUpdateFtpAllowedOptionalParams,\n  ): Promise<WebAppsUpdateFtpAllowedResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, csmPublishingAccessPoliciesEntity, options },\n      updateFtpAllowedOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Returns whether Scm basic auth is allowed on the site or not.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  getScmAllowed(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetScmAllowedOptionalParams,\n  ): Promise<WebAppsGetScmAllowedResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getScmAllowedOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates whether user publishing credentials are allowed on the site or not.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param csmPublishingAccessPoliciesEntity Publishing Credentials Policies parameters.\n   * @param options The options parameters.\n   */\n  updateScmAllowed(\n    resourceGroupName: string,\n    name: string,\n    csmPublishingAccessPoliciesEntity: CsmPublishingCredentialsPoliciesEntity,\n    options?: WebAppsUpdateScmAllowedOptionalParams,\n  ): Promise<WebAppsUpdateScmAllowedResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, csmPublishingAccessPoliciesEntity, options },\n      updateScmAllowedOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List the configurations of an app\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  private _listConfigurations(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListConfigurationsOptionalParams,\n  ): Promise<WebAppsListConfigurationsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listConfigurationsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Replaces the application settings of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param appSettings Application settings of the app.\n   * @param options The options parameters.\n   */\n  updateApplicationSettings(\n    resourceGroupName: string,\n    name: string,\n    appSettings: StringDictionary,\n    options?: WebAppsUpdateApplicationSettingsOptionalParams,\n  ): Promise<WebAppsUpdateApplicationSettingsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, appSettings, options },\n      updateApplicationSettingsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the application settings of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  listApplicationSettings(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListApplicationSettingsOptionalParams,\n  ): Promise<WebAppsListApplicationSettingsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listApplicationSettingsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates the Authentication / Authorization settings associated with web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param siteAuthSettings Auth settings associated with web app.\n   * @param options The options parameters.\n   */\n  updateAuthSettings(\n    resourceGroupName: string,\n    name: string,\n    siteAuthSettings: SiteAuthSettings,\n    options?: WebAppsUpdateAuthSettingsOptionalParams,\n  ): Promise<WebAppsUpdateAuthSettingsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, siteAuthSettings, options },\n      updateAuthSettingsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the Authentication/Authorization settings of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  getAuthSettings(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetAuthSettingsOptionalParams,\n  ): Promise<WebAppsGetAuthSettingsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getAuthSettingsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets site's Authentication / Authorization settings for apps via the V2 format\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  getAuthSettingsV2WithoutSecrets(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetAuthSettingsV2WithoutSecretsOptionalParams,\n  ): Promise<WebAppsGetAuthSettingsV2WithoutSecretsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getAuthSettingsV2WithoutSecretsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates site's Authentication / Authorization settings for apps via the V2 format\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param siteAuthSettingsV2 Auth settings associated with web app.\n   * @param options The options parameters.\n   */\n  updateAuthSettingsV2(\n    resourceGroupName: string,\n    name: string,\n    siteAuthSettingsV2: SiteAuthSettingsV2,\n    options?: WebAppsUpdateAuthSettingsV2OptionalParams,\n  ): Promise<WebAppsUpdateAuthSettingsV2Response> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, siteAuthSettingsV2, options },\n      updateAuthSettingsV2OperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets site's Authentication / Authorization settings for apps via the V2 format\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  getAuthSettingsV2(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetAuthSettingsV2OptionalParams,\n  ): Promise<WebAppsGetAuthSettingsV2Response> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getAuthSettingsV2OperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates the Azure storage account configurations of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param azureStorageAccounts Azure storage accounts of the app.\n   * @param options The options parameters.\n   */\n  updateAzureStorageAccounts(\n    resourceGroupName: string,\n    name: string,\n    azureStorageAccounts: AzureStoragePropertyDictionaryResource,\n    options?: WebAppsUpdateAzureStorageAccountsOptionalParams,\n  ): Promise<WebAppsUpdateAzureStorageAccountsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, azureStorageAccounts, options },\n      updateAzureStorageAccountsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the Azure storage account configurations of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  listAzureStorageAccounts(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListAzureStorageAccountsOptionalParams,\n  ): Promise<WebAppsListAzureStorageAccountsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listAzureStorageAccountsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates the backup configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param request Edited backup configuration.\n   * @param options The options parameters.\n   */\n  updateBackupConfiguration(\n    resourceGroupName: string,\n    name: string,\n    request: BackupRequest,\n    options?: WebAppsUpdateBackupConfigurationOptionalParams,\n  ): Promise<WebAppsUpdateBackupConfigurationResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, request, options },\n      updateBackupConfigurationOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Deletes the backup configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  deleteBackupConfiguration(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsDeleteBackupConfigurationOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      deleteBackupConfigurationOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the backup configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  getBackupConfiguration(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetBackupConfigurationOptionalParams,\n  ): Promise<WebAppsGetBackupConfigurationResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getBackupConfigurationOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the config reference app settings and status of an app\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  private _getAppSettingsKeyVaultReferences(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetAppSettingsKeyVaultReferencesOptionalParams,\n  ): Promise<WebAppsGetAppSettingsKeyVaultReferencesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getAppSettingsKeyVaultReferencesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the config reference and status of an app\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param appSettingKey App Setting key name.\n   * @param options The options parameters.\n   */\n  getAppSettingKeyVaultReference(\n    resourceGroupName: string,\n    name: string,\n    appSettingKey: string,\n    options?: WebAppsGetAppSettingKeyVaultReferenceOptionalParams,\n  ): Promise<WebAppsGetAppSettingKeyVaultReferenceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, appSettingKey, options },\n      getAppSettingKeyVaultReferenceOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the config reference app settings and status of an app\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  private _getSiteConnectionStringKeyVaultReferences(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetSiteConnectionStringKeyVaultReferencesOptionalParams,\n  ): Promise<WebAppsGetSiteConnectionStringKeyVaultReferencesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getSiteConnectionStringKeyVaultReferencesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the config reference and status of an app\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param connectionStringKey\n   * @param options The options parameters.\n   */\n  getSiteConnectionStringKeyVaultReference(\n    resourceGroupName: string,\n    name: string,\n    connectionStringKey: string,\n    options?: WebAppsGetSiteConnectionStringKeyVaultReferenceOptionalParams,\n  ): Promise<WebAppsGetSiteConnectionStringKeyVaultReferenceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, connectionStringKey, options },\n      getSiteConnectionStringKeyVaultReferenceOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Replaces the connection strings of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param connectionStrings Connection strings of the app or deployment slot. See example.\n   * @param options The options parameters.\n   */\n  updateConnectionStrings(\n    resourceGroupName: string,\n    name: string,\n    connectionStrings: ConnectionStringDictionary,\n    options?: WebAppsUpdateConnectionStringsOptionalParams,\n  ): Promise<WebAppsUpdateConnectionStringsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, connectionStrings, options },\n      updateConnectionStringsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the connection strings of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  listConnectionStrings(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListConnectionStringsOptionalParams,\n  ): Promise<WebAppsListConnectionStringsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listConnectionStringsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the logging configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  getDiagnosticLogsConfiguration(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetDiagnosticLogsConfigurationOptionalParams,\n  ): Promise<WebAppsGetDiagnosticLogsConfigurationResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getDiagnosticLogsConfigurationOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates the logging configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param siteLogsConfig A SiteLogsConfig JSON object that contains the logging configuration to change\n   *                       in the \"properties\" property.\n   * @param options The options parameters.\n   */\n  updateDiagnosticLogsConfig(\n    resourceGroupName: string,\n    name: string,\n    siteLogsConfig: SiteLogsConfig,\n    options?: WebAppsUpdateDiagnosticLogsConfigOptionalParams,\n  ): Promise<WebAppsUpdateDiagnosticLogsConfigResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, siteLogsConfig, options },\n      updateDiagnosticLogsConfigOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Replaces the metadata of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param metadata Edited metadata of the app or deployment slot. See example.\n   * @param options The options parameters.\n   */\n  updateMetadata(\n    resourceGroupName: string,\n    name: string,\n    metadata: StringDictionary,\n    options?: WebAppsUpdateMetadataOptionalParams,\n  ): Promise<WebAppsUpdateMetadataResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, metadata, options },\n      updateMetadataOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the metadata of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  listMetadata(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListMetadataOptionalParams,\n  ): Promise<WebAppsListMetadataResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listMetadataOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the Git/FTP publishing credentials of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  async beginListPublishingCredentials(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListPublishingCredentialsOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsListPublishingCredentialsResponse>,\n      WebAppsListPublishingCredentialsResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsListPublishingCredentialsResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, options },\n      spec: listPublishingCredentialsOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsListPublishingCredentialsResponse,\n      OperationState<WebAppsListPublishingCredentialsResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Gets the Git/FTP publishing credentials of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  async beginListPublishingCredentialsAndWait(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListPublishingCredentialsOptionalParams,\n  ): Promise<WebAppsListPublishingCredentialsResponse> {\n    const poller = await this.beginListPublishingCredentials(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Updates the Push settings associated with web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param pushSettings Push settings associated with web app.\n   * @param options The options parameters.\n   */\n  updateSitePushSettings(\n    resourceGroupName: string,\n    name: string,\n    pushSettings: PushSettings,\n    options?: WebAppsUpdateSitePushSettingsOptionalParams,\n  ): Promise<WebAppsUpdateSitePushSettingsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, pushSettings, options },\n      updateSitePushSettingsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the Push settings associated with web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param options The options parameters.\n   */\n  listSitePushSettings(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSitePushSettingsOptionalParams,\n  ): Promise<WebAppsListSitePushSettingsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listSitePushSettingsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the names of app settings and connection strings that stick to the slot (not\n   * swapped).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  listSlotConfigurationNames(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSlotConfigurationNamesOptionalParams,\n  ): Promise<WebAppsListSlotConfigurationNamesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listSlotConfigurationNamesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates the names of application settings and connection string that remain with the\n   * slot during swap operation.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slotConfigNames Names of application settings and connection strings. See example.\n   * @param options The options parameters.\n   */\n  updateSlotConfigurationNames(\n    resourceGroupName: string,\n    name: string,\n    slotConfigNames: SlotConfigNamesResource,\n    options?: WebAppsUpdateSlotConfigurationNamesOptionalParams,\n  ): Promise<WebAppsUpdateSlotConfigurationNamesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slotConfigNames, options },\n      updateSlotConfigurationNamesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the configuration of an app, such as platform version and bitness, default\n   * documents, virtual applications, Always On, etc.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  getConfiguration(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetConfigurationOptionalParams,\n  ): Promise<WebAppsGetConfigurationResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getConfigurationOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates the configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param siteConfig JSON representation of a SiteConfig object. See example.\n   * @param options The options parameters.\n   */\n  createOrUpdateConfiguration(\n    resourceGroupName: string,\n    name: string,\n    siteConfig: SiteConfigResource,\n    options?: WebAppsCreateOrUpdateConfigurationOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateConfigurationResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, siteConfig, options },\n      createOrUpdateConfigurationOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates the configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param siteConfig JSON representation of a SiteConfig object. See example.\n   * @param options The options parameters.\n   */\n  updateConfiguration(\n    resourceGroupName: string,\n    name: string,\n    siteConfig: SiteConfigResource,\n    options?: WebAppsUpdateConfigurationOptionalParams,\n  ): Promise<WebAppsUpdateConfigurationResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, siteConfig, options },\n      updateConfigurationOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a list of web app configuration snapshots identifiers. Each element of the list\n   * contains a timestamp and the ID of the snapshot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  private _listConfigurationSnapshotInfo(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListConfigurationSnapshotInfoOptionalParams,\n  ): Promise<WebAppsListConfigurationSnapshotInfoResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listConfigurationSnapshotInfoOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a snapshot of the configuration of an app at a previous point in time.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param snapshotId The ID of the snapshot to read.\n   * @param options The options parameters.\n   */\n  getConfigurationSnapshot(\n    resourceGroupName: string,\n    name: string,\n    snapshotId: string,\n    options?: WebAppsGetConfigurationSnapshotOptionalParams,\n  ): Promise<WebAppsGetConfigurationSnapshotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, snapshotId, options },\n      getConfigurationSnapshotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Reverts the configuration of an app to a previous snapshot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param snapshotId The ID of the snapshot to read.\n   * @param options The options parameters.\n   */\n  recoverSiteConfigurationSnapshot(\n    resourceGroupName: string,\n    name: string,\n    snapshotId: string,\n    options?: WebAppsRecoverSiteConfigurationSnapshotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, snapshotId, options },\n      recoverSiteConfigurationSnapshotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the last lines of docker logs for the given site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param options The options parameters.\n   */\n  getWebSiteContainerLogs(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetWebSiteContainerLogsOptionalParams,\n  ): Promise<WebAppsGetWebSiteContainerLogsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getWebSiteContainerLogsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the ZIP archived docker log files for the given site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param options The options parameters.\n   */\n  getContainerLogsZip(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetContainerLogsZipOptionalParams,\n  ): Promise<WebAppsGetContainerLogsZipResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getContainerLogsZipOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List continuous web jobs for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param options The options parameters.\n   */\n  private _listContinuousWebJobs(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListContinuousWebJobsOptionalParams,\n  ): Promise<WebAppsListContinuousWebJobsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listContinuousWebJobsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a continuous web job by its ID for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param options The options parameters.\n   */\n  getContinuousWebJob(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    options?: WebAppsGetContinuousWebJobOptionalParams,\n  ): Promise<WebAppsGetContinuousWebJobResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, options },\n      getContinuousWebJobOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Delete a continuous web job by its ID for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param options The options parameters.\n   */\n  deleteContinuousWebJob(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    options?: WebAppsDeleteContinuousWebJobOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, options },\n      deleteContinuousWebJobOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Start a continuous web job for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param options The options parameters.\n   */\n  startContinuousWebJob(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    options?: WebAppsStartContinuousWebJobOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, options },\n      startContinuousWebJobOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Stop a continuous web job for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param options The options parameters.\n   */\n  stopContinuousWebJob(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    options?: WebAppsStopContinuousWebJobOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, options },\n      stopContinuousWebJobOperationSpec,\n    );\n  }\n\n  /**\n   * List deployment statuses for an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  private _listProductionSiteDeploymentStatuses(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListProductionSiteDeploymentStatusesOptionalParams,\n  ): Promise<WebAppsListProductionSiteDeploymentStatusesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listProductionSiteDeploymentStatusesOperationSpec,\n    );\n  }\n\n  /**\n   * Gets the deployment status for an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param deploymentStatusId GUID of the deployment operation.\n   * @param options The options parameters.\n   */\n  async beginGetProductionSiteDeploymentStatus(\n    resourceGroupName: string,\n    name: string,\n    deploymentStatusId: string,\n    options?: WebAppsGetProductionSiteDeploymentStatusOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsGetProductionSiteDeploymentStatusResponse>,\n      WebAppsGetProductionSiteDeploymentStatusResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsGetProductionSiteDeploymentStatusResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, deploymentStatusId, options },\n      spec: getProductionSiteDeploymentStatusOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsGetProductionSiteDeploymentStatusResponse,\n      OperationState<WebAppsGetProductionSiteDeploymentStatusResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Gets the deployment status for an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param deploymentStatusId GUID of the deployment operation.\n   * @param options The options parameters.\n   */\n  async beginGetProductionSiteDeploymentStatusAndWait(\n    resourceGroupName: string,\n    name: string,\n    deploymentStatusId: string,\n    options?: WebAppsGetProductionSiteDeploymentStatusOptionalParams,\n  ): Promise<WebAppsGetProductionSiteDeploymentStatusResponse> {\n    const poller = await this.beginGetProductionSiteDeploymentStatus(\n      resourceGroupName,\n      name,\n      deploymentStatusId,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for List deployments for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  private _listDeployments(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListDeploymentsOptionalParams,\n  ): Promise<WebAppsListDeploymentsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listDeploymentsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get a deployment by its ID for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param id Deployment ID.\n   * @param options The options parameters.\n   */\n  getDeployment(\n    resourceGroupName: string,\n    name: string,\n    id: string,\n    options?: WebAppsGetDeploymentOptionalParams,\n  ): Promise<WebAppsGetDeploymentResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, id, options },\n      getDeploymentOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Create a deployment for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param id ID of an existing deployment.\n   * @param deployment Deployment details.\n   * @param options The options parameters.\n   */\n  createDeployment(\n    resourceGroupName: string,\n    name: string,\n    id: string,\n    deployment: Deployment,\n    options?: WebAppsCreateDeploymentOptionalParams,\n  ): Promise<WebAppsCreateDeploymentResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, id, deployment, options },\n      createDeploymentOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Delete a deployment by its ID for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param id Deployment ID.\n   * @param options The options parameters.\n   */\n  deleteDeployment(\n    resourceGroupName: string,\n    name: string,\n    id: string,\n    options?: WebAppsDeleteDeploymentOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, id, options },\n      deleteDeploymentOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List deployment log for specific deployment for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param id The ID of a specific deployment. This is the value of the name property in the JSON\n   *           response from \"GET /api/sites/{siteName}/deployments\".\n   * @param options The options parameters.\n   */\n  listDeploymentLog(\n    resourceGroupName: string,\n    name: string,\n    id: string,\n    options?: WebAppsListDeploymentLogOptionalParams,\n  ): Promise<WebAppsListDeploymentLogResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, id, options },\n      listDeploymentLogOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Discovers an existing app backup that can be restored from a blob in Azure storage.\n   * Use this to get information about the databases stored in a backup.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param request A RestoreRequest object that includes Azure storage URL and blog name for discovery\n   *                of backup.\n   * @param options The options parameters.\n   */\n  discoverBackup(\n    resourceGroupName: string,\n    name: string,\n    request: RestoreRequest,\n    options?: WebAppsDiscoverBackupOptionalParams,\n  ): Promise<WebAppsDiscoverBackupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, request, options },\n      discoverBackupOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Lists ownership identifiers for domain associated with web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  private _listDomainOwnershipIdentifiers(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListDomainOwnershipIdentifiersOptionalParams,\n  ): Promise<WebAppsListDomainOwnershipIdentifiersResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listDomainOwnershipIdentifiersOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get domain ownership identifier for web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param domainOwnershipIdentifierName Name of domain ownership identifier.\n   * @param options The options parameters.\n   */\n  getDomainOwnershipIdentifier(\n    resourceGroupName: string,\n    name: string,\n    domainOwnershipIdentifierName: string,\n    options?: WebAppsGetDomainOwnershipIdentifierOptionalParams,\n  ): Promise<WebAppsGetDomainOwnershipIdentifierResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, domainOwnershipIdentifierName, options },\n      getDomainOwnershipIdentifierOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a domain ownership identifier for web app, or updates an existing ownership\n   * identifier.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param domainOwnershipIdentifierName Name of domain ownership identifier.\n   * @param domainOwnershipIdentifier A JSON representation of the domain ownership properties.\n   * @param options The options parameters.\n   */\n  createOrUpdateDomainOwnershipIdentifier(\n    resourceGroupName: string,\n    name: string,\n    domainOwnershipIdentifierName: string,\n    domainOwnershipIdentifier: Identifier,\n    options?: WebAppsCreateOrUpdateDomainOwnershipIdentifierOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateDomainOwnershipIdentifierResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        domainOwnershipIdentifierName,\n        domainOwnershipIdentifier,\n        options,\n      },\n      createOrUpdateDomainOwnershipIdentifierOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Deletes a domain ownership identifier for a web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param domainOwnershipIdentifierName Name of domain ownership identifier.\n   * @param options The options parameters.\n   */\n  deleteDomainOwnershipIdentifier(\n    resourceGroupName: string,\n    name: string,\n    domainOwnershipIdentifierName: string,\n    options?: WebAppsDeleteDomainOwnershipIdentifierOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, domainOwnershipIdentifierName, options },\n      deleteDomainOwnershipIdentifierOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a domain ownership identifier for web app, or updates an existing ownership\n   * identifier.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param domainOwnershipIdentifierName Name of domain ownership identifier.\n   * @param domainOwnershipIdentifier A JSON representation of the domain ownership properties.\n   * @param options The options parameters.\n   */\n  updateDomainOwnershipIdentifier(\n    resourceGroupName: string,\n    name: string,\n    domainOwnershipIdentifierName: string,\n    domainOwnershipIdentifier: Identifier,\n    options?: WebAppsUpdateDomainOwnershipIdentifierOptionalParams,\n  ): Promise<WebAppsUpdateDomainOwnershipIdentifierResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        domainOwnershipIdentifierName,\n        domainOwnershipIdentifier,\n        options,\n      },\n      updateDomainOwnershipIdentifierOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get the status of the last MSDeploy operation.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param options The options parameters.\n   */\n  getMSDeployStatus(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetMSDeployStatusOptionalParams,\n  ): Promise<WebAppsGetMSDeployStatusResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getMSDeployStatusOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Invoke the MSDeploy web app extension.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param mSDeploy Details of MSDeploy operation\n   * @param options The options parameters.\n   */\n  async beginCreateMSDeployOperation(\n    resourceGroupName: string,\n    name: string,\n    mSDeploy: MSDeploy,\n    options?: WebAppsCreateMSDeployOperationOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsCreateMSDeployOperationResponse>,\n      WebAppsCreateMSDeployOperationResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsCreateMSDeployOperationResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, mSDeploy, options },\n      spec: createMSDeployOperationOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsCreateMSDeployOperationResponse,\n      OperationState<WebAppsCreateMSDeployOperationResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Invoke the MSDeploy web app extension.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param mSDeploy Details of MSDeploy operation\n   * @param options The options parameters.\n   */\n  async beginCreateMSDeployOperationAndWait(\n    resourceGroupName: string,\n    name: string,\n    mSDeploy: MSDeploy,\n    options?: WebAppsCreateMSDeployOperationOptionalParams,\n  ): Promise<WebAppsCreateMSDeployOperationResponse> {\n    const poller = await this.beginCreateMSDeployOperation(\n      resourceGroupName,\n      name,\n      mSDeploy,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Get the MSDeploy Log for the last MSDeploy operation.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param options The options parameters.\n   */\n  getMSDeployLog(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetMSDeployLogOptionalParams,\n  ): Promise<WebAppsGetMSDeployLogResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getMSDeployLogOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Invoke onedeploy status API /api/deployments and gets the deployment status for the\n   * site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param options The options parameters.\n   */\n  getOneDeployStatus(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetOneDeployStatusOptionalParams,\n  ): Promise<WebAppsGetOneDeployStatusResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getOneDeployStatusOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Invoke the OneDeploy publish web app extension.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param options The options parameters.\n   */\n  createOneDeployOperation(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsCreateOneDeployOperationOptionalParams,\n  ): Promise<WebAppsCreateOneDeployOperationResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      createOneDeployOperationOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List the functions for a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param options The options parameters.\n   */\n  private _listFunctions(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListFunctionsOptionalParams,\n  ): Promise<WebAppsListFunctionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listFunctionsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Fetch a short lived token that can be exchanged for a master key.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param options The options parameters.\n   */\n  getFunctionsAdminToken(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetFunctionsAdminTokenOptionalParams,\n  ): Promise<WebAppsGetFunctionsAdminTokenResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getFunctionsAdminTokenOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get function information by its ID for web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param functionName Function name.\n   * @param options The options parameters.\n   */\n  getFunction(\n    resourceGroupName: string,\n    name: string,\n    functionName: string,\n    options?: WebAppsGetFunctionOptionalParams,\n  ): Promise<WebAppsGetFunctionResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, functionName, options },\n      getFunctionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Create function for web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param functionName Function name.\n   * @param functionEnvelope Function details.\n   * @param options The options parameters.\n   */\n  async beginCreateFunction(\n    resourceGroupName: string,\n    name: string,\n    functionName: string,\n    functionEnvelope: FunctionEnvelope,\n    options?: WebAppsCreateFunctionOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsCreateFunctionResponse>,\n      WebAppsCreateFunctionResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsCreateFunctionResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        name,\n        functionName,\n        functionEnvelope,\n        options,\n      },\n      spec: createFunctionOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsCreateFunctionResponse,\n      OperationState<WebAppsCreateFunctionResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Create function for web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param functionName Function name.\n   * @param functionEnvelope Function details.\n   * @param options The options parameters.\n   */\n  async beginCreateFunctionAndWait(\n    resourceGroupName: string,\n    name: string,\n    functionName: string,\n    functionEnvelope: FunctionEnvelope,\n    options?: WebAppsCreateFunctionOptionalParams,\n  ): Promise<WebAppsCreateFunctionResponse> {\n    const poller = await this.beginCreateFunction(\n      resourceGroupName,\n      name,\n      functionName,\n      functionEnvelope,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Delete a function for web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param functionName Function name.\n   * @param options The options parameters.\n   */\n  deleteFunction(\n    resourceGroupName: string,\n    name: string,\n    functionName: string,\n    options?: WebAppsDeleteFunctionOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, functionName, options },\n      deleteFunctionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Add or update a function secret.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param functionName The name of the function.\n   * @param keyName The name of the key.\n   * @param key The key to create or update\n   * @param options The options parameters.\n   */\n  createOrUpdateFunctionSecret(\n    resourceGroupName: string,\n    name: string,\n    functionName: string,\n    keyName: string,\n    key: KeyInfo,\n    options?: WebAppsCreateOrUpdateFunctionSecretOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateFunctionSecretResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, functionName, keyName, key, options },\n      createOrUpdateFunctionSecretOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Delete a function secret.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param functionName The name of the function.\n   * @param keyName The name of the key.\n   * @param options The options parameters.\n   */\n  deleteFunctionSecret(\n    resourceGroupName: string,\n    name: string,\n    functionName: string,\n    keyName: string,\n    options?: WebAppsDeleteFunctionSecretOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, functionName, keyName, options },\n      deleteFunctionSecretOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get function keys for a function in a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param functionName Function name.\n   * @param options The options parameters.\n   */\n  listFunctionKeys(\n    resourceGroupName: string,\n    name: string,\n    functionName: string,\n    options?: WebAppsListFunctionKeysOptionalParams,\n  ): Promise<WebAppsListFunctionKeysResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, functionName, options },\n      listFunctionKeysOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get function secrets for a function in a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param functionName Function name.\n   * @param options The options parameters.\n   */\n  listFunctionSecrets(\n    resourceGroupName: string,\n    name: string,\n    functionName: string,\n    options?: WebAppsListFunctionSecretsOptionalParams,\n  ): Promise<WebAppsListFunctionSecretsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, functionName, options },\n      listFunctionSecretsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get host secrets for a function app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param options The options parameters.\n   */\n  listHostKeys(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListHostKeysOptionalParams,\n  ): Promise<WebAppsListHostKeysResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listHostKeysOperationSpec,\n    );\n  }\n\n  /**\n   * Description for This is to allow calling via powershell and ARM template.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  listSyncStatus(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSyncStatusOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listSyncStatusOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Syncs function trigger metadata to the management database\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  syncFunctions(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsSyncFunctionsOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      syncFunctionsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Add or update a host level secret.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param keyType The type of host key.\n   * @param keyName The name of the key.\n   * @param key The key to create or update\n   * @param options The options parameters.\n   */\n  createOrUpdateHostSecret(\n    resourceGroupName: string,\n    name: string,\n    keyType: string,\n    keyName: string,\n    key: KeyInfo,\n    options?: WebAppsCreateOrUpdateHostSecretOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateHostSecretResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, keyType, keyName, key, options },\n      createOrUpdateHostSecretOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Delete a host level secret.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param keyType The type of host key.\n   * @param keyName The name of the key.\n   * @param options The options parameters.\n   */\n  deleteHostSecret(\n    resourceGroupName: string,\n    name: string,\n    keyType: string,\n    keyName: string,\n    options?: WebAppsDeleteHostSecretOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, keyType, keyName, options },\n      deleteHostSecretOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get hostname bindings for an app or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  private _listHostNameBindings(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListHostNameBindingsOptionalParams,\n  ): Promise<WebAppsListHostNameBindingsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listHostNameBindingsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get the named hostname binding for an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param hostName Hostname in the hostname binding.\n   * @param options The options parameters.\n   */\n  getHostNameBinding(\n    resourceGroupName: string,\n    name: string,\n    hostName: string,\n    options?: WebAppsGetHostNameBindingOptionalParams,\n  ): Promise<WebAppsGetHostNameBindingResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, hostName, options },\n      getHostNameBindingOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a hostname binding for an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param hostName Hostname in the hostname binding.\n   * @param hostNameBinding Binding details. This is the JSON representation of a HostNameBinding object.\n   * @param options The options parameters.\n   */\n  createOrUpdateHostNameBinding(\n    resourceGroupName: string,\n    name: string,\n    hostName: string,\n    hostNameBinding: HostNameBinding,\n    options?: WebAppsCreateOrUpdateHostNameBindingOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateHostNameBindingResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, hostName, hostNameBinding, options },\n      createOrUpdateHostNameBindingOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Deletes a hostname binding for an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param hostName Hostname in the hostname binding.\n   * @param options The options parameters.\n   */\n  deleteHostNameBinding(\n    resourceGroupName: string,\n    name: string,\n    hostName: string,\n    options?: WebAppsDeleteHostNameBindingOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, hostName, options },\n      deleteHostNameBindingOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Retrieves a specific Service Bus Hybrid Connection used by this Web App.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param namespaceName The namespace for this hybrid connection.\n   * @param relayName The relay name for this hybrid connection.\n   * @param options The options parameters.\n   */\n  getHybridConnection(\n    resourceGroupName: string,\n    name: string,\n    namespaceName: string,\n    relayName: string,\n    options?: WebAppsGetHybridConnectionOptionalParams,\n  ): Promise<WebAppsGetHybridConnectionResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, namespaceName, relayName, options },\n      getHybridConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a new Hybrid Connection using a Service Bus relay.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param namespaceName The namespace for this hybrid connection.\n   * @param relayName The relay name for this hybrid connection.\n   * @param connectionEnvelope The details of the hybrid connection.\n   * @param options The options parameters.\n   */\n  createOrUpdateHybridConnection(\n    resourceGroupName: string,\n    name: string,\n    namespaceName: string,\n    relayName: string,\n    connectionEnvelope: HybridConnection,\n    options?: WebAppsCreateOrUpdateHybridConnectionOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateHybridConnectionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        namespaceName,\n        relayName,\n        connectionEnvelope,\n        options,\n      },\n      createOrUpdateHybridConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Removes a Hybrid Connection from this site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param namespaceName The namespace for this hybrid connection.\n   * @param relayName The relay name for this hybrid connection.\n   * @param options The options parameters.\n   */\n  deleteHybridConnection(\n    resourceGroupName: string,\n    name: string,\n    namespaceName: string,\n    relayName: string,\n    options?: WebAppsDeleteHybridConnectionOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, namespaceName, relayName, options },\n      deleteHybridConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a new Hybrid Connection using a Service Bus relay.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param namespaceName The namespace for this hybrid connection.\n   * @param relayName The relay name for this hybrid connection.\n   * @param connectionEnvelope The details of the hybrid connection.\n   * @param options The options parameters.\n   */\n  updateHybridConnection(\n    resourceGroupName: string,\n    name: string,\n    namespaceName: string,\n    relayName: string,\n    connectionEnvelope: HybridConnection,\n    options?: WebAppsUpdateHybridConnectionOptionalParams,\n  ): Promise<WebAppsUpdateHybridConnectionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        namespaceName,\n        relayName,\n        connectionEnvelope,\n        options,\n      },\n      updateHybridConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Retrieves all Service Bus Hybrid Connections used by this Web App.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param options The options parameters.\n   */\n  listHybridConnections(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListHybridConnectionsOptionalParams,\n  ): Promise<WebAppsListHybridConnectionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listHybridConnectionsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets hybrid connections configured for an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  listRelayServiceConnections(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListRelayServiceConnectionsOptionalParams,\n  ): Promise<WebAppsListRelayServiceConnectionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listRelayServiceConnectionsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a hybrid connection configuration by its name.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param entityName Name of the hybrid connection.\n   * @param options The options parameters.\n   */\n  getRelayServiceConnection(\n    resourceGroupName: string,\n    name: string,\n    entityName: string,\n    options?: WebAppsGetRelayServiceConnectionOptionalParams,\n  ): Promise<WebAppsGetRelayServiceConnectionResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, entityName, options },\n      getRelayServiceConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a new hybrid connection configuration (PUT), or updates an existing one\n   * (PATCH).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param entityName Name of the hybrid connection configuration.\n   * @param connectionEnvelope Details of the hybrid connection configuration.\n   * @param options The options parameters.\n   */\n  createOrUpdateRelayServiceConnection(\n    resourceGroupName: string,\n    name: string,\n    entityName: string,\n    connectionEnvelope: RelayServiceConnectionEntity,\n    options?: WebAppsCreateOrUpdateRelayServiceConnectionOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateRelayServiceConnectionResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, entityName, connectionEnvelope, options },\n      createOrUpdateRelayServiceConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Deletes a relay service connection by its name.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param entityName Name of the hybrid connection configuration.\n   * @param options The options parameters.\n   */\n  deleteRelayServiceConnection(\n    resourceGroupName: string,\n    name: string,\n    entityName: string,\n    options?: WebAppsDeleteRelayServiceConnectionOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, entityName, options },\n      deleteRelayServiceConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a new hybrid connection configuration (PUT), or updates an existing one\n   * (PATCH).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param entityName Name of the hybrid connection configuration.\n   * @param connectionEnvelope Details of the hybrid connection configuration.\n   * @param options The options parameters.\n   */\n  updateRelayServiceConnection(\n    resourceGroupName: string,\n    name: string,\n    entityName: string,\n    connectionEnvelope: RelayServiceConnectionEntity,\n    options?: WebAppsUpdateRelayServiceConnectionOptionalParams,\n  ): Promise<WebAppsUpdateRelayServiceConnectionResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, entityName, connectionEnvelope, options },\n      updateRelayServiceConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets all scale-out instances of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  private _listInstanceIdentifiers(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListInstanceIdentifiersOptionalParams,\n  ): Promise<WebAppsListInstanceIdentifiersResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listInstanceIdentifiersOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets all scale-out instances of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param instanceId\n   * @param options The options parameters.\n   */\n  getInstanceInfo(\n    resourceGroupName: string,\n    name: string,\n    instanceId: string,\n    options?: WebAppsGetInstanceInfoOptionalParams,\n  ): Promise<WebAppsGetInstanceInfoResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, instanceId, options },\n      getInstanceInfoOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get the status of the last MSDeploy operation.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param instanceId ID of web app instance.\n   * @param options The options parameters.\n   */\n  getInstanceMsDeployStatus(\n    resourceGroupName: string,\n    name: string,\n    instanceId: string,\n    options?: WebAppsGetInstanceMsDeployStatusOptionalParams,\n  ): Promise<WebAppsGetInstanceMsDeployStatusResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, instanceId, options },\n      getInstanceMsDeployStatusOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Invoke the MSDeploy web app extension.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param instanceId ID of web app instance.\n   * @param mSDeploy Details of MSDeploy operation\n   * @param options The options parameters.\n   */\n  async beginCreateInstanceMSDeployOperation(\n    resourceGroupName: string,\n    name: string,\n    instanceId: string,\n    mSDeploy: MSDeploy,\n    options?: WebAppsCreateInstanceMSDeployOperationOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsCreateInstanceMSDeployOperationResponse>,\n      WebAppsCreateInstanceMSDeployOperationResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsCreateInstanceMSDeployOperationResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, instanceId, mSDeploy, options },\n      spec: createInstanceMSDeployOperationOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsCreateInstanceMSDeployOperationResponse,\n      OperationState<WebAppsCreateInstanceMSDeployOperationResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Invoke the MSDeploy web app extension.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param instanceId ID of web app instance.\n   * @param mSDeploy Details of MSDeploy operation\n   * @param options The options parameters.\n   */\n  async beginCreateInstanceMSDeployOperationAndWait(\n    resourceGroupName: string,\n    name: string,\n    instanceId: string,\n    mSDeploy: MSDeploy,\n    options?: WebAppsCreateInstanceMSDeployOperationOptionalParams,\n  ): Promise<WebAppsCreateInstanceMSDeployOperationResponse> {\n    const poller = await this.beginCreateInstanceMSDeployOperation(\n      resourceGroupName,\n      name,\n      instanceId,\n      mSDeploy,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Get the MSDeploy Log for the last MSDeploy operation.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param instanceId ID of web app instance.\n   * @param options The options parameters.\n   */\n  getInstanceMSDeployLog(\n    resourceGroupName: string,\n    name: string,\n    instanceId: string,\n    options?: WebAppsGetInstanceMSDeployLogOptionalParams,\n  ): Promise<WebAppsGetInstanceMSDeployLogResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, instanceId, options },\n      getInstanceMSDeployLogOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get list of processes for a web site, or a deployment slot, or for a specific\n   * scaled-out instance in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param options The options parameters.\n   */\n  private _listInstanceProcesses(\n    resourceGroupName: string,\n    name: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessesOptionalParams,\n  ): Promise<WebAppsListInstanceProcessesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, instanceId, options },\n      listInstanceProcessesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get process information by its ID for a specific scaled-out instance in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param options The options parameters.\n   */\n  getInstanceProcess(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    instanceId: string,\n    options?: WebAppsGetInstanceProcessOptionalParams,\n  ): Promise<WebAppsGetInstanceProcessResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, instanceId, options },\n      getInstanceProcessOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Terminate a process by its ID for a web site, or a deployment slot, or specific\n   * scaled-out instance in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param options The options parameters.\n   */\n  deleteInstanceProcess(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    instanceId: string,\n    options?: WebAppsDeleteInstanceProcessOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, instanceId, options },\n      deleteInstanceProcessOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get a memory dump of a process by its ID for a specific scaled-out instance in a web\n   * site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param options The options parameters.\n   */\n  getInstanceProcessDump(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    instanceId: string,\n    options?: WebAppsGetInstanceProcessDumpOptionalParams,\n  ): Promise<WebAppsGetInstanceProcessDumpResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, instanceId, options },\n      getInstanceProcessDumpOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List module information for a process by its ID for a specific scaled-out instance\n   * in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param options The options parameters.\n   */\n  private _listInstanceProcessModules(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessModulesOptionalParams,\n  ): Promise<WebAppsListInstanceProcessModulesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, instanceId, options },\n      listInstanceProcessModulesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get process information by its ID for a specific scaled-out instance in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param baseAddress Module base address.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param options The options parameters.\n   */\n  getInstanceProcessModule(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    baseAddress: string,\n    instanceId: string,\n    options?: WebAppsGetInstanceProcessModuleOptionalParams,\n  ): Promise<WebAppsGetInstanceProcessModuleResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, baseAddress, instanceId, options },\n      getInstanceProcessModuleOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List the threads in a process by its ID for a specific scaled-out instance in a web\n   * site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param options The options parameters.\n   */\n  private _listInstanceProcessThreads(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessThreadsOptionalParams,\n  ): Promise<WebAppsListInstanceProcessThreadsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, instanceId, options },\n      listInstanceProcessThreadsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Shows whether an app can be cloned to another resource group or subscription.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  isCloneable(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsIsCloneableOptionalParams,\n  ): Promise<WebAppsIsCloneableResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      isCloneableOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets existing backups of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  private _listSiteBackups(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSiteBackupsOptionalParams,\n  ): Promise<WebAppsListSiteBackupsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listSiteBackupsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for This is to allow calling via powershell and ARM template.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  listSyncFunctionTriggers(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSyncFunctionTriggersOptionalParams,\n  ): Promise<WebAppsListSyncFunctionTriggersResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listSyncFunctionTriggersOperationSpec,\n    );\n  }\n\n  /**\n   * Updates the machine key of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  updateMachineKey(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsUpdateMachineKeyOptionalParams,\n  ): Promise<WebAppsUpdateMachineKeyResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      updateMachineKeyOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Restores a web app.\n   * @param subscriptionName Azure subscription.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param migrationOptions Migration migrationOptions.\n   * @param options The options parameters.\n   */\n  async beginMigrateStorage(\n    subscriptionName: string,\n    resourceGroupName: string,\n    name: string,\n    migrationOptions: StorageMigrationOptions,\n    options?: WebAppsMigrateStorageOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsMigrateStorageResponse>,\n      WebAppsMigrateStorageResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsMigrateStorageResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        subscriptionName,\n        resourceGroupName,\n        name,\n        migrationOptions,\n        options,\n      },\n      spec: migrateStorageOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsMigrateStorageResponse,\n      OperationState<WebAppsMigrateStorageResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Restores a web app.\n   * @param subscriptionName Azure subscription.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param migrationOptions Migration migrationOptions.\n   * @param options The options parameters.\n   */\n  async beginMigrateStorageAndWait(\n    subscriptionName: string,\n    resourceGroupName: string,\n    name: string,\n    migrationOptions: StorageMigrationOptions,\n    options?: WebAppsMigrateStorageOptionalParams,\n  ): Promise<WebAppsMigrateStorageResponse> {\n    const poller = await this.beginMigrateStorage(\n      subscriptionName,\n      resourceGroupName,\n      name,\n      migrationOptions,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Migrates a local (in-app) MySql database to a remote MySql database.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param migrationRequestEnvelope MySql migration options.\n   * @param options The options parameters.\n   */\n  async beginMigrateMySql(\n    resourceGroupName: string,\n    name: string,\n    migrationRequestEnvelope: MigrateMySqlRequest,\n    options?: WebAppsMigrateMySqlOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsMigrateMySqlResponse>,\n      WebAppsMigrateMySqlResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsMigrateMySqlResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, migrationRequestEnvelope, options },\n      spec: migrateMySqlOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsMigrateMySqlResponse,\n      OperationState<WebAppsMigrateMySqlResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Migrates a local (in-app) MySql database to a remote MySql database.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param migrationRequestEnvelope MySql migration options.\n   * @param options The options parameters.\n   */\n  async beginMigrateMySqlAndWait(\n    resourceGroupName: string,\n    name: string,\n    migrationRequestEnvelope: MigrateMySqlRequest,\n    options?: WebAppsMigrateMySqlOptionalParams,\n  ): Promise<WebAppsMigrateMySqlResponse> {\n    const poller = await this.beginMigrateMySql(\n      resourceGroupName,\n      name,\n      migrationRequestEnvelope,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Returns the status of MySql in app migration, if one is active, and whether or not\n   * MySql in app is enabled\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param options The options parameters.\n   */\n  getMigrateMySqlStatus(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetMigrateMySqlStatusOptionalParams,\n  ): Promise<WebAppsGetMigrateMySqlStatusResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getMigrateMySqlStatusOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a Swift Virtual Network connection.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  getSwiftVirtualNetworkConnection(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetSwiftVirtualNetworkConnectionOptionalParams,\n  ): Promise<WebAppsGetSwiftVirtualNetworkConnectionResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getSwiftVirtualNetworkConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Integrates this Web App with a Virtual Network. This requires that 1)\n   * \"swiftSupported\" is true when doing a GET against this resource, and 2) that the target Subnet has\n   * already been delegated, and is not\n   * in use by another App Service Plan other than the one this App is in.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param connectionEnvelope Properties of the Virtual Network connection. See example.\n   * @param options The options parameters.\n   */\n  createOrUpdateSwiftVirtualNetworkConnectionWithCheck(\n    resourceGroupName: string,\n    name: string,\n    connectionEnvelope: SwiftVirtualNetwork,\n    options?: WebAppsCreateOrUpdateSwiftVirtualNetworkConnectionWithCheckOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateSwiftVirtualNetworkConnectionWithCheckResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, connectionEnvelope, options },\n      createOrUpdateSwiftVirtualNetworkConnectionWithCheckOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Deletes a Swift Virtual Network connection from an app (or deployment slot).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  deleteSwiftVirtualNetwork(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsDeleteSwiftVirtualNetworkOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      deleteSwiftVirtualNetworkOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Integrates this Web App with a Virtual Network. This requires that 1)\n   * \"swiftSupported\" is true when doing a GET against this resource, and 2) that the target Subnet has\n   * already been delegated, and is not\n   * in use by another App Service Plan other than the one this App is in.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param connectionEnvelope Properties of the Virtual Network connection. See example.\n   * @param options The options parameters.\n   */\n  updateSwiftVirtualNetworkConnectionWithCheck(\n    resourceGroupName: string,\n    name: string,\n    connectionEnvelope: SwiftVirtualNetwork,\n    options?: WebAppsUpdateSwiftVirtualNetworkConnectionWithCheckOptionalParams,\n  ): Promise<WebAppsUpdateSwiftVirtualNetworkConnectionWithCheckResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, connectionEnvelope, options },\n      updateSwiftVirtualNetworkConnectionWithCheckOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets all network features used by the app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param view The type of view. Only \"summary\" is supported at this time.\n   * @param options The options parameters.\n   */\n  listNetworkFeatures(\n    resourceGroupName: string,\n    name: string,\n    view: string,\n    options?: WebAppsListNetworkFeaturesOptionalParams,\n  ): Promise<WebAppsListNetworkFeaturesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, view, options },\n      listNetworkFeaturesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a named operation for a network trace capturing (or deployment slot, if\n   * specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param operationId GUID of the operation.\n   * @param options The options parameters.\n   */\n  getNetworkTraceOperation(\n    resourceGroupName: string,\n    name: string,\n    operationId: string,\n    options?: WebAppsGetNetworkTraceOperationOptionalParams,\n  ): Promise<WebAppsGetNetworkTraceOperationResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, operationId, options },\n      getNetworkTraceOperationOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Start capturing network packets for the site (To be deprecated).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param options The options parameters.\n   */\n  startWebSiteNetworkTrace(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsStartWebSiteNetworkTraceOptionalParams,\n  ): Promise<WebAppsStartWebSiteNetworkTraceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      startWebSiteNetworkTraceOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Start capturing network packets for the site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param options The options parameters.\n   */\n  async beginStartWebSiteNetworkTraceOperation(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsStartWebSiteNetworkTraceOperationOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsStartWebSiteNetworkTraceOperationResponse>,\n      WebAppsStartWebSiteNetworkTraceOperationResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsStartWebSiteNetworkTraceOperationResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, options },\n      spec: startWebSiteNetworkTraceOperationOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsStartWebSiteNetworkTraceOperationResponse,\n      OperationState<WebAppsStartWebSiteNetworkTraceOperationResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Start capturing network packets for the site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param options The options parameters.\n   */\n  async beginStartWebSiteNetworkTraceOperationAndWait(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsStartWebSiteNetworkTraceOperationOptionalParams,\n  ): Promise<WebAppsStartWebSiteNetworkTraceOperationResponse> {\n    const poller = await this.beginStartWebSiteNetworkTraceOperation(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Stop ongoing capturing network packets for the site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param options The options parameters.\n   */\n  stopWebSiteNetworkTrace(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsStopWebSiteNetworkTraceOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      stopWebSiteNetworkTraceOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a named operation for a network trace capturing (or deployment slot, if\n   * specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param operationId GUID of the operation.\n   * @param options The options parameters.\n   */\n  getNetworkTraces(\n    resourceGroupName: string,\n    name: string,\n    operationId: string,\n    options?: WebAppsGetNetworkTracesOptionalParams,\n  ): Promise<WebAppsGetNetworkTracesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, operationId, options },\n      getNetworkTracesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a named operation for a network trace capturing (or deployment slot, if\n   * specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param operationId GUID of the operation.\n   * @param options The options parameters.\n   */\n  getNetworkTraceOperationV2(\n    resourceGroupName: string,\n    name: string,\n    operationId: string,\n    options?: WebAppsGetNetworkTraceOperationV2OptionalParams,\n  ): Promise<WebAppsGetNetworkTraceOperationV2Response> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, operationId, options },\n      getNetworkTraceOperationV2OperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a named operation for a network trace capturing (or deployment slot, if\n   * specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param operationId GUID of the operation.\n   * @param options The options parameters.\n   */\n  getNetworkTracesV2(\n    resourceGroupName: string,\n    name: string,\n    operationId: string,\n    options?: WebAppsGetNetworkTracesV2OptionalParams,\n  ): Promise<WebAppsGetNetworkTracesV2Response> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, operationId, options },\n      getNetworkTracesV2OperationSpec,\n    );\n  }\n\n  /**\n   * Description for Generates a new publishing password for an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  generateNewSitePublishingPassword(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGenerateNewSitePublishingPasswordOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      generateNewSitePublishingPasswordOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets perfmon counters for web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param options The options parameters.\n   */\n  private _listPerfMonCounters(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListPerfMonCountersOptionalParams,\n  ): Promise<WebAppsListPerfMonCountersResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listPerfMonCountersOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets web app's event logs.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param options The options parameters.\n   */\n  getSitePhpErrorLogFlag(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetSitePhpErrorLogFlagOptionalParams,\n  ): Promise<WebAppsGetSitePhpErrorLogFlagResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getSitePhpErrorLogFlagOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the premier add-ons of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  listPremierAddOns(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListPremierAddOnsOptionalParams,\n  ): Promise<WebAppsListPremierAddOnsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listPremierAddOnsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a named add-on of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param premierAddOnName Add-on name.\n   * @param options The options parameters.\n   */\n  getPremierAddOn(\n    resourceGroupName: string,\n    name: string,\n    premierAddOnName: string,\n    options?: WebAppsGetPremierAddOnOptionalParams,\n  ): Promise<WebAppsGetPremierAddOnResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, premierAddOnName, options },\n      getPremierAddOnOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates a named add-on of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param premierAddOnName Add-on name.\n   * @param premierAddOn A JSON representation of the edited premier add-on.\n   * @param options The options parameters.\n   */\n  addPremierAddOn(\n    resourceGroupName: string,\n    name: string,\n    premierAddOnName: string,\n    premierAddOn: PremierAddOn,\n    options?: WebAppsAddPremierAddOnOptionalParams,\n  ): Promise<WebAppsAddPremierAddOnResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, premierAddOnName, premierAddOn, options },\n      addPremierAddOnOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Delete a premier add-on from an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param premierAddOnName Add-on name.\n   * @param options The options parameters.\n   */\n  deletePremierAddOn(\n    resourceGroupName: string,\n    name: string,\n    premierAddOnName: string,\n    options?: WebAppsDeletePremierAddOnOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, premierAddOnName, options },\n      deletePremierAddOnOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates a named add-on of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param premierAddOnName Add-on name.\n   * @param premierAddOn A JSON representation of the edited premier add-on.\n   * @param options The options parameters.\n   */\n  updatePremierAddOn(\n    resourceGroupName: string,\n    name: string,\n    premierAddOnName: string,\n    premierAddOn: PremierAddOnPatchResource,\n    options?: WebAppsUpdatePremierAddOnOptionalParams,\n  ): Promise<WebAppsUpdatePremierAddOnResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, premierAddOnName, premierAddOn, options },\n      updatePremierAddOnOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets data around private site access enablement and authorized Virtual Networks that\n   * can access the site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param options The options parameters.\n   */\n  getPrivateAccess(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetPrivateAccessOptionalParams,\n  ): Promise<WebAppsGetPrivateAccessResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getPrivateAccessOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Sets data around private site access enablement and authorized Virtual Networks that\n   * can access the site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param access The information for the private access\n   * @param options The options parameters.\n   */\n  putPrivateAccessVnet(\n    resourceGroupName: string,\n    name: string,\n    access: PrivateAccess,\n    options?: WebAppsPutPrivateAccessVnetOptionalParams,\n  ): Promise<WebAppsPutPrivateAccessVnetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, access, options },\n      putPrivateAccessVnetOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the list of private endpoint connections associated with a site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the site.\n   * @param options The options parameters.\n   */\n  private _getPrivateEndpointConnectionList(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetPrivateEndpointConnectionListOptionalParams,\n  ): Promise<WebAppsGetPrivateEndpointConnectionListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getPrivateEndpointConnectionListOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the site.\n   * @param privateEndpointConnectionName Name of the private endpoint connection.\n   * @param options The options parameters.\n   */\n  getPrivateEndpointConnection(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    options?: WebAppsGetPrivateEndpointConnectionOptionalParams,\n  ): Promise<WebAppsGetPrivateEndpointConnectionResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, privateEndpointConnectionName, options },\n      getPrivateEndpointConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Approves or rejects a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the site.\n   * @param privateEndpointConnectionName\n   * @param privateEndpointWrapper Remote Private Endpoint Connection ARM resource.\n   * @param options The options parameters.\n   */\n  async beginApproveOrRejectPrivateEndpointConnection(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    privateEndpointWrapper: RemotePrivateEndpointConnectionARMResource,\n    options?: WebAppsApproveOrRejectPrivateEndpointConnectionOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsApproveOrRejectPrivateEndpointConnectionResponse>,\n      WebAppsApproveOrRejectPrivateEndpointConnectionResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsApproveOrRejectPrivateEndpointConnectionResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        name,\n        privateEndpointConnectionName,\n        privateEndpointWrapper,\n        options,\n      },\n      spec: approveOrRejectPrivateEndpointConnectionOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsApproveOrRejectPrivateEndpointConnectionResponse,\n      OperationState<WebAppsApproveOrRejectPrivateEndpointConnectionResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Approves or rejects a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the site.\n   * @param privateEndpointConnectionName\n   * @param privateEndpointWrapper Remote Private Endpoint Connection ARM resource.\n   * @param options The options parameters.\n   */\n  async beginApproveOrRejectPrivateEndpointConnectionAndWait(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    privateEndpointWrapper: RemotePrivateEndpointConnectionARMResource,\n    options?: WebAppsApproveOrRejectPrivateEndpointConnectionOptionalParams,\n  ): Promise<WebAppsApproveOrRejectPrivateEndpointConnectionResponse> {\n    const poller = await this.beginApproveOrRejectPrivateEndpointConnection(\n      resourceGroupName,\n      name,\n      privateEndpointConnectionName,\n      privateEndpointWrapper,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Deletes a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the site.\n   * @param privateEndpointConnectionName\n   * @param options The options parameters.\n   */\n  async beginDeletePrivateEndpointConnection(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    options?: WebAppsDeletePrivateEndpointConnectionOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsDeletePrivateEndpointConnectionResponse>,\n      WebAppsDeletePrivateEndpointConnectionResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsDeletePrivateEndpointConnectionResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, privateEndpointConnectionName, options },\n      spec: deletePrivateEndpointConnectionOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsDeletePrivateEndpointConnectionResponse,\n      OperationState<WebAppsDeletePrivateEndpointConnectionResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Deletes a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the site.\n   * @param privateEndpointConnectionName\n   * @param options The options parameters.\n   */\n  async beginDeletePrivateEndpointConnectionAndWait(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    options?: WebAppsDeletePrivateEndpointConnectionOptionalParams,\n  ): Promise<WebAppsDeletePrivateEndpointConnectionResponse> {\n    const poller = await this.beginDeletePrivateEndpointConnection(\n      resourceGroupName,\n      name,\n      privateEndpointConnectionName,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Gets the private link resources\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the site.\n   * @param options The options parameters.\n   */\n  getPrivateLinkResources(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetPrivateLinkResourcesOptionalParams,\n  ): Promise<WebAppsGetPrivateLinkResourcesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getPrivateLinkResourcesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get list of processes for a web site, or a deployment slot, or for a specific\n   * scaled-out instance in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param options The options parameters.\n   */\n  private _listProcesses(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListProcessesOptionalParams,\n  ): Promise<WebAppsListProcessesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listProcessesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get process information by its ID for a specific scaled-out instance in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param options The options parameters.\n   */\n  getProcess(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    options?: WebAppsGetProcessOptionalParams,\n  ): Promise<WebAppsGetProcessResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, options },\n      getProcessOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Terminate a process by its ID for a web site, or a deployment slot, or specific\n   * scaled-out instance in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param options The options parameters.\n   */\n  deleteProcess(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    options?: WebAppsDeleteProcessOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, options },\n      deleteProcessOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get a memory dump of a process by its ID for a specific scaled-out instance in a web\n   * site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param options The options parameters.\n   */\n  getProcessDump(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    options?: WebAppsGetProcessDumpOptionalParams,\n  ): Promise<WebAppsGetProcessDumpResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, options },\n      getProcessDumpOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List module information for a process by its ID for a specific scaled-out instance\n   * in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param options The options parameters.\n   */\n  private _listProcessModules(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    options?: WebAppsListProcessModulesOptionalParams,\n  ): Promise<WebAppsListProcessModulesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, options },\n      listProcessModulesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get process information by its ID for a specific scaled-out instance in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param baseAddress Module base address.\n   * @param options The options parameters.\n   */\n  getProcessModule(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    baseAddress: string,\n    options?: WebAppsGetProcessModuleOptionalParams,\n  ): Promise<WebAppsGetProcessModuleResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, baseAddress, options },\n      getProcessModuleOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List the threads in a process by its ID for a specific scaled-out instance in a web\n   * site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param options The options parameters.\n   */\n  private _listProcessThreads(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    options?: WebAppsListProcessThreadsOptionalParams,\n  ): Promise<WebAppsListProcessThreadsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, options },\n      listProcessThreadsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get public certificates for an app or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  private _listPublicCertificates(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListPublicCertificatesOptionalParams,\n  ): Promise<WebAppsListPublicCertificatesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listPublicCertificatesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get the named public certificate for an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param publicCertificateName Public certificate name.\n   * @param options The options parameters.\n   */\n  getPublicCertificate(\n    resourceGroupName: string,\n    name: string,\n    publicCertificateName: string,\n    options?: WebAppsGetPublicCertificateOptionalParams,\n  ): Promise<WebAppsGetPublicCertificateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, publicCertificateName, options },\n      getPublicCertificateOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a hostname binding for an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param publicCertificateName Public certificate name.\n   * @param publicCertificate Public certificate details. This is the JSON representation of a\n   *                          PublicCertificate object.\n   * @param options The options parameters.\n   */\n  createOrUpdatePublicCertificate(\n    resourceGroupName: string,\n    name: string,\n    publicCertificateName: string,\n    publicCertificate: PublicCertificate,\n    options?: WebAppsCreateOrUpdatePublicCertificateOptionalParams,\n  ): Promise<WebAppsCreateOrUpdatePublicCertificateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        publicCertificateName,\n        publicCertificate,\n        options,\n      },\n      createOrUpdatePublicCertificateOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Deletes a hostname binding for an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param publicCertificateName Public certificate name.\n   * @param options The options parameters.\n   */\n  deletePublicCertificate(\n    resourceGroupName: string,\n    name: string,\n    publicCertificateName: string,\n    options?: WebAppsDeletePublicCertificateOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, publicCertificateName, options },\n      deletePublicCertificateOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the publishing profile for an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param publishingProfileOptions Specifies publishingProfileOptions for publishing profile. For\n   *                                 example, use {\"format\": \"FileZilla3\"} to get a FileZilla publishing profile.\n   * @param options The options parameters.\n   */\n  listPublishingProfileXmlWithSecrets(\n    resourceGroupName: string,\n    name: string,\n    publishingProfileOptions: CsmPublishingProfileOptions,\n    options?: WebAppsListPublishingProfileXmlWithSecretsOptionalParams,\n  ): Promise<WebAppsListPublishingProfileXmlWithSecretsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, publishingProfileOptions, options },\n      listPublishingProfileXmlWithSecretsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Resets the configuration settings of the current slot if they were previously\n   * modified by calling the API with POST.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  resetProductionSlotConfig(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsResetProductionSlotConfigOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      resetProductionSlotConfigOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Restarts an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  restart(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsRestartOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      restartOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Restores an app from a backup blob in Azure Storage.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param request Information on restore request .\n   * @param options The options parameters.\n   */\n  async beginRestoreFromBackupBlob(\n    resourceGroupName: string,\n    name: string,\n    request: RestoreRequest,\n    options?: WebAppsRestoreFromBackupBlobOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, request, options },\n      spec: restoreFromBackupBlobOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Restores an app from a backup blob in Azure Storage.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param request Information on restore request .\n   * @param options The options parameters.\n   */\n  async beginRestoreFromBackupBlobAndWait(\n    resourceGroupName: string,\n    name: string,\n    request: RestoreRequest,\n    options?: WebAppsRestoreFromBackupBlobOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginRestoreFromBackupBlob(\n      resourceGroupName,\n      name,\n      request,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Restores a deleted web app to this web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param restoreRequest Deleted web app restore information.\n   * @param options The options parameters.\n   */\n  async beginRestoreFromDeletedApp(\n    resourceGroupName: string,\n    name: string,\n    restoreRequest: DeletedAppRestoreRequest,\n    options?: WebAppsRestoreFromDeletedAppOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, restoreRequest, options },\n      spec: restoreFromDeletedAppOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Restores a deleted web app to this web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param restoreRequest Deleted web app restore information.\n   * @param options The options parameters.\n   */\n  async beginRestoreFromDeletedAppAndWait(\n    resourceGroupName: string,\n    name: string,\n    restoreRequest: DeletedAppRestoreRequest,\n    options?: WebAppsRestoreFromDeletedAppOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginRestoreFromDeletedApp(\n      resourceGroupName,\n      name,\n      restoreRequest,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Restores a web app from a snapshot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param restoreRequest Snapshot restore settings. Snapshot information can be obtained by calling\n   *                       GetDeletedSites or GetSiteSnapshots API.\n   * @param options The options parameters.\n   */\n  async beginRestoreSnapshot(\n    resourceGroupName: string,\n    name: string,\n    restoreRequest: SnapshotRestoreRequest,\n    options?: WebAppsRestoreSnapshotOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, restoreRequest, options },\n      spec: restoreSnapshotOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Restores a web app from a snapshot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param restoreRequest Snapshot restore settings. Snapshot information can be obtained by calling\n   *                       GetDeletedSites or GetSiteSnapshots API.\n   * @param options The options parameters.\n   */\n  async beginRestoreSnapshotAndWait(\n    resourceGroupName: string,\n    name: string,\n    restoreRequest: SnapshotRestoreRequest,\n    options?: WebAppsRestoreSnapshotOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginRestoreSnapshot(\n      resourceGroupName,\n      name,\n      restoreRequest,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists all the site containers of a site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  private _listSiteContainers(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSiteContainersOptionalParams,\n  ): Promise<WebAppsListSiteContainersResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listSiteContainersOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a site container of a site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param containerName Site Container Name\n   * @param options The options parameters.\n   */\n  getSiteContainer(\n    resourceGroupName: string,\n    name: string,\n    containerName: string,\n    options?: WebAppsGetSiteContainerOptionalParams,\n  ): Promise<WebAppsGetSiteContainerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, containerName, options },\n      getSiteContainerOperationSpec,\n    );\n  }\n\n  /**\n   * Creates or Updates a site container for a site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param containerName Site Container Name\n   * @param request Container Entity\n   * @param options The options parameters.\n   */\n  createOrUpdateSiteContainer(\n    resourceGroupName: string,\n    name: string,\n    containerName: string,\n    request: SiteContainer,\n    options?: WebAppsCreateOrUpdateSiteContainerOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateSiteContainerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, containerName, request, options },\n      createOrUpdateSiteContainerOperationSpec,\n    );\n  }\n\n  /**\n   * Deletes a site container for a site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param containerName Site Container Name\n   * @param options The options parameters.\n   */\n  deleteSiteContainer(\n    resourceGroupName: string,\n    name: string,\n    containerName: string,\n    options?: WebAppsDeleteSiteContainerOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, containerName, options },\n      deleteSiteContainerOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get list of siteextensions for a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param options The options parameters.\n   */\n  private _listSiteExtensions(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSiteExtensionsOptionalParams,\n  ): Promise<WebAppsListSiteExtensionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listSiteExtensionsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get site extension information by its ID for a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param siteExtensionId Site extension name.\n   * @param options The options parameters.\n   */\n  getSiteExtension(\n    resourceGroupName: string,\n    name: string,\n    siteExtensionId: string,\n    options?: WebAppsGetSiteExtensionOptionalParams,\n  ): Promise<WebAppsGetSiteExtensionResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, siteExtensionId, options },\n      getSiteExtensionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Install site extension on a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param siteExtensionId Site extension name.\n   * @param options The options parameters.\n   */\n  async beginInstallSiteExtension(\n    resourceGroupName: string,\n    name: string,\n    siteExtensionId: string,\n    options?: WebAppsInstallSiteExtensionOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsInstallSiteExtensionResponse>,\n      WebAppsInstallSiteExtensionResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsInstallSiteExtensionResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, siteExtensionId, options },\n      spec: installSiteExtensionOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsInstallSiteExtensionResponse,\n      OperationState<WebAppsInstallSiteExtensionResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Install site extension on a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param siteExtensionId Site extension name.\n   * @param options The options parameters.\n   */\n  async beginInstallSiteExtensionAndWait(\n    resourceGroupName: string,\n    name: string,\n    siteExtensionId: string,\n    options?: WebAppsInstallSiteExtensionOptionalParams,\n  ): Promise<WebAppsInstallSiteExtensionResponse> {\n    const poller = await this.beginInstallSiteExtension(\n      resourceGroupName,\n      name,\n      siteExtensionId,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Remove a site extension from a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param siteExtensionId Site extension name.\n   * @param options The options parameters.\n   */\n  deleteSiteExtension(\n    resourceGroupName: string,\n    name: string,\n    siteExtensionId: string,\n    options?: WebAppsDeleteSiteExtensionOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, siteExtensionId, options },\n      deleteSiteExtensionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets an app's deployment slots.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  private _listSlots(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSlotsOptionalParams,\n  ): Promise<WebAppsListSlotsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listSlotsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the details of a web, mobile, or API app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. By default, this API returns the production slot.\n   * @param options The options parameters.\n   */\n  getSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetSlotOptionalParams,\n  ): Promise<WebAppsGetSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a new web, mobile, or API app in an existing resource group, or updates an\n   * existing app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Unique name of the app to create or update. To create or update a deployment slot, use\n   *             the {slot} parameter.\n   * @param slot Name of the deployment slot to create or update. By default, this API attempts to create\n   *             or modify the production slot.\n   * @param siteEnvelope A JSON representation of the app properties. See example.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    siteEnvelope: Site,\n    options?: WebAppsCreateOrUpdateSlotOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsCreateOrUpdateSlotResponse>,\n      WebAppsCreateOrUpdateSlotResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsCreateOrUpdateSlotResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, slot, siteEnvelope, options },\n      spec: createOrUpdateSlotOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsCreateOrUpdateSlotResponse,\n      OperationState<WebAppsCreateOrUpdateSlotResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Creates a new web, mobile, or API app in an existing resource group, or updates an\n   * existing app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Unique name of the app to create or update. To create or update a deployment slot, use\n   *             the {slot} parameter.\n   * @param slot Name of the deployment slot to create or update. By default, this API attempts to create\n   *             or modify the production slot.\n   * @param siteEnvelope A JSON representation of the app properties. See example.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateSlotAndWait(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    siteEnvelope: Site,\n    options?: WebAppsCreateOrUpdateSlotOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateSlotResponse> {\n    const poller = await this.beginCreateOrUpdateSlot(\n      resourceGroupName,\n      name,\n      slot,\n      siteEnvelope,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Deletes a web, mobile, or API app, or one of the deployment slots.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app to delete.\n   * @param slot Name of the deployment slot to delete. By default, the API deletes the production slot.\n   * @param options The options parameters.\n   */\n  deleteSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsDeleteSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      deleteSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a new web, mobile, or API app in an existing resource group, or updates an\n   * existing app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Unique name of the app to create or update. To create or update a deployment slot, use\n   *             the {slot} parameter.\n   * @param slot Name of the deployment slot to create or update. By default, this API attempts to create\n   *             or modify the production slot.\n   * @param siteEnvelope A JSON representation of the app properties. See example.\n   * @param options The options parameters.\n   */\n  updateSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    siteEnvelope: SitePatchResource,\n    options?: WebAppsUpdateSlotOptionalParams,\n  ): Promise<WebAppsUpdateSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, siteEnvelope, options },\n      updateSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Analyze a custom hostname.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param options The options parameters.\n   */\n  analyzeCustomHostnameSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsAnalyzeCustomHostnameSlotOptionalParams,\n  ): Promise<WebAppsAnalyzeCustomHostnameSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      analyzeCustomHostnameSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Applies the configuration settings from the target slot onto the current slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the source slot. If a slot is not specified, the production slot is used as the\n   *             source slot.\n   * @param slotSwapEntity JSON object that contains the target slot name. See example.\n   * @param options The options parameters.\n   */\n  applySlotConfigurationSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    slotSwapEntity: CsmSlotEntity,\n    options?: WebAppsApplySlotConfigurationSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, slotSwapEntity, options },\n      applySlotConfigurationSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a backup of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will create a backup\n   *             for the production slot.\n   * @param request Backup configuration. You can use the JSON response from the POST action as input\n   *                here.\n   * @param options The options parameters.\n   */\n  backupSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    request: BackupRequest,\n    options?: WebAppsBackupSlotOptionalParams,\n  ): Promise<WebAppsBackupSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, request, options },\n      backupSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets existing backups of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get backups of the\n   *             production slot.\n   * @param options The options parameters.\n   */\n  private _listBackupsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListBackupsSlotOptionalParams,\n  ): Promise<WebAppsListBackupsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listBackupsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a backup of an app by its ID.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param backupId ID of the backup.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get a backup of\n   *             the production slot.\n   * @param options The options parameters.\n   */\n  getBackupStatusSlot(\n    resourceGroupName: string,\n    name: string,\n    backupId: string,\n    slot: string,\n    options?: WebAppsGetBackupStatusSlotOptionalParams,\n  ): Promise<WebAppsGetBackupStatusSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, backupId, slot, options },\n      getBackupStatusSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Deletes a backup of an app by its ID.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param backupId ID of the backup.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will delete a backup of\n   *             the production slot.\n   * @param options The options parameters.\n   */\n  deleteBackupSlot(\n    resourceGroupName: string,\n    name: string,\n    backupId: string,\n    slot: string,\n    options?: WebAppsDeleteBackupSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, backupId, slot, options },\n      deleteBackupSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets status of a web app backup that may be in progress, including secrets\n   * associated with the backup, such as the Azure Storage SAS URL. Also can be used to update the SAS\n   * URL for the backup if a new URL is passed in the request body.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param backupId ID of backup.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param request Information on backup request.\n   * @param options The options parameters.\n   */\n  listBackupStatusSecretsSlot(\n    resourceGroupName: string,\n    name: string,\n    backupId: string,\n    slot: string,\n    request: BackupRequest,\n    options?: WebAppsListBackupStatusSecretsSlotOptionalParams,\n  ): Promise<WebAppsListBackupStatusSecretsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, backupId, slot, request, options },\n      listBackupStatusSecretsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Restores a specific backup to another app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param backupId ID of the backup.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will restore a backup\n   *             of the production slot.\n   * @param request Information on restore request .\n   * @param options The options parameters.\n   */\n  async beginRestoreSlot(\n    resourceGroupName: string,\n    name: string,\n    backupId: string,\n    slot: string,\n    request: RestoreRequest,\n    options?: WebAppsRestoreSlotOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, backupId, slot, request, options },\n      spec: restoreSlotOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Restores a specific backup to another app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param backupId ID of the backup.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will restore a backup\n   *             of the production slot.\n   * @param request Information on restore request .\n   * @param options The options parameters.\n   */\n  async beginRestoreSlotAndWait(\n    resourceGroupName: string,\n    name: string,\n    backupId: string,\n    slot: string,\n    request: RestoreRequest,\n    options?: WebAppsRestoreSlotOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginRestoreSlot(\n      resourceGroupName,\n      name,\n      backupId,\n      slot,\n      request,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Returns whether Scm basic auth is allowed and whether Ftp is allowed for a given\n   * site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot\n   * @param options The options parameters.\n   */\n  private _listBasicPublishingCredentialsPoliciesSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListBasicPublishingCredentialsPoliciesSlotOptionalParams,\n  ): Promise<WebAppsListBasicPublishingCredentialsPoliciesSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listBasicPublishingCredentialsPoliciesSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Returns whether FTP is allowed on the site or not.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot\n   * @param options The options parameters.\n   */\n  getFtpAllowedSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetFtpAllowedSlotOptionalParams,\n  ): Promise<WebAppsGetFtpAllowedSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getFtpAllowedSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates whether FTP is allowed on the site or not.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot\n   * @param csmPublishingAccessPoliciesEntity Publishing Credentials Policies parameters.\n   * @param options The options parameters.\n   */\n  updateFtpAllowedSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    csmPublishingAccessPoliciesEntity: CsmPublishingCredentialsPoliciesEntity,\n    options?: WebAppsUpdateFtpAllowedSlotOptionalParams,\n  ): Promise<WebAppsUpdateFtpAllowedSlotResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        slot,\n        csmPublishingAccessPoliciesEntity,\n        options,\n      },\n      updateFtpAllowedSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Returns whether Scm basic auth is allowed on the site or not.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot\n   * @param options The options parameters.\n   */\n  getScmAllowedSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetScmAllowedSlotOptionalParams,\n  ): Promise<WebAppsGetScmAllowedSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getScmAllowedSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates whether user publishing credentials are allowed on the site or not.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot\n   * @param csmPublishingAccessPoliciesEntity Publishing Credentials Policies parameters.\n   * @param options The options parameters.\n   */\n  updateScmAllowedSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    csmPublishingAccessPoliciesEntity: CsmPublishingCredentialsPoliciesEntity,\n    options?: WebAppsUpdateScmAllowedSlotOptionalParams,\n  ): Promise<WebAppsUpdateScmAllowedSlotResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        slot,\n        csmPublishingAccessPoliciesEntity,\n        options,\n      },\n      updateScmAllowedSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List the configurations of an app\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will return\n   *             configuration for the production slot.\n   * @param options The options parameters.\n   */\n  private _listConfigurationsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListConfigurationsSlotOptionalParams,\n  ): Promise<WebAppsListConfigurationsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listConfigurationsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Replaces the application settings of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will update the\n   *             application settings for the production slot.\n   * @param appSettings Application settings of the app.\n   * @param options The options parameters.\n   */\n  updateApplicationSettingsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    appSettings: StringDictionary,\n    options?: WebAppsUpdateApplicationSettingsSlotOptionalParams,\n  ): Promise<WebAppsUpdateApplicationSettingsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, appSettings, options },\n      updateApplicationSettingsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the application settings of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the\n   *             application settings for the production slot.\n   * @param options The options parameters.\n   */\n  listApplicationSettingsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListApplicationSettingsSlotOptionalParams,\n  ): Promise<WebAppsListApplicationSettingsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listApplicationSettingsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates the Authentication / Authorization settings associated with web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param siteAuthSettings Auth settings associated with web app.\n   * @param options The options parameters.\n   */\n  updateAuthSettingsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    siteAuthSettings: SiteAuthSettings,\n    options?: WebAppsUpdateAuthSettingsSlotOptionalParams,\n  ): Promise<WebAppsUpdateAuthSettingsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, siteAuthSettings, options },\n      updateAuthSettingsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the Authentication/Authorization settings of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the settings\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  getAuthSettingsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetAuthSettingsSlotOptionalParams,\n  ): Promise<WebAppsGetAuthSettingsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getAuthSettingsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Gets site's Authentication / Authorization settings for apps via the V2 format\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the settings\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  getAuthSettingsV2WithoutSecretsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetAuthSettingsV2WithoutSecretsSlotOptionalParams,\n  ): Promise<WebAppsGetAuthSettingsV2WithoutSecretsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getAuthSettingsV2WithoutSecretsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates site's Authentication / Authorization settings for apps via the V2 format\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param siteAuthSettingsV2 Auth settings associated with web app.\n   * @param options The options parameters.\n   */\n  updateAuthSettingsV2Slot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    siteAuthSettingsV2: SiteAuthSettingsV2,\n    options?: WebAppsUpdateAuthSettingsV2SlotOptionalParams,\n  ): Promise<WebAppsUpdateAuthSettingsV2SlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, siteAuthSettingsV2, options },\n      updateAuthSettingsV2SlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets site's Authentication / Authorization settings for apps via the V2 format\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the settings\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  getAuthSettingsV2Slot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetAuthSettingsV2SlotOptionalParams,\n  ): Promise<WebAppsGetAuthSettingsV2SlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getAuthSettingsV2SlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates the Azure storage account configurations of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will update the Azure\n   *             storage account configurations for the production slot.\n   * @param azureStorageAccounts Azure storage accounts of the app.\n   * @param options The options parameters.\n   */\n  updateAzureStorageAccountsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    azureStorageAccounts: AzureStoragePropertyDictionaryResource,\n    options?: WebAppsUpdateAzureStorageAccountsSlotOptionalParams,\n  ): Promise<WebAppsUpdateAzureStorageAccountsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, azureStorageAccounts, options },\n      updateAzureStorageAccountsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the Azure storage account configurations of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will update the Azure\n   *             storage account configurations for the production slot.\n   * @param options The options parameters.\n   */\n  listAzureStorageAccountsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListAzureStorageAccountsSlotOptionalParams,\n  ): Promise<WebAppsListAzureStorageAccountsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listAzureStorageAccountsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates the backup configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will update the backup\n   *             configuration for the production slot.\n   * @param request Edited backup configuration.\n   * @param options The options parameters.\n   */\n  updateBackupConfigurationSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    request: BackupRequest,\n    options?: WebAppsUpdateBackupConfigurationSlotOptionalParams,\n  ): Promise<WebAppsUpdateBackupConfigurationSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, request, options },\n      updateBackupConfigurationSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Deletes the backup configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the backup\n   *             configuration for the production slot.\n   * @param options The options parameters.\n   */\n  deleteBackupConfigurationSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsDeleteBackupConfigurationSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      deleteBackupConfigurationSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the backup configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the backup\n   *             configuration for the production slot.\n   * @param options The options parameters.\n   */\n  getBackupConfigurationSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetBackupConfigurationSlotOptionalParams,\n  ): Promise<WebAppsGetBackupConfigurationSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getBackupConfigurationSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the config reference app settings and status of an app\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot\n   * @param options The options parameters.\n   */\n  private _getAppSettingsKeyVaultReferencesSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetAppSettingsKeyVaultReferencesSlotOptionalParams,\n  ): Promise<WebAppsGetAppSettingsKeyVaultReferencesSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getAppSettingsKeyVaultReferencesSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the config reference and status of an app\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param appSettingKey App Setting key name.\n   * @param slot\n   * @param options The options parameters.\n   */\n  getAppSettingKeyVaultReferenceSlot(\n    resourceGroupName: string,\n    name: string,\n    appSettingKey: string,\n    slot: string,\n    options?: WebAppsGetAppSettingKeyVaultReferenceSlotOptionalParams,\n  ): Promise<WebAppsGetAppSettingKeyVaultReferenceSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, appSettingKey, slot, options },\n      getAppSettingKeyVaultReferenceSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the config reference app settings and status of an app\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot\n   * @param options The options parameters.\n   */\n  private _getSiteConnectionStringKeyVaultReferencesSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetSiteConnectionStringKeyVaultReferencesSlotOptionalParams,\n  ): Promise<WebAppsGetSiteConnectionStringKeyVaultReferencesSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getSiteConnectionStringKeyVaultReferencesSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the config reference and status of an app\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param connectionStringKey\n   * @param slot\n   * @param options The options parameters.\n   */\n  getSiteConnectionStringKeyVaultReferenceSlot(\n    resourceGroupName: string,\n    name: string,\n    connectionStringKey: string,\n    slot: string,\n    options?: WebAppsGetSiteConnectionStringKeyVaultReferenceSlotOptionalParams,\n  ): Promise<WebAppsGetSiteConnectionStringKeyVaultReferenceSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, connectionStringKey, slot, options },\n      getSiteConnectionStringKeyVaultReferenceSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Replaces the connection strings of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will update the\n   *             connection settings for the production slot.\n   * @param connectionStrings Connection strings of the app or deployment slot. See example.\n   * @param options The options parameters.\n   */\n  updateConnectionStringsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    connectionStrings: ConnectionStringDictionary,\n    options?: WebAppsUpdateConnectionStringsSlotOptionalParams,\n  ): Promise<WebAppsUpdateConnectionStringsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, connectionStrings, options },\n      updateConnectionStringsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the connection strings of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the connection\n   *             settings for the production slot.\n   * @param options The options parameters.\n   */\n  listConnectionStringsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListConnectionStringsSlotOptionalParams,\n  ): Promise<WebAppsListConnectionStringsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listConnectionStringsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the logging configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the logging\n   *             configuration for the production slot.\n   * @param options The options parameters.\n   */\n  getDiagnosticLogsConfigurationSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetDiagnosticLogsConfigurationSlotOptionalParams,\n  ): Promise<WebAppsGetDiagnosticLogsConfigurationSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getDiagnosticLogsConfigurationSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates the logging configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will update the logging\n   *             configuration for the production slot.\n   * @param siteLogsConfig A SiteLogsConfig JSON object that contains the logging configuration to change\n   *                       in the \"properties\" property.\n   * @param options The options parameters.\n   */\n  updateDiagnosticLogsConfigSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    siteLogsConfig: SiteLogsConfig,\n    options?: WebAppsUpdateDiagnosticLogsConfigSlotOptionalParams,\n  ): Promise<WebAppsUpdateDiagnosticLogsConfigSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, siteLogsConfig, options },\n      updateDiagnosticLogsConfigSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Replaces the metadata of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will update the\n   *             metadata for the production slot.\n   * @param metadata Edited metadata of the app or deployment slot. See example.\n   * @param options The options parameters.\n   */\n  updateMetadataSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    metadata: StringDictionary,\n    options?: WebAppsUpdateMetadataSlotOptionalParams,\n  ): Promise<WebAppsUpdateMetadataSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, metadata, options },\n      updateMetadataSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the metadata of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the metadata\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  listMetadataSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListMetadataSlotOptionalParams,\n  ): Promise<WebAppsListMetadataSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listMetadataSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the Git/FTP publishing credentials of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the publishing\n   *             credentials for the production slot.\n   * @param options The options parameters.\n   */\n  async beginListPublishingCredentialsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListPublishingCredentialsSlotOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsListPublishingCredentialsSlotResponse>,\n      WebAppsListPublishingCredentialsSlotResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsListPublishingCredentialsSlotResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, slot, options },\n      spec: listPublishingCredentialsSlotOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsListPublishingCredentialsSlotResponse,\n      OperationState<WebAppsListPublishingCredentialsSlotResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Gets the Git/FTP publishing credentials of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the publishing\n   *             credentials for the production slot.\n   * @param options The options parameters.\n   */\n  async beginListPublishingCredentialsSlotAndWait(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListPublishingCredentialsSlotOptionalParams,\n  ): Promise<WebAppsListPublishingCredentialsSlotResponse> {\n    const poller = await this.beginListPublishingCredentialsSlot(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Updates the Push settings associated with web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param pushSettings Push settings associated with web app.\n   * @param options The options parameters.\n   */\n  updateSitePushSettingsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    pushSettings: PushSettings,\n    options?: WebAppsUpdateSitePushSettingsSlotOptionalParams,\n  ): Promise<WebAppsUpdateSitePushSettingsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, pushSettings, options },\n      updateSitePushSettingsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the Push settings associated with web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param options The options parameters.\n   */\n  listSitePushSettingsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSitePushSettingsSlotOptionalParams,\n  ): Promise<WebAppsListSitePushSettingsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listSitePushSettingsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the configuration of an app, such as platform version and bitness, default\n   * documents, virtual applications, Always On, etc.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will return\n   *             configuration for the production slot.\n   * @param options The options parameters.\n   */\n  getConfigurationSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetConfigurationSlotOptionalParams,\n  ): Promise<WebAppsGetConfigurationSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getConfigurationSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates the configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will update\n   *             configuration for the production slot.\n   * @param siteConfig JSON representation of a SiteConfig object. See example.\n   * @param options The options parameters.\n   */\n  createOrUpdateConfigurationSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    siteConfig: SiteConfigResource,\n    options?: WebAppsCreateOrUpdateConfigurationSlotOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateConfigurationSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, siteConfig, options },\n      createOrUpdateConfigurationSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates the configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will update\n   *             configuration for the production slot.\n   * @param siteConfig JSON representation of a SiteConfig object. See example.\n   * @param options The options parameters.\n   */\n  updateConfigurationSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    siteConfig: SiteConfigResource,\n    options?: WebAppsUpdateConfigurationSlotOptionalParams,\n  ): Promise<WebAppsUpdateConfigurationSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, siteConfig, options },\n      updateConfigurationSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a list of web app configuration snapshots identifiers. Each element of the list\n   * contains a timestamp and the ID of the snapshot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will return\n   *             configuration for the production slot.\n   * @param options The options parameters.\n   */\n  private _listConfigurationSnapshotInfoSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListConfigurationSnapshotInfoSlotOptionalParams,\n  ): Promise<WebAppsListConfigurationSnapshotInfoSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listConfigurationSnapshotInfoSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a snapshot of the configuration of an app at a previous point in time.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param snapshotId The ID of the snapshot to read.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will return\n   *             configuration for the production slot.\n   * @param options The options parameters.\n   */\n  getConfigurationSnapshotSlot(\n    resourceGroupName: string,\n    name: string,\n    snapshotId: string,\n    slot: string,\n    options?: WebAppsGetConfigurationSnapshotSlotOptionalParams,\n  ): Promise<WebAppsGetConfigurationSnapshotSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, snapshotId, slot, options },\n      getConfigurationSnapshotSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Reverts the configuration of an app to a previous snapshot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param snapshotId The ID of the snapshot to read.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will return\n   *             configuration for the production slot.\n   * @param options The options parameters.\n   */\n  recoverSiteConfigurationSnapshotSlot(\n    resourceGroupName: string,\n    name: string,\n    snapshotId: string,\n    slot: string,\n    options?: WebAppsRecoverSiteConfigurationSnapshotSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, snapshotId, slot, options },\n      recoverSiteConfigurationSnapshotSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the last lines of docker logs for the given site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param options The options parameters.\n   */\n  getWebSiteContainerLogsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetWebSiteContainerLogsSlotOptionalParams,\n  ): Promise<WebAppsGetWebSiteContainerLogsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getWebSiteContainerLogsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the ZIP archived docker log files for the given site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param options The options parameters.\n   */\n  getContainerLogsZipSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetContainerLogsZipSlotOptionalParams,\n  ): Promise<WebAppsGetContainerLogsZipSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getContainerLogsZipSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List continuous web jobs for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  private _listContinuousWebJobsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListContinuousWebJobsSlotOptionalParams,\n  ): Promise<WebAppsListContinuousWebJobsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listContinuousWebJobsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a continuous web job by its ID for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  getContinuousWebJobSlot(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    slot: string,\n    options?: WebAppsGetContinuousWebJobSlotOptionalParams,\n  ): Promise<WebAppsGetContinuousWebJobSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, slot, options },\n      getContinuousWebJobSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Delete a continuous web job by its ID for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  deleteContinuousWebJobSlot(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    slot: string,\n    options?: WebAppsDeleteContinuousWebJobSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, slot, options },\n      deleteContinuousWebJobSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Start a continuous web job for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  startContinuousWebJobSlot(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    slot: string,\n    options?: WebAppsStartContinuousWebJobSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, slot, options },\n      startContinuousWebJobSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Stop a continuous web job for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  stopContinuousWebJobSlot(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    slot: string,\n    options?: WebAppsStopContinuousWebJobSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, slot, options },\n      stopContinuousWebJobSlotOperationSpec,\n    );\n  }\n\n  /**\n   * List deployment statuses for an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the deployment\n   *             status for the production slot.\n   * @param options The options parameters.\n   */\n  private _listSlotSiteDeploymentStatusesSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSlotSiteDeploymentStatusesSlotOptionalParams,\n  ): Promise<WebAppsListSlotSiteDeploymentStatusesSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listSlotSiteDeploymentStatusesSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Gets the deployment status for an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the deployment\n   *             status for the production slot.\n   * @param deploymentStatusId GUID of the deployment operation.\n   * @param options The options parameters.\n   */\n  async beginGetSlotSiteDeploymentStatusSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    deploymentStatusId: string,\n    options?: WebAppsGetSlotSiteDeploymentStatusSlotOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsGetSlotSiteDeploymentStatusSlotResponse>,\n      WebAppsGetSlotSiteDeploymentStatusSlotResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsGetSlotSiteDeploymentStatusSlotResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, slot, deploymentStatusId, options },\n      spec: getSlotSiteDeploymentStatusSlotOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsGetSlotSiteDeploymentStatusSlotResponse,\n      OperationState<WebAppsGetSlotSiteDeploymentStatusSlotResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Gets the deployment status for an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the deployment\n   *             status for the production slot.\n   * @param deploymentStatusId GUID of the deployment operation.\n   * @param options The options parameters.\n   */\n  async beginGetSlotSiteDeploymentStatusSlotAndWait(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    deploymentStatusId: string,\n    options?: WebAppsGetSlotSiteDeploymentStatusSlotOptionalParams,\n  ): Promise<WebAppsGetSlotSiteDeploymentStatusSlotResponse> {\n    const poller = await this.beginGetSlotSiteDeploymentStatusSlot(\n      resourceGroupName,\n      name,\n      slot,\n      deploymentStatusId,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for List deployments for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param options The options parameters.\n   */\n  private _listDeploymentsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListDeploymentsSlotOptionalParams,\n  ): Promise<WebAppsListDeploymentsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listDeploymentsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get a deployment by its ID for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param id Deployment ID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API gets a deployment for\n   *             the production slot.\n   * @param options The options parameters.\n   */\n  getDeploymentSlot(\n    resourceGroupName: string,\n    name: string,\n    id: string,\n    slot: string,\n    options?: WebAppsGetDeploymentSlotOptionalParams,\n  ): Promise<WebAppsGetDeploymentSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, id, slot, options },\n      getDeploymentSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Create a deployment for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param id ID of an existing deployment.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API creates a deployment\n   *             for the production slot.\n   * @param deployment Deployment details.\n   * @param options The options parameters.\n   */\n  createDeploymentSlot(\n    resourceGroupName: string,\n    name: string,\n    id: string,\n    slot: string,\n    deployment: Deployment,\n    options?: WebAppsCreateDeploymentSlotOptionalParams,\n  ): Promise<WebAppsCreateDeploymentSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, id, slot, deployment, options },\n      createDeploymentSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Delete a deployment by its ID for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param id Deployment ID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  deleteDeploymentSlot(\n    resourceGroupName: string,\n    name: string,\n    id: string,\n    slot: string,\n    options?: WebAppsDeleteDeploymentSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, id, slot, options },\n      deleteDeploymentSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List deployment log for specific deployment for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param id The ID of a specific deployment. This is the value of the name property in the JSON\n   *           response from \"GET /api/sites/{siteName}/deployments\".\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param options The options parameters.\n   */\n  listDeploymentLogSlot(\n    resourceGroupName: string,\n    name: string,\n    id: string,\n    slot: string,\n    options?: WebAppsListDeploymentLogSlotOptionalParams,\n  ): Promise<WebAppsListDeploymentLogSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, id, slot, options },\n      listDeploymentLogSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Discovers an existing app backup that can be restored from a blob in Azure storage.\n   * Use this to get information about the databases stored in a backup.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will perform discovery\n   *             for the production slot.\n   * @param request A RestoreRequest object that includes Azure storage URL and blog name for discovery\n   *                of backup.\n   * @param options The options parameters.\n   */\n  discoverBackupSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    request: RestoreRequest,\n    options?: WebAppsDiscoverBackupSlotOptionalParams,\n  ): Promise<WebAppsDiscoverBackupSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, request, options },\n      discoverBackupSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Lists ownership identifiers for domain associated with web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  private _listDomainOwnershipIdentifiersSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListDomainOwnershipIdentifiersSlotOptionalParams,\n  ): Promise<WebAppsListDomainOwnershipIdentifiersSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listDomainOwnershipIdentifiersSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get domain ownership identifier for web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param domainOwnershipIdentifierName Name of domain ownership identifier.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  getDomainOwnershipIdentifierSlot(\n    resourceGroupName: string,\n    name: string,\n    domainOwnershipIdentifierName: string,\n    slot: string,\n    options?: WebAppsGetDomainOwnershipIdentifierSlotOptionalParams,\n  ): Promise<WebAppsGetDomainOwnershipIdentifierSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, domainOwnershipIdentifierName, slot, options },\n      getDomainOwnershipIdentifierSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a domain ownership identifier for web app, or updates an existing ownership\n   * identifier.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param domainOwnershipIdentifierName Name of domain ownership identifier.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding\n   *             for the production slot.\n   * @param domainOwnershipIdentifier A JSON representation of the domain ownership properties.\n   * @param options The options parameters.\n   */\n  createOrUpdateDomainOwnershipIdentifierSlot(\n    resourceGroupName: string,\n    name: string,\n    domainOwnershipIdentifierName: string,\n    slot: string,\n    domainOwnershipIdentifier: Identifier,\n    options?: WebAppsCreateOrUpdateDomainOwnershipIdentifierSlotOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateDomainOwnershipIdentifierSlotResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        domainOwnershipIdentifierName,\n        slot,\n        domainOwnershipIdentifier,\n        options,\n      },\n      createOrUpdateDomainOwnershipIdentifierSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Deletes a domain ownership identifier for a web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param domainOwnershipIdentifierName Name of domain ownership identifier.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  deleteDomainOwnershipIdentifierSlot(\n    resourceGroupName: string,\n    name: string,\n    domainOwnershipIdentifierName: string,\n    slot: string,\n    options?: WebAppsDeleteDomainOwnershipIdentifierSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, domainOwnershipIdentifierName, slot, options },\n      deleteDomainOwnershipIdentifierSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a domain ownership identifier for web app, or updates an existing ownership\n   * identifier.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param domainOwnershipIdentifierName Name of domain ownership identifier.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding\n   *             for the production slot.\n   * @param domainOwnershipIdentifier A JSON representation of the domain ownership properties.\n   * @param options The options parameters.\n   */\n  updateDomainOwnershipIdentifierSlot(\n    resourceGroupName: string,\n    name: string,\n    domainOwnershipIdentifierName: string,\n    slot: string,\n    domainOwnershipIdentifier: Identifier,\n    options?: WebAppsUpdateDomainOwnershipIdentifierSlotOptionalParams,\n  ): Promise<WebAppsUpdateDomainOwnershipIdentifierSlotResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        domainOwnershipIdentifierName,\n        slot,\n        domainOwnershipIdentifier,\n        options,\n      },\n      updateDomainOwnershipIdentifierSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get the status of the last MSDeploy operation.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param options The options parameters.\n   */\n  getMSDeployStatusSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetMSDeployStatusSlotOptionalParams,\n  ): Promise<WebAppsGetMSDeployStatusSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getMSDeployStatusSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Invoke the MSDeploy web app extension.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param mSDeploy Details of MSDeploy operation\n   * @param options The options parameters.\n   */\n  async beginCreateMSDeployOperationSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    mSDeploy: MSDeploy,\n    options?: WebAppsCreateMSDeployOperationSlotOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsCreateMSDeployOperationSlotResponse>,\n      WebAppsCreateMSDeployOperationSlotResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsCreateMSDeployOperationSlotResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, slot, mSDeploy, options },\n      spec: createMSDeployOperationSlotOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsCreateMSDeployOperationSlotResponse,\n      OperationState<WebAppsCreateMSDeployOperationSlotResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Invoke the MSDeploy web app extension.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param mSDeploy Details of MSDeploy operation\n   * @param options The options parameters.\n   */\n  async beginCreateMSDeployOperationSlotAndWait(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    mSDeploy: MSDeploy,\n    options?: WebAppsCreateMSDeployOperationSlotOptionalParams,\n  ): Promise<WebAppsCreateMSDeployOperationSlotResponse> {\n    const poller = await this.beginCreateMSDeployOperationSlot(\n      resourceGroupName,\n      name,\n      slot,\n      mSDeploy,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Get the MSDeploy Log for the last MSDeploy operation.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param options The options parameters.\n   */\n  getMSDeployLogSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetMSDeployLogSlotOptionalParams,\n  ): Promise<WebAppsGetMSDeployLogSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getMSDeployLogSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List the functions for a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot.\n   * @param options The options parameters.\n   */\n  private _listInstanceFunctionsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListInstanceFunctionsSlotOptionalParams,\n  ): Promise<WebAppsListInstanceFunctionsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listInstanceFunctionsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Fetch a short lived token that can be exchanged for a master key.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param options The options parameters.\n   */\n  getFunctionsAdminTokenSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetFunctionsAdminTokenSlotOptionalParams,\n  ): Promise<WebAppsGetFunctionsAdminTokenSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getFunctionsAdminTokenSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get function information by its ID for web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param functionName Function name.\n   * @param slot Name of the deployment slot.\n   * @param options The options parameters.\n   */\n  getInstanceFunctionSlot(\n    resourceGroupName: string,\n    name: string,\n    functionName: string,\n    slot: string,\n    options?: WebAppsGetInstanceFunctionSlotOptionalParams,\n  ): Promise<WebAppsGetInstanceFunctionSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, functionName, slot, options },\n      getInstanceFunctionSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Create function for web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param functionName Function name.\n   * @param slot Name of the deployment slot.\n   * @param functionEnvelope Function details.\n   * @param options The options parameters.\n   */\n  async beginCreateInstanceFunctionSlot(\n    resourceGroupName: string,\n    name: string,\n    functionName: string,\n    slot: string,\n    functionEnvelope: FunctionEnvelope,\n    options?: WebAppsCreateInstanceFunctionSlotOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsCreateInstanceFunctionSlotResponse>,\n      WebAppsCreateInstanceFunctionSlotResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsCreateInstanceFunctionSlotResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        name,\n        functionName,\n        slot,\n        functionEnvelope,\n        options,\n      },\n      spec: createInstanceFunctionSlotOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsCreateInstanceFunctionSlotResponse,\n      OperationState<WebAppsCreateInstanceFunctionSlotResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Create function for web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param functionName Function name.\n   * @param slot Name of the deployment slot.\n   * @param functionEnvelope Function details.\n   * @param options The options parameters.\n   */\n  async beginCreateInstanceFunctionSlotAndWait(\n    resourceGroupName: string,\n    name: string,\n    functionName: string,\n    slot: string,\n    functionEnvelope: FunctionEnvelope,\n    options?: WebAppsCreateInstanceFunctionSlotOptionalParams,\n  ): Promise<WebAppsCreateInstanceFunctionSlotResponse> {\n    const poller = await this.beginCreateInstanceFunctionSlot(\n      resourceGroupName,\n      name,\n      functionName,\n      slot,\n      functionEnvelope,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Delete a function for web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param functionName Function name.\n   * @param slot Name of the deployment slot.\n   * @param options The options parameters.\n   */\n  deleteInstanceFunctionSlot(\n    resourceGroupName: string,\n    name: string,\n    functionName: string,\n    slot: string,\n    options?: WebAppsDeleteInstanceFunctionSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, functionName, slot, options },\n      deleteInstanceFunctionSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Add or update a function secret.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param functionName The name of the function.\n   * @param keyName The name of the key.\n   * @param slot Name of the deployment slot.\n   * @param key The key to create or update\n   * @param options The options parameters.\n   */\n  createOrUpdateFunctionSecretSlot(\n    resourceGroupName: string,\n    name: string,\n    functionName: string,\n    keyName: string,\n    slot: string,\n    key: KeyInfo,\n    options?: WebAppsCreateOrUpdateFunctionSecretSlotOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateFunctionSecretSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, functionName, keyName, slot, key, options },\n      createOrUpdateFunctionSecretSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Delete a function secret.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param functionName The name of the function.\n   * @param keyName The name of the key.\n   * @param slot Name of the deployment slot.\n   * @param options The options parameters.\n   */\n  deleteFunctionSecretSlot(\n    resourceGroupName: string,\n    name: string,\n    functionName: string,\n    keyName: string,\n    slot: string,\n    options?: WebAppsDeleteFunctionSecretSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, functionName, keyName, slot, options },\n      deleteFunctionSecretSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get function keys for a function in a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param functionName Function name.\n   * @param slot Name of the deployment slot.\n   * @param options The options parameters.\n   */\n  listFunctionKeysSlot(\n    resourceGroupName: string,\n    name: string,\n    functionName: string,\n    slot: string,\n    options?: WebAppsListFunctionKeysSlotOptionalParams,\n  ): Promise<WebAppsListFunctionKeysSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, functionName, slot, options },\n      listFunctionKeysSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get function secrets for a function in a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param functionName Function name.\n   * @param slot Name of the deployment slot.\n   * @param options The options parameters.\n   */\n  listFunctionSecretsSlot(\n    resourceGroupName: string,\n    name: string,\n    functionName: string,\n    slot: string,\n    options?: WebAppsListFunctionSecretsSlotOptionalParams,\n  ): Promise<WebAppsListFunctionSecretsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, functionName, slot, options },\n      listFunctionSecretsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get host secrets for a function app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot.\n   * @param options The options parameters.\n   */\n  listHostKeysSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListHostKeysSlotOptionalParams,\n  ): Promise<WebAppsListHostKeysSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listHostKeysSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for This is to allow calling via powershell and ARM template.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot.\n   * @param options The options parameters.\n   */\n  listSyncStatusSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSyncStatusSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listSyncStatusSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Syncs function trigger metadata to the management database\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot.\n   * @param options The options parameters.\n   */\n  syncFunctionsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsSyncFunctionsSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      syncFunctionsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Add or update a host level secret.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param keyType The type of host key.\n   * @param keyName The name of the key.\n   * @param slot Name of the deployment slot.\n   * @param key The key to create or update\n   * @param options The options parameters.\n   */\n  createOrUpdateHostSecretSlot(\n    resourceGroupName: string,\n    name: string,\n    keyType: string,\n    keyName: string,\n    slot: string,\n    key: KeyInfo,\n    options?: WebAppsCreateOrUpdateHostSecretSlotOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateHostSecretSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, keyType, keyName, slot, key, options },\n      createOrUpdateHostSecretSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Delete a host level secret.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param keyType The type of host key.\n   * @param keyName The name of the key.\n   * @param slot Name of the deployment slot.\n   * @param options The options parameters.\n   */\n  deleteHostSecretSlot(\n    resourceGroupName: string,\n    name: string,\n    keyType: string,\n    keyName: string,\n    slot: string,\n    options?: WebAppsDeleteHostSecretSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, keyType, keyName, slot, options },\n      deleteHostSecretSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get hostname bindings for an app or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API gets hostname bindings\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  private _listHostNameBindingsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListHostNameBindingsSlotOptionalParams,\n  ): Promise<WebAppsListHostNameBindingsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listHostNameBindingsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get the named hostname binding for an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API the named binding for\n   *             the production slot.\n   * @param hostName Hostname in the hostname binding.\n   * @param options The options parameters.\n   */\n  getHostNameBindingSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    hostName: string,\n    options?: WebAppsGetHostNameBindingSlotOptionalParams,\n  ): Promise<WebAppsGetHostNameBindingSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, hostName, options },\n      getHostNameBindingSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a hostname binding for an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param hostName Hostname in the hostname binding.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will create a binding\n   *             for the production slot.\n   * @param hostNameBinding Binding details. This is the JSON representation of a HostNameBinding object.\n   * @param options The options parameters.\n   */\n  createOrUpdateHostNameBindingSlot(\n    resourceGroupName: string,\n    name: string,\n    hostName: string,\n    slot: string,\n    hostNameBinding: HostNameBinding,\n    options?: WebAppsCreateOrUpdateHostNameBindingSlotOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateHostNameBindingSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, hostName, slot, hostNameBinding, options },\n      createOrUpdateHostNameBindingSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Deletes a hostname binding for an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding\n   *             for the production slot.\n   * @param hostName Hostname in the hostname binding.\n   * @param options The options parameters.\n   */\n  deleteHostNameBindingSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    hostName: string,\n    options?: WebAppsDeleteHostNameBindingSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, hostName, options },\n      deleteHostNameBindingSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Retrieves a specific Service Bus Hybrid Connection used by this Web App.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param namespaceName The namespace for this hybrid connection.\n   * @param relayName The relay name for this hybrid connection.\n   * @param slot The name of the slot for the web app.\n   * @param options The options parameters.\n   */\n  getHybridConnectionSlot(\n    resourceGroupName: string,\n    name: string,\n    namespaceName: string,\n    relayName: string,\n    slot: string,\n    options?: WebAppsGetHybridConnectionSlotOptionalParams,\n  ): Promise<WebAppsGetHybridConnectionSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, namespaceName, relayName, slot, options },\n      getHybridConnectionSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a new Hybrid Connection using a Service Bus relay.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param namespaceName The namespace for this hybrid connection.\n   * @param relayName The relay name for this hybrid connection.\n   * @param slot The name of the slot for the web app.\n   * @param connectionEnvelope The details of the hybrid connection.\n   * @param options The options parameters.\n   */\n  createOrUpdateHybridConnectionSlot(\n    resourceGroupName: string,\n    name: string,\n    namespaceName: string,\n    relayName: string,\n    slot: string,\n    connectionEnvelope: HybridConnection,\n    options?: WebAppsCreateOrUpdateHybridConnectionSlotOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateHybridConnectionSlotResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        namespaceName,\n        relayName,\n        slot,\n        connectionEnvelope,\n        options,\n      },\n      createOrUpdateHybridConnectionSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Removes a Hybrid Connection from this site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param namespaceName The namespace for this hybrid connection.\n   * @param relayName The relay name for this hybrid connection.\n   * @param slot The name of the slot for the web app.\n   * @param options The options parameters.\n   */\n  deleteHybridConnectionSlot(\n    resourceGroupName: string,\n    name: string,\n    namespaceName: string,\n    relayName: string,\n    slot: string,\n    options?: WebAppsDeleteHybridConnectionSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, namespaceName, relayName, slot, options },\n      deleteHybridConnectionSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a new Hybrid Connection using a Service Bus relay.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param namespaceName The namespace for this hybrid connection.\n   * @param relayName The relay name for this hybrid connection.\n   * @param slot The name of the slot for the web app.\n   * @param connectionEnvelope The details of the hybrid connection.\n   * @param options The options parameters.\n   */\n  updateHybridConnectionSlot(\n    resourceGroupName: string,\n    name: string,\n    namespaceName: string,\n    relayName: string,\n    slot: string,\n    connectionEnvelope: HybridConnection,\n    options?: WebAppsUpdateHybridConnectionSlotOptionalParams,\n  ): Promise<WebAppsUpdateHybridConnectionSlotResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        namespaceName,\n        relayName,\n        slot,\n        connectionEnvelope,\n        options,\n      },\n      updateHybridConnectionSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Retrieves all Service Bus Hybrid Connections used by this Web App.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param slot The name of the slot for the web app.\n   * @param options The options parameters.\n   */\n  listHybridConnectionsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListHybridConnectionsSlotOptionalParams,\n  ): Promise<WebAppsListHybridConnectionsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listHybridConnectionsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets hybrid connections configured for an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get hybrid\n   *             connections for the production slot.\n   * @param options The options parameters.\n   */\n  listRelayServiceConnectionsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListRelayServiceConnectionsSlotOptionalParams,\n  ): Promise<WebAppsListRelayServiceConnectionsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listRelayServiceConnectionsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a hybrid connection configuration by its name.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param entityName Name of the hybrid connection.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get a hybrid\n   *             connection for the production slot.\n   * @param options The options parameters.\n   */\n  getRelayServiceConnectionSlot(\n    resourceGroupName: string,\n    name: string,\n    entityName: string,\n    slot: string,\n    options?: WebAppsGetRelayServiceConnectionSlotOptionalParams,\n  ): Promise<WebAppsGetRelayServiceConnectionSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, entityName, slot, options },\n      getRelayServiceConnectionSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a new hybrid connection configuration (PUT), or updates an existing one\n   * (PATCH).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param entityName Name of the hybrid connection configuration.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will create or update a\n   *             hybrid connection for the production slot.\n   * @param connectionEnvelope Details of the hybrid connection configuration.\n   * @param options The options parameters.\n   */\n  createOrUpdateRelayServiceConnectionSlot(\n    resourceGroupName: string,\n    name: string,\n    entityName: string,\n    slot: string,\n    connectionEnvelope: RelayServiceConnectionEntity,\n    options?: WebAppsCreateOrUpdateRelayServiceConnectionSlotOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateRelayServiceConnectionSlotResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        entityName,\n        slot,\n        connectionEnvelope,\n        options,\n      },\n      createOrUpdateRelayServiceConnectionSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Deletes a relay service connection by its name.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param entityName Name of the hybrid connection configuration.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will delete a hybrid\n   *             connection for the production slot.\n   * @param options The options parameters.\n   */\n  deleteRelayServiceConnectionSlot(\n    resourceGroupName: string,\n    name: string,\n    entityName: string,\n    slot: string,\n    options?: WebAppsDeleteRelayServiceConnectionSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, entityName, slot, options },\n      deleteRelayServiceConnectionSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a new hybrid connection configuration (PUT), or updates an existing one\n   * (PATCH).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param entityName Name of the hybrid connection configuration.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will create or update a\n   *             hybrid connection for the production slot.\n   * @param connectionEnvelope Details of the hybrid connection configuration.\n   * @param options The options parameters.\n   */\n  updateRelayServiceConnectionSlot(\n    resourceGroupName: string,\n    name: string,\n    entityName: string,\n    slot: string,\n    connectionEnvelope: RelayServiceConnectionEntity,\n    options?: WebAppsUpdateRelayServiceConnectionSlotOptionalParams,\n  ): Promise<WebAppsUpdateRelayServiceConnectionSlotResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        entityName,\n        slot,\n        connectionEnvelope,\n        options,\n      },\n      updateRelayServiceConnectionSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets all scale-out instances of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API gets the production\n   *             slot instances.\n   * @param options The options parameters.\n   */\n  private _listInstanceIdentifiersSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListInstanceIdentifiersSlotOptionalParams,\n  ): Promise<WebAppsListInstanceIdentifiersSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listInstanceIdentifiersSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets all scale-out instances of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param instanceId\n   * @param slot Name of the deployment slot. If a slot is not specified, the API gets the production\n   *             slot instances.\n   * @param options The options parameters.\n   */\n  getInstanceInfoSlot(\n    resourceGroupName: string,\n    name: string,\n    instanceId: string,\n    slot: string,\n    options?: WebAppsGetInstanceInfoSlotOptionalParams,\n  ): Promise<WebAppsGetInstanceInfoSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, instanceId, slot, options },\n      getInstanceInfoSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get the status of the last MSDeploy operation.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param instanceId ID of web app instance.\n   * @param options The options parameters.\n   */\n  getInstanceMsDeployStatusSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    instanceId: string,\n    options?: WebAppsGetInstanceMsDeployStatusSlotOptionalParams,\n  ): Promise<WebAppsGetInstanceMsDeployStatusSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, instanceId, options },\n      getInstanceMsDeployStatusSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Invoke the MSDeploy web app extension.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param instanceId ID of web app instance.\n   * @param mSDeploy Details of MSDeploy operation\n   * @param options The options parameters.\n   */\n  async beginCreateInstanceMSDeployOperationSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    instanceId: string,\n    mSDeploy: MSDeploy,\n    options?: WebAppsCreateInstanceMSDeployOperationSlotOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsCreateInstanceMSDeployOperationSlotResponse>,\n      WebAppsCreateInstanceMSDeployOperationSlotResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsCreateInstanceMSDeployOperationSlotResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, slot, instanceId, mSDeploy, options },\n      spec: createInstanceMSDeployOperationSlotOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsCreateInstanceMSDeployOperationSlotResponse,\n      OperationState<WebAppsCreateInstanceMSDeployOperationSlotResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Invoke the MSDeploy web app extension.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param instanceId ID of web app instance.\n   * @param mSDeploy Details of MSDeploy operation\n   * @param options The options parameters.\n   */\n  async beginCreateInstanceMSDeployOperationSlotAndWait(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    instanceId: string,\n    mSDeploy: MSDeploy,\n    options?: WebAppsCreateInstanceMSDeployOperationSlotOptionalParams,\n  ): Promise<WebAppsCreateInstanceMSDeployOperationSlotResponse> {\n    const poller = await this.beginCreateInstanceMSDeployOperationSlot(\n      resourceGroupName,\n      name,\n      slot,\n      instanceId,\n      mSDeploy,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Get the MSDeploy Log for the last MSDeploy operation.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param instanceId ID of web app instance.\n   * @param options The options parameters.\n   */\n  getInstanceMSDeployLogSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    instanceId: string,\n    options?: WebAppsGetInstanceMSDeployLogSlotOptionalParams,\n  ): Promise<WebAppsGetInstanceMSDeployLogSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, instanceId, options },\n      getInstanceMSDeployLogSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get list of processes for a web site, or a deployment slot, or for a specific\n   * scaled-out instance in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param options The options parameters.\n   */\n  private _listInstanceProcessesSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessesSlotOptionalParams,\n  ): Promise<WebAppsListInstanceProcessesSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, instanceId, options },\n      listInstanceProcessesSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get process information by its ID for a specific scaled-out instance in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param options The options parameters.\n   */\n  getInstanceProcessSlot(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    instanceId: string,\n    options?: WebAppsGetInstanceProcessSlotOptionalParams,\n  ): Promise<WebAppsGetInstanceProcessSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, slot, instanceId, options },\n      getInstanceProcessSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Terminate a process by its ID for a web site, or a deployment slot, or specific\n   * scaled-out instance in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param options The options parameters.\n   */\n  deleteInstanceProcessSlot(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    instanceId: string,\n    options?: WebAppsDeleteInstanceProcessSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, slot, instanceId, options },\n      deleteInstanceProcessSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get a memory dump of a process by its ID for a specific scaled-out instance in a web\n   * site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param options The options parameters.\n   */\n  getInstanceProcessDumpSlot(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    instanceId: string,\n    options?: WebAppsGetInstanceProcessDumpSlotOptionalParams,\n  ): Promise<WebAppsGetInstanceProcessDumpSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, slot, instanceId, options },\n      getInstanceProcessDumpSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List module information for a process by its ID for a specific scaled-out instance\n   * in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param options The options parameters.\n   */\n  private _listInstanceProcessModulesSlot(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessModulesSlotOptionalParams,\n  ): Promise<WebAppsListInstanceProcessModulesSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, slot, instanceId, options },\n      listInstanceProcessModulesSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get process information by its ID for a specific scaled-out instance in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param baseAddress Module base address.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param options The options parameters.\n   */\n  getInstanceProcessModuleSlot(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    baseAddress: string,\n    slot: string,\n    instanceId: string,\n    options?: WebAppsGetInstanceProcessModuleSlotOptionalParams,\n  ): Promise<WebAppsGetInstanceProcessModuleSlotResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        processId,\n        baseAddress,\n        slot,\n        instanceId,\n        options,\n      },\n      getInstanceProcessModuleSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List the threads in a process by its ID for a specific scaled-out instance in a web\n   * site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param options The options parameters.\n   */\n  private _listInstanceProcessThreadsSlot(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    instanceId: string,\n    options?: WebAppsListInstanceProcessThreadsSlotOptionalParams,\n  ): Promise<WebAppsListInstanceProcessThreadsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, slot, instanceId, options },\n      listInstanceProcessThreadsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Shows whether an app can be cloned to another resource group or subscription.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. By default, this API returns information on the production\n   *             slot.\n   * @param options The options parameters.\n   */\n  isCloneableSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsIsCloneableSlotOptionalParams,\n  ): Promise<WebAppsIsCloneableSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      isCloneableSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets existing backups of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get backups of the\n   *             production slot.\n   * @param options The options parameters.\n   */\n  private _listSiteBackupsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSiteBackupsSlotOptionalParams,\n  ): Promise<WebAppsListSiteBackupsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listSiteBackupsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for This is to allow calling via powershell and ARM template.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot.\n   * @param options The options parameters.\n   */\n  listSyncFunctionTriggersSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSyncFunctionTriggersSlotOptionalParams,\n  ): Promise<WebAppsListSyncFunctionTriggersSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listSyncFunctionTriggersSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Returns the status of MySql in app migration, if one is active, and whether or not\n   * MySql in app is enabled\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of the deployment slot.\n   * @param options The options parameters.\n   */\n  getMigrateMySqlStatusSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetMigrateMySqlStatusSlotOptionalParams,\n  ): Promise<WebAppsGetMigrateMySqlStatusSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getMigrateMySqlStatusSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a Swift Virtual Network connection.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get a gateway for\n   *             the production slot's Virtual Network.\n   * @param options The options parameters.\n   */\n  getSwiftVirtualNetworkConnectionSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetSwiftVirtualNetworkConnectionSlotOptionalParams,\n  ): Promise<WebAppsGetSwiftVirtualNetworkConnectionSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getSwiftVirtualNetworkConnectionSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Integrates this Web App with a Virtual Network. This requires that 1)\n   * \"swiftSupported\" is true when doing a GET against this resource, and 2) that the target Subnet has\n   * already been delegated, and is not\n   * in use by another App Service Plan other than the one this App is in.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will add or update\n   *             connections for the production slot.\n   * @param connectionEnvelope Properties of the Virtual Network connection. See example.\n   * @param options The options parameters.\n   */\n  createOrUpdateSwiftVirtualNetworkConnectionWithCheckSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    connectionEnvelope: SwiftVirtualNetwork,\n    options?: WebAppsCreateOrUpdateSwiftVirtualNetworkConnectionWithCheckSlotOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateSwiftVirtualNetworkConnectionWithCheckSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, connectionEnvelope, options },\n      createOrUpdateSwiftVirtualNetworkConnectionWithCheckSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Deletes a Swift Virtual Network connection from an app (or deployment slot).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the\n   *             connection for the production slot.\n   * @param options The options parameters.\n   */\n  deleteSwiftVirtualNetworkSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsDeleteSwiftVirtualNetworkSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      deleteSwiftVirtualNetworkSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Integrates this Web App with a Virtual Network. This requires that 1)\n   * \"swiftSupported\" is true when doing a GET against this resource, and 2) that the target Subnet has\n   * already been delegated, and is not\n   * in use by another App Service Plan other than the one this App is in.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will add or update\n   *             connections for the production slot.\n   * @param connectionEnvelope Properties of the Virtual Network connection. See example.\n   * @param options The options parameters.\n   */\n  updateSwiftVirtualNetworkConnectionWithCheckSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    connectionEnvelope: SwiftVirtualNetwork,\n    options?: WebAppsUpdateSwiftVirtualNetworkConnectionWithCheckSlotOptionalParams,\n  ): Promise<WebAppsUpdateSwiftVirtualNetworkConnectionWithCheckSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, connectionEnvelope, options },\n      updateSwiftVirtualNetworkConnectionWithCheckSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets all network features used by the app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param view The type of view. Only \"summary\" is supported at this time.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get network\n   *             features for the production slot.\n   * @param options The options parameters.\n   */\n  listNetworkFeaturesSlot(\n    resourceGroupName: string,\n    name: string,\n    view: string,\n    slot: string,\n    options?: WebAppsListNetworkFeaturesSlotOptionalParams,\n  ): Promise<WebAppsListNetworkFeaturesSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, view, slot, options },\n      listNetworkFeaturesSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a named operation for a network trace capturing (or deployment slot, if\n   * specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param operationId GUID of the operation.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get an operation\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  getNetworkTraceOperationSlot(\n    resourceGroupName: string,\n    name: string,\n    operationId: string,\n    slot: string,\n    options?: WebAppsGetNetworkTraceOperationSlotOptionalParams,\n  ): Promise<WebAppsGetNetworkTraceOperationSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, operationId, slot, options },\n      getNetworkTraceOperationSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Start capturing network packets for the site (To be deprecated).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param slot The name of the slot for this web app.\n   * @param options The options parameters.\n   */\n  startWebSiteNetworkTraceSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsStartWebSiteNetworkTraceSlotOptionalParams,\n  ): Promise<WebAppsStartWebSiteNetworkTraceSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      startWebSiteNetworkTraceSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Start capturing network packets for the site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param slot The name of the slot for this web app.\n   * @param options The options parameters.\n   */\n  async beginStartWebSiteNetworkTraceOperationSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsStartWebSiteNetworkTraceOperationSlotOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsStartWebSiteNetworkTraceOperationSlotResponse>,\n      WebAppsStartWebSiteNetworkTraceOperationSlotResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsStartWebSiteNetworkTraceOperationSlotResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, slot, options },\n      spec: startWebSiteNetworkTraceOperationSlotOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsStartWebSiteNetworkTraceOperationSlotResponse,\n      OperationState<WebAppsStartWebSiteNetworkTraceOperationSlotResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Start capturing network packets for the site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param slot The name of the slot for this web app.\n   * @param options The options parameters.\n   */\n  async beginStartWebSiteNetworkTraceOperationSlotAndWait(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsStartWebSiteNetworkTraceOperationSlotOptionalParams,\n  ): Promise<WebAppsStartWebSiteNetworkTraceOperationSlotResponse> {\n    const poller = await this.beginStartWebSiteNetworkTraceOperationSlot(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Stop ongoing capturing network packets for the site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param slot The name of the slot for this web app.\n   * @param options The options parameters.\n   */\n  stopWebSiteNetworkTraceSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsStopWebSiteNetworkTraceSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      stopWebSiteNetworkTraceSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a named operation for a network trace capturing (or deployment slot, if\n   * specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param operationId GUID of the operation.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get an operation\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  getNetworkTracesSlot(\n    resourceGroupName: string,\n    name: string,\n    operationId: string,\n    slot: string,\n    options?: WebAppsGetNetworkTracesSlotOptionalParams,\n  ): Promise<WebAppsGetNetworkTracesSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, operationId, slot, options },\n      getNetworkTracesSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a named operation for a network trace capturing (or deployment slot, if\n   * specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param operationId GUID of the operation.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get an operation\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  getNetworkTraceOperationSlotV2(\n    resourceGroupName: string,\n    name: string,\n    operationId: string,\n    slot: string,\n    options?: WebAppsGetNetworkTraceOperationSlotV2OptionalParams,\n  ): Promise<WebAppsGetNetworkTraceOperationSlotV2Response> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, operationId, slot, options },\n      getNetworkTraceOperationSlotV2OperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a named operation for a network trace capturing (or deployment slot, if\n   * specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param operationId GUID of the operation.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get an operation\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  getNetworkTracesSlotV2(\n    resourceGroupName: string,\n    name: string,\n    operationId: string,\n    slot: string,\n    options?: WebAppsGetNetworkTracesSlotV2OptionalParams,\n  ): Promise<WebAppsGetNetworkTracesSlotV2Response> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, operationId, slot, options },\n      getNetworkTracesSlotV2OperationSpec,\n    );\n  }\n\n  /**\n   * Description for Generates a new publishing password for an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API generate a new\n   *             publishing password for the production slot.\n   * @param options The options parameters.\n   */\n  generateNewSitePublishingPasswordSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGenerateNewSitePublishingPasswordSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      generateNewSitePublishingPasswordSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets perfmon counters for web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param options The options parameters.\n   */\n  private _listPerfMonCountersSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListPerfMonCountersSlotOptionalParams,\n  ): Promise<WebAppsListPerfMonCountersSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listPerfMonCountersSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets web app's event logs.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param options The options parameters.\n   */\n  getSitePhpErrorLogFlagSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetSitePhpErrorLogFlagSlotOptionalParams,\n  ): Promise<WebAppsGetSitePhpErrorLogFlagSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getSitePhpErrorLogFlagSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the premier add-ons of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the premier\n   *             add-ons for the production slot.\n   * @param options The options parameters.\n   */\n  listPremierAddOnsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListPremierAddOnsSlotOptionalParams,\n  ): Promise<WebAppsListPremierAddOnsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listPremierAddOnsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a named add-on of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param premierAddOnName Add-on name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the named\n   *             add-on for the production slot.\n   * @param options The options parameters.\n   */\n  getPremierAddOnSlot(\n    resourceGroupName: string,\n    name: string,\n    premierAddOnName: string,\n    slot: string,\n    options?: WebAppsGetPremierAddOnSlotOptionalParams,\n  ): Promise<WebAppsGetPremierAddOnSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, premierAddOnName, slot, options },\n      getPremierAddOnSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates a named add-on of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param premierAddOnName Add-on name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will update the named\n   *             add-on for the production slot.\n   * @param premierAddOn A JSON representation of the edited premier add-on.\n   * @param options The options parameters.\n   */\n  addPremierAddOnSlot(\n    resourceGroupName: string,\n    name: string,\n    premierAddOnName: string,\n    slot: string,\n    premierAddOn: PremierAddOn,\n    options?: WebAppsAddPremierAddOnSlotOptionalParams,\n  ): Promise<WebAppsAddPremierAddOnSlotResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        premierAddOnName,\n        slot,\n        premierAddOn,\n        options,\n      },\n      addPremierAddOnSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Delete a premier add-on from an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param premierAddOnName Add-on name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the named\n   *             add-on for the production slot.\n   * @param options The options parameters.\n   */\n  deletePremierAddOnSlot(\n    resourceGroupName: string,\n    name: string,\n    premierAddOnName: string,\n    slot: string,\n    options?: WebAppsDeletePremierAddOnSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, premierAddOnName, slot, options },\n      deletePremierAddOnSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates a named add-on of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param premierAddOnName Add-on name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will update the named\n   *             add-on for the production slot.\n   * @param premierAddOn A JSON representation of the edited premier add-on.\n   * @param options The options parameters.\n   */\n  updatePremierAddOnSlot(\n    resourceGroupName: string,\n    name: string,\n    premierAddOnName: string,\n    slot: string,\n    premierAddOn: PremierAddOnPatchResource,\n    options?: WebAppsUpdatePremierAddOnSlotOptionalParams,\n  ): Promise<WebAppsUpdatePremierAddOnSlotResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        premierAddOnName,\n        slot,\n        premierAddOn,\n        options,\n      },\n      updatePremierAddOnSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets data around private site access enablement and authorized Virtual Networks that\n   * can access the site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param slot The name of the slot for the web app.\n   * @param options The options parameters.\n   */\n  getPrivateAccessSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetPrivateAccessSlotOptionalParams,\n  ): Promise<WebAppsGetPrivateAccessSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getPrivateAccessSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Sets data around private site access enablement and authorized Virtual Networks that\n   * can access the site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param slot The name of the slot for the web app.\n   * @param access The information for the private access\n   * @param options The options parameters.\n   */\n  putPrivateAccessVnetSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    access: PrivateAccess,\n    options?: WebAppsPutPrivateAccessVnetSlotOptionalParams,\n  ): Promise<WebAppsPutPrivateAccessVnetSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, access, options },\n      putPrivateAccessVnetSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the list of private endpoint connections associated with a site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the site.\n   * @param slot Name of the site deployment slot.\n   * @param options The options parameters.\n   */\n  private _getPrivateEndpointConnectionListSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetPrivateEndpointConnectionListSlotOptionalParams,\n  ): Promise<WebAppsGetPrivateEndpointConnectionListSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getPrivateEndpointConnectionListSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the site.\n   * @param privateEndpointConnectionName Name of the private endpoint connection.\n   * @param slot Name of the site deployment slot.\n   * @param options The options parameters.\n   */\n  getPrivateEndpointConnectionSlot(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    slot: string,\n    options?: WebAppsGetPrivateEndpointConnectionSlotOptionalParams,\n  ): Promise<WebAppsGetPrivateEndpointConnectionSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, privateEndpointConnectionName, slot, options },\n      getPrivateEndpointConnectionSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Approves or rejects a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the site.\n   * @param privateEndpointConnectionName\n   * @param slot\n   * @param privateEndpointWrapper Remote Private Endpoint Connection ARM resource.\n   * @param options The options parameters.\n   */\n  async beginApproveOrRejectPrivateEndpointConnectionSlot(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    slot: string,\n    privateEndpointWrapper: RemotePrivateEndpointConnectionARMResource,\n    options?: WebAppsApproveOrRejectPrivateEndpointConnectionSlotOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsApproveOrRejectPrivateEndpointConnectionSlotResponse>,\n      WebAppsApproveOrRejectPrivateEndpointConnectionSlotResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsApproveOrRejectPrivateEndpointConnectionSlotResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        name,\n        privateEndpointConnectionName,\n        slot,\n        privateEndpointWrapper,\n        options,\n      },\n      spec: approveOrRejectPrivateEndpointConnectionSlotOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsApproveOrRejectPrivateEndpointConnectionSlotResponse,\n      OperationState<WebAppsApproveOrRejectPrivateEndpointConnectionSlotResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Approves or rejects a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the site.\n   * @param privateEndpointConnectionName\n   * @param slot\n   * @param privateEndpointWrapper Remote Private Endpoint Connection ARM resource.\n   * @param options The options parameters.\n   */\n  async beginApproveOrRejectPrivateEndpointConnectionSlotAndWait(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    slot: string,\n    privateEndpointWrapper: RemotePrivateEndpointConnectionARMResource,\n    options?: WebAppsApproveOrRejectPrivateEndpointConnectionSlotOptionalParams,\n  ): Promise<WebAppsApproveOrRejectPrivateEndpointConnectionSlotResponse> {\n    const poller = await this.beginApproveOrRejectPrivateEndpointConnectionSlot(\n      resourceGroupName,\n      name,\n      privateEndpointConnectionName,\n      slot,\n      privateEndpointWrapper,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Deletes a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the site.\n   * @param privateEndpointConnectionName\n   * @param slot\n   * @param options The options parameters.\n   */\n  async beginDeletePrivateEndpointConnectionSlot(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    slot: string,\n    options?: WebAppsDeletePrivateEndpointConnectionSlotOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsDeletePrivateEndpointConnectionSlotResponse>,\n      WebAppsDeletePrivateEndpointConnectionSlotResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsDeletePrivateEndpointConnectionSlotResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        name,\n        privateEndpointConnectionName,\n        slot,\n        options,\n      },\n      spec: deletePrivateEndpointConnectionSlotOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsDeletePrivateEndpointConnectionSlotResponse,\n      OperationState<WebAppsDeletePrivateEndpointConnectionSlotResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Deletes a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the site.\n   * @param privateEndpointConnectionName\n   * @param slot\n   * @param options The options parameters.\n   */\n  async beginDeletePrivateEndpointConnectionSlotAndWait(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    slot: string,\n    options?: WebAppsDeletePrivateEndpointConnectionSlotOptionalParams,\n  ): Promise<WebAppsDeletePrivateEndpointConnectionSlotResponse> {\n    const poller = await this.beginDeletePrivateEndpointConnectionSlot(\n      resourceGroupName,\n      name,\n      privateEndpointConnectionName,\n      slot,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Gets the private link resources\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the site.\n   * @param slot\n   * @param options The options parameters.\n   */\n  getPrivateLinkResourcesSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetPrivateLinkResourcesSlotOptionalParams,\n  ): Promise<WebAppsGetPrivateLinkResourcesSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getPrivateLinkResourcesSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get list of processes for a web site, or a deployment slot, or for a specific\n   * scaled-out instance in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param options The options parameters.\n   */\n  private _listProcessesSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListProcessesSlotOptionalParams,\n  ): Promise<WebAppsListProcessesSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listProcessesSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get process information by its ID for a specific scaled-out instance in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param options The options parameters.\n   */\n  getProcessSlot(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    options?: WebAppsGetProcessSlotOptionalParams,\n  ): Promise<WebAppsGetProcessSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, slot, options },\n      getProcessSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Terminate a process by its ID for a web site, or a deployment slot, or specific\n   * scaled-out instance in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param options The options parameters.\n   */\n  deleteProcessSlot(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    options?: WebAppsDeleteProcessSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, slot, options },\n      deleteProcessSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get a memory dump of a process by its ID for a specific scaled-out instance in a web\n   * site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param options The options parameters.\n   */\n  getProcessDumpSlot(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    options?: WebAppsGetProcessDumpSlotOptionalParams,\n  ): Promise<WebAppsGetProcessDumpSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, slot, options },\n      getProcessDumpSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List module information for a process by its ID for a specific scaled-out instance\n   * in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param options The options parameters.\n   */\n  private _listProcessModulesSlot(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    options?: WebAppsListProcessModulesSlotOptionalParams,\n  ): Promise<WebAppsListProcessModulesSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, slot, options },\n      listProcessModulesSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get process information by its ID for a specific scaled-out instance in a web site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param baseAddress Module base address.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param options The options parameters.\n   */\n  getProcessModuleSlot(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    baseAddress: string,\n    slot: string,\n    options?: WebAppsGetProcessModuleSlotOptionalParams,\n  ): Promise<WebAppsGetProcessModuleSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, baseAddress, slot, options },\n      getProcessModuleSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List the threads in a process by its ID for a specific scaled-out instance in a web\n   * site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param options The options parameters.\n   */\n  private _listProcessThreadsSlot(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    options?: WebAppsListProcessThreadsSlotOptionalParams,\n  ): Promise<WebAppsListProcessThreadsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, slot, options },\n      listProcessThreadsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get public certificates for an app or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API gets hostname bindings\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  private _listPublicCertificatesSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListPublicCertificatesSlotOptionalParams,\n  ): Promise<WebAppsListPublicCertificatesSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listPublicCertificatesSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get the named public certificate for an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API the named binding for\n   *             the production slot.\n   * @param publicCertificateName Public certificate name.\n   * @param options The options parameters.\n   */\n  getPublicCertificateSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    publicCertificateName: string,\n    options?: WebAppsGetPublicCertificateSlotOptionalParams,\n  ): Promise<WebAppsGetPublicCertificateSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, publicCertificateName, options },\n      getPublicCertificateSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a hostname binding for an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param publicCertificateName Public certificate name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will create a binding\n   *             for the production slot.\n   * @param publicCertificate Public certificate details. This is the JSON representation of a\n   *                          PublicCertificate object.\n   * @param options The options parameters.\n   */\n  createOrUpdatePublicCertificateSlot(\n    resourceGroupName: string,\n    name: string,\n    publicCertificateName: string,\n    slot: string,\n    publicCertificate: PublicCertificate,\n    options?: WebAppsCreateOrUpdatePublicCertificateSlotOptionalParams,\n  ): Promise<WebAppsCreateOrUpdatePublicCertificateSlotResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        publicCertificateName,\n        slot,\n        publicCertificate,\n        options,\n      },\n      createOrUpdatePublicCertificateSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Deletes a hostname binding for an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding\n   *             for the production slot.\n   * @param publicCertificateName Public certificate name.\n   * @param options The options parameters.\n   */\n  deletePublicCertificateSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    publicCertificateName: string,\n    options?: WebAppsDeletePublicCertificateSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, publicCertificateName, options },\n      deletePublicCertificateSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the publishing profile for an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the publishing\n   *             profile for the production slot.\n   * @param publishingProfileOptions Specifies publishingProfileOptions for publishing profile. For\n   *                                 example, use {\"format\": \"FileZilla3\"} to get a FileZilla publishing profile.\n   * @param options The options parameters.\n   */\n  listPublishingProfileXmlWithSecretsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    publishingProfileOptions: CsmPublishingProfileOptions,\n    options?: WebAppsListPublishingProfileXmlWithSecretsSlotOptionalParams,\n  ): Promise<WebAppsListPublishingProfileXmlWithSecretsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, publishingProfileOptions, options },\n      listPublishingProfileXmlWithSecretsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Resets the configuration settings of the current slot if they were previously\n   * modified by calling the API with POST.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API resets configuration\n   *             settings for the production slot.\n   * @param options The options parameters.\n   */\n  resetSlotConfigurationSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsResetSlotConfigurationSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      resetSlotConfigurationSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Restarts an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will restart the\n   *             production slot.\n   * @param options The options parameters.\n   */\n  restartSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsRestartSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      restartSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Restores an app from a backup blob in Azure Storage.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will restore a backup\n   *             of the production slot.\n   * @param request Information on restore request .\n   * @param options The options parameters.\n   */\n  async beginRestoreFromBackupBlobSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    request: RestoreRequest,\n    options?: WebAppsRestoreFromBackupBlobSlotOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, slot, request, options },\n      spec: restoreFromBackupBlobSlotOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Restores an app from a backup blob in Azure Storage.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will restore a backup\n   *             of the production slot.\n   * @param request Information on restore request .\n   * @param options The options parameters.\n   */\n  async beginRestoreFromBackupBlobSlotAndWait(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    request: RestoreRequest,\n    options?: WebAppsRestoreFromBackupBlobSlotOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginRestoreFromBackupBlobSlot(\n      resourceGroupName,\n      name,\n      slot,\n      request,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Restores a deleted web app to this web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param restoreRequest Deleted web app restore information.\n   * @param options The options parameters.\n   */\n  async beginRestoreFromDeletedAppSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    restoreRequest: DeletedAppRestoreRequest,\n    options?: WebAppsRestoreFromDeletedAppSlotOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, slot, restoreRequest, options },\n      spec: restoreFromDeletedAppSlotOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Restores a deleted web app to this web app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param restoreRequest Deleted web app restore information.\n   * @param options The options parameters.\n   */\n  async beginRestoreFromDeletedAppSlotAndWait(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    restoreRequest: DeletedAppRestoreRequest,\n    options?: WebAppsRestoreFromDeletedAppSlotOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginRestoreFromDeletedAppSlot(\n      resourceGroupName,\n      name,\n      slot,\n      restoreRequest,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Restores a web app from a snapshot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param restoreRequest Snapshot restore settings. Snapshot information can be obtained by calling\n   *                       GetDeletedSites or GetSiteSnapshots API.\n   * @param options The options parameters.\n   */\n  async beginRestoreSnapshotSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    restoreRequest: SnapshotRestoreRequest,\n    options?: WebAppsRestoreSnapshotSlotOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, slot, restoreRequest, options },\n      spec: restoreSnapshotSlotOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Restores a web app from a snapshot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param restoreRequest Snapshot restore settings. Snapshot information can be obtained by calling\n   *                       GetDeletedSites or GetSiteSnapshots API.\n   * @param options The options parameters.\n   */\n  async beginRestoreSnapshotSlotAndWait(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    restoreRequest: SnapshotRestoreRequest,\n    options?: WebAppsRestoreSnapshotSlotOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginRestoreSnapshotSlot(\n      resourceGroupName,\n      name,\n      slot,\n      restoreRequest,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists all the site containers of a site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get a list of site\n   *             containers for the production slot.\n   * @param options The options parameters.\n   */\n  private _listSiteContainersSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSiteContainersSlotOptionalParams,\n  ): Promise<WebAppsListSiteContainersSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listSiteContainersSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a site container of a site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the Site\n   *             Container for the production slot.\n   * @param containerName Site Container Name\n   * @param options The options parameters.\n   */\n  getSiteContainerSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    containerName: string,\n    options?: WebAppsGetSiteContainerSlotOptionalParams,\n  ): Promise<WebAppsGetSiteContainerSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, containerName, options },\n      getSiteContainerSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Creates or Updates a site container for a site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will create the\n   *             container for the production slot.\n   * @param containerName Site Container Name\n   * @param request Container Entity\n   * @param options The options parameters.\n   */\n  createOrUpdateSiteContainerSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    containerName: string,\n    request: SiteContainer,\n    options?: WebAppsCreateOrUpdateSiteContainerSlotOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateSiteContainerSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, containerName, request, options },\n      createOrUpdateSiteContainerSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Deletes a site container for a site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the\n   *             container for the production slot.\n   * @param containerName Site Container Name\n   * @param options The options parameters.\n   */\n  deleteSiteContainerSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    containerName: string,\n    options?: WebAppsDeleteSiteContainerSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, containerName, options },\n      deleteSiteContainerSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get list of siteextensions for a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production\n   *             slot.\n   * @param options The options parameters.\n   */\n  private _listSiteExtensionsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSiteExtensionsSlotOptionalParams,\n  ): Promise<WebAppsListSiteExtensionsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listSiteExtensionsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get site extension information by its ID for a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param siteExtensionId Site extension name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production\n   *             slot.\n   * @param options The options parameters.\n   */\n  getSiteExtensionSlot(\n    resourceGroupName: string,\n    name: string,\n    siteExtensionId: string,\n    slot: string,\n    options?: WebAppsGetSiteExtensionSlotOptionalParams,\n  ): Promise<WebAppsGetSiteExtensionSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, siteExtensionId, slot, options },\n      getSiteExtensionSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Install site extension on a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param siteExtensionId Site extension name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production\n   *             slot.\n   * @param options The options parameters.\n   */\n  async beginInstallSiteExtensionSlot(\n    resourceGroupName: string,\n    name: string,\n    siteExtensionId: string,\n    slot: string,\n    options?: WebAppsInstallSiteExtensionSlotOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsInstallSiteExtensionSlotResponse>,\n      WebAppsInstallSiteExtensionSlotResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsInstallSiteExtensionSlotResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, siteExtensionId, slot, options },\n      spec: installSiteExtensionSlotOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsInstallSiteExtensionSlotResponse,\n      OperationState<WebAppsInstallSiteExtensionSlotResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Install site extension on a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param siteExtensionId Site extension name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production\n   *             slot.\n   * @param options The options parameters.\n   */\n  async beginInstallSiteExtensionSlotAndWait(\n    resourceGroupName: string,\n    name: string,\n    siteExtensionId: string,\n    slot: string,\n    options?: WebAppsInstallSiteExtensionSlotOptionalParams,\n  ): Promise<WebAppsInstallSiteExtensionSlotResponse> {\n    const poller = await this.beginInstallSiteExtensionSlot(\n      resourceGroupName,\n      name,\n      siteExtensionId,\n      slot,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Remove a site extension from a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param siteExtensionId Site extension name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  deleteSiteExtensionSlot(\n    resourceGroupName: string,\n    name: string,\n    siteExtensionId: string,\n    slot: string,\n    options?: WebAppsDeleteSiteExtensionSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, siteExtensionId, slot, options },\n      deleteSiteExtensionSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get the difference in configuration settings between two web app slots.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the source slot. If a slot is not specified, the production slot is used as the\n   *             source slot.\n   * @param slotSwapEntity JSON object that contains the target slot name. See example.\n   * @param options The options parameters.\n   */\n  private _listSlotDifferencesSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    slotSwapEntity: CsmSlotEntity,\n    options?: WebAppsListSlotDifferencesSlotOptionalParams,\n  ): Promise<WebAppsListSlotDifferencesSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, slotSwapEntity, options },\n      listSlotDifferencesSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Swaps two deployment slots of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the source slot. If a slot is not specified, the production slot is used as the\n   *             source slot.\n   * @param slotSwapEntity JSON object that contains the target slot name. See example.\n   * @param options The options parameters.\n   */\n  async beginSwapSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    slotSwapEntity: CsmSlotEntity,\n    options?: WebAppsSwapSlotOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, slot, slotSwapEntity, options },\n      spec: swapSlotOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Swaps two deployment slots of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the source slot. If a slot is not specified, the production slot is used as the\n   *             source slot.\n   * @param slotSwapEntity JSON object that contains the target slot name. See example.\n   * @param options The options parameters.\n   */\n  async beginSwapSlotAndWait(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    slotSwapEntity: CsmSlotEntity,\n    options?: WebAppsSwapSlotOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginSwapSlot(\n      resourceGroupName,\n      name,\n      slot,\n      slotSwapEntity,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Returns all Snapshots to the user.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Website Name.\n   * @param slot Website Slot.\n   * @param options The options parameters.\n   */\n  private _listSnapshotsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSnapshotsSlotOptionalParams,\n  ): Promise<WebAppsListSnapshotsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listSnapshotsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Returns all Snapshots to the user from DRSecondary endpoint.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Website Name.\n   * @param slot Website Slot.\n   * @param options The options parameters.\n   */\n  private _listSnapshotsFromDRSecondarySlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListSnapshotsFromDRSecondarySlotOptionalParams,\n  ): Promise<WebAppsListSnapshotsFromDRSecondarySlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listSnapshotsFromDRSecondarySlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the source control configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the source\n   *             control configuration for the production slot.\n   * @param options The options parameters.\n   */\n  getSourceControlSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsGetSourceControlSlotOptionalParams,\n  ): Promise<WebAppsGetSourceControlSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      getSourceControlSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates the source control configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will update the source\n   *             control configuration for the production slot.\n   * @param siteSourceControl JSON representation of a SiteSourceControl object. See example.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateSourceControlSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    siteSourceControl: SiteSourceControl,\n    options?: WebAppsCreateOrUpdateSourceControlSlotOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsCreateOrUpdateSourceControlSlotResponse>,\n      WebAppsCreateOrUpdateSourceControlSlotResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsCreateOrUpdateSourceControlSlotResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, slot, siteSourceControl, options },\n      spec: createOrUpdateSourceControlSlotOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsCreateOrUpdateSourceControlSlotResponse,\n      OperationState<WebAppsCreateOrUpdateSourceControlSlotResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Updates the source control configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will update the source\n   *             control configuration for the production slot.\n   * @param siteSourceControl JSON representation of a SiteSourceControl object. See example.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateSourceControlSlotAndWait(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    siteSourceControl: SiteSourceControl,\n    options?: WebAppsCreateOrUpdateSourceControlSlotOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateSourceControlSlotResponse> {\n    const poller = await this.beginCreateOrUpdateSourceControlSlot(\n      resourceGroupName,\n      name,\n      slot,\n      siteSourceControl,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Deletes the source control configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the source\n   *             control configuration for the production slot.\n   * @param options The options parameters.\n   */\n  deleteSourceControlSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsDeleteSourceControlSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      deleteSourceControlSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates the source control configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will update the source\n   *             control configuration for the production slot.\n   * @param siteSourceControl JSON representation of a SiteSourceControl object. See example.\n   * @param options The options parameters.\n   */\n  updateSourceControlSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    siteSourceControl: SiteSourceControl,\n    options?: WebAppsUpdateSourceControlSlotOptionalParams,\n  ): Promise<WebAppsUpdateSourceControlSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, siteSourceControl, options },\n      updateSourceControlSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Starts an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will start the\n   *             production slot.\n   * @param options The options parameters.\n   */\n  startSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsStartSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      startSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Start capturing network packets for the site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param slot The name of the slot for this web app.\n   * @param options The options parameters.\n   */\n  async beginStartNetworkTraceSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsStartNetworkTraceSlotOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsStartNetworkTraceSlotResponse>,\n      WebAppsStartNetworkTraceSlotResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsStartNetworkTraceSlotResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, slot, options },\n      spec: startNetworkTraceSlotOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsStartNetworkTraceSlotResponse,\n      OperationState<WebAppsStartNetworkTraceSlotResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Start capturing network packets for the site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param slot The name of the slot for this web app.\n   * @param options The options parameters.\n   */\n  async beginStartNetworkTraceSlotAndWait(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsStartNetworkTraceSlotOptionalParams,\n  ): Promise<WebAppsStartNetworkTraceSlotResponse> {\n    const poller = await this.beginStartNetworkTraceSlot(\n      resourceGroupName,\n      name,\n      slot,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Stops an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will stop the\n   *             production slot.\n   * @param options The options parameters.\n   */\n  stopSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsStopSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      stopSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Stop ongoing capturing network packets for the site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param slot The name of the slot for this web app.\n   * @param options The options parameters.\n   */\n  stopNetworkTraceSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsStopNetworkTraceSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      stopNetworkTraceSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Sync web app repository.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param options The options parameters.\n   */\n  syncRepositorySlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsSyncRepositorySlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      syncRepositorySlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Syncs function trigger metadata to the management database\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot.\n   * @param options The options parameters.\n   */\n  syncFunctionTriggersSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsSyncFunctionTriggersSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      syncFunctionTriggersSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List triggered web jobs for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment\n   *             for the production slot.\n   * @param options The options parameters.\n   */\n  private _listTriggeredWebJobsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListTriggeredWebJobsSlotOptionalParams,\n  ): Promise<WebAppsListTriggeredWebJobsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listTriggeredWebJobsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a triggered web job by its ID for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production\n   *             slot.\n   * @param options The options parameters.\n   */\n  getTriggeredWebJobSlot(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    slot: string,\n    options?: WebAppsGetTriggeredWebJobSlotOptionalParams,\n  ): Promise<WebAppsGetTriggeredWebJobSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, slot, options },\n      getTriggeredWebJobSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Delete a triggered web job by its ID for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API deletes web job for the\n   *             production slot.\n   * @param options The options parameters.\n   */\n  deleteTriggeredWebJobSlot(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    slot: string,\n    options?: WebAppsDeleteTriggeredWebJobSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, slot, options },\n      deleteTriggeredWebJobSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List a triggered web job's history for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production\n   *             slot.\n   * @param options The options parameters.\n   */\n  private _listTriggeredWebJobHistorySlot(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    slot: string,\n    options?: WebAppsListTriggeredWebJobHistorySlotOptionalParams,\n  ): Promise<WebAppsListTriggeredWebJobHistorySlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, slot, options },\n      listTriggeredWebJobHistorySlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a triggered web job's history by its ID for an app, , or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param id History ID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production\n   *             slot.\n   * @param options The options parameters.\n   */\n  getTriggeredWebJobHistorySlot(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    id: string,\n    slot: string,\n    options?: WebAppsGetTriggeredWebJobHistorySlotOptionalParams,\n  ): Promise<WebAppsGetTriggeredWebJobHistorySlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, id, slot, options },\n      getTriggeredWebJobHistorySlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Run a triggered web job for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production\n   *             slot.\n   * @param options The options parameters.\n   */\n  runTriggeredWebJobSlot(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    slot: string,\n    options?: WebAppsRunTriggeredWebJobSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, slot, options },\n      runTriggeredWebJobSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the quota usage information of an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get quota\n   *             information of the production slot.\n   * @param options The options parameters.\n   */\n  private _listUsagesSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListUsagesSlotOptionalParams,\n  ): Promise<WebAppsListUsagesSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listUsagesSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the virtual networks the app (or deployment slot) is connected to.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get virtual\n   *             network connections for the production slot.\n   * @param options The options parameters.\n   */\n  listVnetConnectionsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListVnetConnectionsSlotOptionalParams,\n  ): Promise<WebAppsListVnetConnectionsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listVnetConnectionsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a virtual network the app (or deployment slot) is connected to by name.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param vnetName Name of the virtual network.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the named\n   *             virtual network for the production slot.\n   * @param options The options parameters.\n   */\n  getVnetConnectionSlot(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    slot: string,\n    options?: WebAppsGetVnetConnectionSlotOptionalParams,\n  ): Promise<WebAppsGetVnetConnectionSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, vnetName, slot, options },\n      getVnetConnectionSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Adds a Virtual Network connection to an app or slot (PUT) or updates the connection\n   * properties (PATCH).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param vnetName Name of an existing Virtual Network.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will add or update\n   *             connections for the production slot.\n   * @param connectionEnvelope Properties of the Virtual Network connection. See example.\n   * @param options The options parameters.\n   */\n  createOrUpdateVnetConnectionSlot(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    slot: string,\n    connectionEnvelope: VnetInfoResource,\n    options?: WebAppsCreateOrUpdateVnetConnectionSlotOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateVnetConnectionSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, vnetName, slot, connectionEnvelope, options },\n      createOrUpdateVnetConnectionSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Deletes a connection from an app (or deployment slot to a named virtual network.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param vnetName Name of the virtual network.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the\n   *             connection for the production slot.\n   * @param options The options parameters.\n   */\n  deleteVnetConnectionSlot(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    slot: string,\n    options?: WebAppsDeleteVnetConnectionSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, vnetName, slot, options },\n      deleteVnetConnectionSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Adds a Virtual Network connection to an app or slot (PUT) or updates the connection\n   * properties (PATCH).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param vnetName Name of an existing Virtual Network.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will add or update\n   *             connections for the production slot.\n   * @param connectionEnvelope Properties of the Virtual Network connection. See example.\n   * @param options The options parameters.\n   */\n  updateVnetConnectionSlot(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    slot: string,\n    connectionEnvelope: VnetInfoResource,\n    options?: WebAppsUpdateVnetConnectionSlotOptionalParams,\n  ): Promise<WebAppsUpdateVnetConnectionSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, vnetName, slot, connectionEnvelope, options },\n      updateVnetConnectionSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets an app's Virtual Network gateway.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param vnetName Name of the Virtual Network.\n   * @param gatewayName Name of the gateway. Currently, the only supported string is \"primary\".\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get a gateway for\n   *             the production slot's Virtual Network.\n   * @param options The options parameters.\n   */\n  getVnetConnectionGatewaySlot(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    gatewayName: string,\n    slot: string,\n    options?: WebAppsGetVnetConnectionGatewaySlotOptionalParams,\n  ): Promise<WebAppsGetVnetConnectionGatewaySlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, vnetName, gatewayName, slot, options },\n      getVnetConnectionGatewaySlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param vnetName Name of the Virtual Network.\n   * @param gatewayName Name of the gateway. Currently, the only supported string is \"primary\".\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will add or update a\n   *             gateway for the production slot's Virtual Network.\n   * @param connectionEnvelope The properties to update this gateway with.\n   * @param options The options parameters.\n   */\n  createOrUpdateVnetConnectionGatewaySlot(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    gatewayName: string,\n    slot: string,\n    connectionEnvelope: VnetGateway,\n    options?: WebAppsCreateOrUpdateVnetConnectionGatewaySlotOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateVnetConnectionGatewaySlotResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        vnetName,\n        gatewayName,\n        slot,\n        connectionEnvelope,\n        options,\n      },\n      createOrUpdateVnetConnectionGatewaySlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param vnetName Name of the Virtual Network.\n   * @param gatewayName Name of the gateway. Currently, the only supported string is \"primary\".\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will add or update a\n   *             gateway for the production slot's Virtual Network.\n   * @param connectionEnvelope The properties to update this gateway with.\n   * @param options The options parameters.\n   */\n  updateVnetConnectionGatewaySlot(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    gatewayName: string,\n    slot: string,\n    connectionEnvelope: VnetGateway,\n    options?: WebAppsUpdateVnetConnectionGatewaySlotOptionalParams,\n  ): Promise<WebAppsUpdateVnetConnectionGatewaySlotResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        vnetName,\n        gatewayName,\n        slot,\n        connectionEnvelope,\n        options,\n      },\n      updateVnetConnectionGatewaySlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List webjobs for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param options The options parameters.\n   */\n  private _listWebJobsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListWebJobsSlotOptionalParams,\n  ): Promise<WebAppsListWebJobsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listWebJobsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get webjob information for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of the web job.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param options The options parameters.\n   */\n  getWebJobSlot(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    slot: string,\n    options?: WebAppsGetWebJobSlotOptionalParams,\n  ): Promise<WebAppsGetWebJobSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, slot, options },\n      getWebJobSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get the difference in configuration settings between two web app slots.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slotSwapEntity JSON object that contains the target slot name. See example.\n   * @param options The options parameters.\n   */\n  private _listSlotDifferencesFromProduction(\n    resourceGroupName: string,\n    name: string,\n    slotSwapEntity: CsmSlotEntity,\n    options?: WebAppsListSlotDifferencesFromProductionOptionalParams,\n  ): Promise<WebAppsListSlotDifferencesFromProductionResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slotSwapEntity, options },\n      listSlotDifferencesFromProductionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Swaps two deployment slots of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slotSwapEntity JSON object that contains the target slot name. See example.\n   * @param options The options parameters.\n   */\n  async beginSwapSlotWithProduction(\n    resourceGroupName: string,\n    name: string,\n    slotSwapEntity: CsmSlotEntity,\n    options?: WebAppsSwapSlotWithProductionOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, slotSwapEntity, options },\n      spec: swapSlotWithProductionOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Swaps two deployment slots of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slotSwapEntity JSON object that contains the target slot name. See example.\n   * @param options The options parameters.\n   */\n  async beginSwapSlotWithProductionAndWait(\n    resourceGroupName: string,\n    name: string,\n    slotSwapEntity: CsmSlotEntity,\n    options?: WebAppsSwapSlotWithProductionOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginSwapSlotWithProduction(\n      resourceGroupName,\n      name,\n      slotSwapEntity,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Returns all Snapshots to the user.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Website Name.\n   * @param options The options parameters.\n   */\n  private _listSnapshots(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSnapshotsOptionalParams,\n  ): Promise<WebAppsListSnapshotsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listSnapshotsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Returns all Snapshots to the user from DRSecondary endpoint.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Website Name.\n   * @param options The options parameters.\n   */\n  private _listSnapshotsFromDRSecondary(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListSnapshotsFromDRSecondaryOptionalParams,\n  ): Promise<WebAppsListSnapshotsFromDRSecondaryResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listSnapshotsFromDRSecondaryOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the source control configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  getSourceControl(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsGetSourceControlOptionalParams,\n  ): Promise<WebAppsGetSourceControlResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getSourceControlOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates the source control configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param siteSourceControl JSON representation of a SiteSourceControl object. See example.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateSourceControl(\n    resourceGroupName: string,\n    name: string,\n    siteSourceControl: SiteSourceControl,\n    options?: WebAppsCreateOrUpdateSourceControlOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsCreateOrUpdateSourceControlResponse>,\n      WebAppsCreateOrUpdateSourceControlResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsCreateOrUpdateSourceControlResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, siteSourceControl, options },\n      spec: createOrUpdateSourceControlOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsCreateOrUpdateSourceControlResponse,\n      OperationState<WebAppsCreateOrUpdateSourceControlResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Updates the source control configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param siteSourceControl JSON representation of a SiteSourceControl object. See example.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateSourceControlAndWait(\n    resourceGroupName: string,\n    name: string,\n    siteSourceControl: SiteSourceControl,\n    options?: WebAppsCreateOrUpdateSourceControlOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateSourceControlResponse> {\n    const poller = await this.beginCreateOrUpdateSourceControl(\n      resourceGroupName,\n      name,\n      siteSourceControl,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Deletes the source control configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  deleteSourceControl(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsDeleteSourceControlOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      deleteSourceControlOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates the source control configuration of an app.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param siteSourceControl JSON representation of a SiteSourceControl object. See example.\n   * @param options The options parameters.\n   */\n  updateSourceControl(\n    resourceGroupName: string,\n    name: string,\n    siteSourceControl: SiteSourceControl,\n    options?: WebAppsUpdateSourceControlOptionalParams,\n  ): Promise<WebAppsUpdateSourceControlResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, siteSourceControl, options },\n      updateSourceControlOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Starts an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  start(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsStartOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      startOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Start capturing network packets for the site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param options The options parameters.\n   */\n  async beginStartNetworkTrace(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsStartNetworkTraceOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<WebAppsStartNetworkTraceResponse>,\n      WebAppsStartNetworkTraceResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<WebAppsStartNetworkTraceResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, options },\n      spec: startNetworkTraceOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      WebAppsStartNetworkTraceResponse,\n      OperationState<WebAppsStartNetworkTraceResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Start capturing network packets for the site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param options The options parameters.\n   */\n  async beginStartNetworkTraceAndWait(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsStartNetworkTraceOptionalParams,\n  ): Promise<WebAppsStartNetworkTraceResponse> {\n    const poller = await this.beginStartNetworkTrace(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Stops an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  stop(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsStopOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      stopOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Stop ongoing capturing network packets for the site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name The name of the web app.\n   * @param options The options parameters.\n   */\n  stopNetworkTrace(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsStopNetworkTraceOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      stopNetworkTraceOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Sync web app repository.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param options The options parameters.\n   */\n  syncRepository(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsSyncRepositoryOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      syncRepositoryOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Syncs function trigger metadata to the management database\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  syncFunctionTriggers(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsSyncFunctionTriggersOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      syncFunctionTriggersOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List triggered web jobs for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param options The options parameters.\n   */\n  private _listTriggeredWebJobs(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListTriggeredWebJobsOptionalParams,\n  ): Promise<WebAppsListTriggeredWebJobsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listTriggeredWebJobsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a triggered web job by its ID for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param options The options parameters.\n   */\n  getTriggeredWebJob(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    options?: WebAppsGetTriggeredWebJobOptionalParams,\n  ): Promise<WebAppsGetTriggeredWebJobResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, options },\n      getTriggeredWebJobOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Delete a triggered web job by its ID for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param options The options parameters.\n   */\n  deleteTriggeredWebJob(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    options?: WebAppsDeleteTriggeredWebJobOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, options },\n      deleteTriggeredWebJobOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List a triggered web job's history for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param options The options parameters.\n   */\n  private _listTriggeredWebJobHistory(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    options?: WebAppsListTriggeredWebJobHistoryOptionalParams,\n  ): Promise<WebAppsListTriggeredWebJobHistoryResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, options },\n      listTriggeredWebJobHistoryOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a triggered web job's history by its ID for an app, , or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param id History ID.\n   * @param options The options parameters.\n   */\n  getTriggeredWebJobHistory(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    id: string,\n    options?: WebAppsGetTriggeredWebJobHistoryOptionalParams,\n  ): Promise<WebAppsGetTriggeredWebJobHistoryResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, id, options },\n      getTriggeredWebJobHistoryOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Run a triggered web job for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param options The options parameters.\n   */\n  runTriggeredWebJob(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    options?: WebAppsRunTriggeredWebJobOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, options },\n      runTriggeredWebJobOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the quota usage information of an app (or deployment slot, if specified).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  private _listUsages(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListUsagesOptionalParams,\n  ): Promise<WebAppsListUsagesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listUsagesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the virtual networks the app (or deployment slot) is connected to.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param options The options parameters.\n   */\n  listVnetConnections(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListVnetConnectionsOptionalParams,\n  ): Promise<WebAppsListVnetConnectionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listVnetConnectionsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a virtual network the app (or deployment slot) is connected to by name.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param vnetName Name of the virtual network.\n   * @param options The options parameters.\n   */\n  getVnetConnection(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    options?: WebAppsGetVnetConnectionOptionalParams,\n  ): Promise<WebAppsGetVnetConnectionResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, vnetName, options },\n      getVnetConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Adds a Virtual Network connection to an app or slot (PUT) or updates the connection\n   * properties (PATCH).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param vnetName Name of an existing Virtual Network.\n   * @param connectionEnvelope Properties of the Virtual Network connection. See example.\n   * @param options The options parameters.\n   */\n  createOrUpdateVnetConnection(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    connectionEnvelope: VnetInfoResource,\n    options?: WebAppsCreateOrUpdateVnetConnectionOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateVnetConnectionResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, vnetName, connectionEnvelope, options },\n      createOrUpdateVnetConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Deletes a connection from an app (or deployment slot to a named virtual network.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param vnetName Name of the virtual network.\n   * @param options The options parameters.\n   */\n  deleteVnetConnection(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    options?: WebAppsDeleteVnetConnectionOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, vnetName, options },\n      deleteVnetConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Adds a Virtual Network connection to an app or slot (PUT) or updates the connection\n   * properties (PATCH).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param vnetName Name of an existing Virtual Network.\n   * @param connectionEnvelope Properties of the Virtual Network connection. See example.\n   * @param options The options parameters.\n   */\n  updateVnetConnection(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    connectionEnvelope: VnetInfoResource,\n    options?: WebAppsUpdateVnetConnectionOptionalParams,\n  ): Promise<WebAppsUpdateVnetConnectionResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, vnetName, connectionEnvelope, options },\n      updateVnetConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets an app's Virtual Network gateway.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param vnetName Name of the Virtual Network.\n   * @param gatewayName Name of the gateway. Currently, the only supported string is \"primary\".\n   * @param options The options parameters.\n   */\n  getVnetConnectionGateway(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    gatewayName: string,\n    options?: WebAppsGetVnetConnectionGatewayOptionalParams,\n  ): Promise<WebAppsGetVnetConnectionGatewayResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, vnetName, gatewayName, options },\n      getVnetConnectionGatewayOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param vnetName Name of the Virtual Network.\n   * @param gatewayName Name of the gateway. Currently, the only supported string is \"primary\".\n   * @param connectionEnvelope The properties to update this gateway with.\n   * @param options The options parameters.\n   */\n  createOrUpdateVnetConnectionGateway(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    gatewayName: string,\n    connectionEnvelope: VnetGateway,\n    options?: WebAppsCreateOrUpdateVnetConnectionGatewayOptionalParams,\n  ): Promise<WebAppsCreateOrUpdateVnetConnectionGatewayResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        vnetName,\n        gatewayName,\n        connectionEnvelope,\n        options,\n      },\n      createOrUpdateVnetConnectionGatewayOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param vnetName Name of the Virtual Network.\n   * @param gatewayName Name of the gateway. Currently, the only supported string is \"primary\".\n   * @param connectionEnvelope The properties to update this gateway with.\n   * @param options The options parameters.\n   */\n  updateVnetConnectionGateway(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    gatewayName: string,\n    connectionEnvelope: VnetGateway,\n    options?: WebAppsUpdateVnetConnectionGatewayOptionalParams,\n  ): Promise<WebAppsUpdateVnetConnectionGatewayResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        vnetName,\n        gatewayName,\n        connectionEnvelope,\n        options,\n      },\n      updateVnetConnectionGatewayOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List webjobs for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param options The options parameters.\n   */\n  private _listWebJobs(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListWebJobsOptionalParams,\n  ): Promise<WebAppsListWebJobsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listWebJobsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get webjob information for an app, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of the web job.\n   * @param options The options parameters.\n   */\n  getWebJob(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    options?: WebAppsGetWebJobOptionalParams,\n  ): Promise<WebAppsGetWebJobResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, options },\n      getWebJobOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates the artifacts for web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param options The options parameters.\n   */\n  deployWorkflowArtifacts(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsDeployWorkflowArtifactsOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      deployWorkflowArtifactsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates the artifacts for web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot.\n   * @param options The options parameters.\n   */\n  deployWorkflowArtifactsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsDeployWorkflowArtifactsSlotOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      deployWorkflowArtifactsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * List the workflows for a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot.\n   * @param options The options parameters.\n   */\n  private _listInstanceWorkflowsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListInstanceWorkflowsSlotOptionalParams,\n  ): Promise<WebAppsListInstanceWorkflowsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listInstanceWorkflowsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Get workflow information by its ID for web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot.\n   * @param workflowName Workflow name.\n   * @param options The options parameters.\n   */\n  getInstanceWorkflowSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    workflowName: string,\n    options?: WebAppsGetInstanceWorkflowSlotOptionalParams,\n  ): Promise<WebAppsGetInstanceWorkflowSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, workflowName, options },\n      getInstanceWorkflowSlotOperationSpec,\n    );\n  }\n\n  /**\n   * Lists logic app's connections for web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot.\n   * @param options The options parameters.\n   */\n  listWorkflowsConnectionsSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: WebAppsListWorkflowsConnectionsSlotOptionalParams,\n  ): Promise<WebAppsListWorkflowsConnectionsSlotResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, options },\n      listWorkflowsConnectionsSlotOperationSpec,\n    );\n  }\n\n  /**\n   * List the workflows for a web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param options The options parameters.\n   */\n  private _listWorkflows(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListWorkflowsOptionalParams,\n  ): Promise<WebAppsListWorkflowsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listWorkflowsOperationSpec,\n    );\n  }\n\n  /**\n   * Get workflow information by its ID for web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param workflowName Workflow name.\n   * @param options The options parameters.\n   */\n  getWorkflow(\n    resourceGroupName: string,\n    name: string,\n    workflowName: string,\n    options?: WebAppsGetWorkflowOptionalParams,\n  ): Promise<WebAppsGetWorkflowResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, workflowName, options },\n      getWorkflowOperationSpec,\n    );\n  }\n\n  /**\n   * Lists logic app's connections for web site, or a deployment slot.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param options The options parameters.\n   */\n  listWorkflowsConnections(\n    resourceGroupName: string,\n    name: string,\n    options?: WebAppsListWorkflowsConnectionsOptionalParams,\n  ): Promise<WebAppsListWorkflowsConnectionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listWorkflowsConnectionsOperationSpec,\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: WebAppsListNextOptionalParams,\n  ): Promise<WebAppsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: WebAppsListByResourceGroupNextOptionalParams,\n  ): Promise<WebAppsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListBackupsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param nextLink The nextLink from the previous successful call to the ListBackups method.\n   * @param options The options parameters.\n   */\n  private _listBackupsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListBackupsNextOptionalParams,\n  ): Promise<WebAppsListBackupsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listBackupsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListBasicPublishingCredentialsPoliciesNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListBasicPublishingCredentialsPolicies method.\n   * @param options The options parameters.\n   */\n  private _listBasicPublishingCredentialsPoliciesNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListBasicPublishingCredentialsPoliciesNextOptionalParams,\n  ): Promise<WebAppsListBasicPublishingCredentialsPoliciesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listBasicPublishingCredentialsPoliciesNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListConfigurationsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param nextLink The nextLink from the previous successful call to the ListConfigurations method.\n   * @param options The options parameters.\n   */\n  private _listConfigurationsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListConfigurationsNextOptionalParams,\n  ): Promise<WebAppsListConfigurationsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listConfigurationsNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetAppSettingsKeyVaultReferencesNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 GetAppSettingsKeyVaultReferences method.\n   * @param options The options parameters.\n   */\n  private _getAppSettingsKeyVaultReferencesNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsGetAppSettingsKeyVaultReferencesNextOptionalParams,\n  ): Promise<WebAppsGetAppSettingsKeyVaultReferencesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      getAppSettingsKeyVaultReferencesNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetSiteConnectionStringKeyVaultReferencesNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 GetSiteConnectionStringKeyVaultReferences method.\n   * @param options The options parameters.\n   */\n  private _getSiteConnectionStringKeyVaultReferencesNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsGetSiteConnectionStringKeyVaultReferencesNextOptionalParams,\n  ): Promise<WebAppsGetSiteConnectionStringKeyVaultReferencesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      getSiteConnectionStringKeyVaultReferencesNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListConfigurationSnapshotInfoNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param nextLink The nextLink from the previous successful call to the ListConfigurationSnapshotInfo\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listConfigurationSnapshotInfoNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListConfigurationSnapshotInfoNextOptionalParams,\n  ): Promise<WebAppsListConfigurationSnapshotInfoNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listConfigurationSnapshotInfoNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListContinuousWebJobsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param nextLink The nextLink from the previous successful call to the ListContinuousWebJobs method.\n   * @param options The options parameters.\n   */\n  private _listContinuousWebJobsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListContinuousWebJobsNextOptionalParams,\n  ): Promise<WebAppsListContinuousWebJobsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listContinuousWebJobsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListProductionSiteDeploymentStatusesNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListProductionSiteDeploymentStatuses method.\n   * @param options The options parameters.\n   */\n  private _listProductionSiteDeploymentStatusesNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListProductionSiteDeploymentStatusesNextOptionalParams,\n  ): Promise<WebAppsListProductionSiteDeploymentStatusesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listProductionSiteDeploymentStatusesNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListDeploymentsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param nextLink The nextLink from the previous successful call to the ListDeployments method.\n   * @param options The options parameters.\n   */\n  private _listDeploymentsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListDeploymentsNextOptionalParams,\n  ): Promise<WebAppsListDeploymentsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listDeploymentsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListDomainOwnershipIdentifiersNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param nextLink The nextLink from the previous successful call to the ListDomainOwnershipIdentifiers\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listDomainOwnershipIdentifiersNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListDomainOwnershipIdentifiersNextOptionalParams,\n  ): Promise<WebAppsListDomainOwnershipIdentifiersNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listDomainOwnershipIdentifiersNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListFunctionsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param nextLink The nextLink from the previous successful call to the ListFunctions method.\n   * @param options The options parameters.\n   */\n  private _listFunctionsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListFunctionsNextOptionalParams,\n  ): Promise<WebAppsListFunctionsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listFunctionsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListHostNameBindingsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param nextLink The nextLink from the previous successful call to the ListHostNameBindings method.\n   * @param options The options parameters.\n   */\n  private _listHostNameBindingsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListHostNameBindingsNextOptionalParams,\n  ): Promise<WebAppsListHostNameBindingsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listHostNameBindingsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListInstanceIdentifiersNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param nextLink The nextLink from the previous successful call to the ListInstanceIdentifiers\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listInstanceIdentifiersNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListInstanceIdentifiersNextOptionalParams,\n  ): Promise<WebAppsListInstanceIdentifiersNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listInstanceIdentifiersNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListInstanceProcessesNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param nextLink The nextLink from the previous successful call to the ListInstanceProcesses method.\n   * @param options The options parameters.\n   */\n  private _listInstanceProcessesNext(\n    resourceGroupName: string,\n    name: string,\n    instanceId: string,\n    nextLink: string,\n    options?: WebAppsListInstanceProcessesNextOptionalParams,\n  ): Promise<WebAppsListInstanceProcessesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, instanceId, nextLink, options },\n      listInstanceProcessesNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListInstanceProcessModulesNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param nextLink The nextLink from the previous successful call to the ListInstanceProcessModules\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listInstanceProcessModulesNext(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    instanceId: string,\n    nextLink: string,\n    options?: WebAppsListInstanceProcessModulesNextOptionalParams,\n  ): Promise<WebAppsListInstanceProcessModulesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, instanceId, nextLink, options },\n      listInstanceProcessModulesNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListInstanceProcessThreadsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param nextLink The nextLink from the previous successful call to the ListInstanceProcessThreads\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listInstanceProcessThreadsNext(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    instanceId: string,\n    nextLink: string,\n    options?: WebAppsListInstanceProcessThreadsNextOptionalParams,\n  ): Promise<WebAppsListInstanceProcessThreadsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, instanceId, nextLink, options },\n      listInstanceProcessThreadsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListSiteBackupsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param nextLink The nextLink from the previous successful call to the ListSiteBackups method.\n   * @param options The options parameters.\n   */\n  private _listSiteBackupsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListSiteBackupsNextOptionalParams,\n  ): Promise<WebAppsListSiteBackupsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listSiteBackupsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListPerfMonCountersNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param nextLink The nextLink from the previous successful call to the ListPerfMonCounters method.\n   * @param options The options parameters.\n   */\n  private _listPerfMonCountersNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListPerfMonCountersNextOptionalParams,\n  ): Promise<WebAppsListPerfMonCountersNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listPerfMonCountersNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetPrivateEndpointConnectionListNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the site.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 GetPrivateEndpointConnectionList method.\n   * @param options The options parameters.\n   */\n  private _getPrivateEndpointConnectionListNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsGetPrivateEndpointConnectionListNextOptionalParams,\n  ): Promise<WebAppsGetPrivateEndpointConnectionListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      getPrivateEndpointConnectionListNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListProcessesNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param nextLink The nextLink from the previous successful call to the ListProcesses method.\n   * @param options The options parameters.\n   */\n  private _listProcessesNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListProcessesNextOptionalParams,\n  ): Promise<WebAppsListProcessesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listProcessesNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListProcessModulesNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param nextLink The nextLink from the previous successful call to the ListProcessModules method.\n   * @param options The options parameters.\n   */\n  private _listProcessModulesNext(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    nextLink: string,\n    options?: WebAppsListProcessModulesNextOptionalParams,\n  ): Promise<WebAppsListProcessModulesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, nextLink, options },\n      listProcessModulesNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListProcessThreadsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param nextLink The nextLink from the previous successful call to the ListProcessThreads method.\n   * @param options The options parameters.\n   */\n  private _listProcessThreadsNext(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    nextLink: string,\n    options?: WebAppsListProcessThreadsNextOptionalParams,\n  ): Promise<WebAppsListProcessThreadsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, nextLink, options },\n      listProcessThreadsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListPublicCertificatesNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param nextLink The nextLink from the previous successful call to the ListPublicCertificates method.\n   * @param options The options parameters.\n   */\n  private _listPublicCertificatesNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListPublicCertificatesNextOptionalParams,\n  ): Promise<WebAppsListPublicCertificatesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listPublicCertificatesNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListSiteContainersNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param nextLink The nextLink from the previous successful call to the ListSiteContainers method.\n   * @param options The options parameters.\n   */\n  private _listSiteContainersNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListSiteContainersNextOptionalParams,\n  ): Promise<WebAppsListSiteContainersNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listSiteContainersNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListSiteExtensionsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param nextLink The nextLink from the previous successful call to the ListSiteExtensions method.\n   * @param options The options parameters.\n   */\n  private _listSiteExtensionsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListSiteExtensionsNextOptionalParams,\n  ): Promise<WebAppsListSiteExtensionsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listSiteExtensionsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListSlotsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param nextLink The nextLink from the previous successful call to the ListSlots method.\n   * @param options The options parameters.\n   */\n  private _listSlotsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListSlotsNextOptionalParams,\n  ): Promise<WebAppsListSlotsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listSlotsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListBackupsSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get backups of the\n   *             production slot.\n   * @param nextLink The nextLink from the previous successful call to the ListBackupsSlot method.\n   * @param options The options parameters.\n   */\n  private _listBackupsSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListBackupsSlotNextOptionalParams,\n  ): Promise<WebAppsListBackupsSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listBackupsSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListBasicPublishingCredentialsPoliciesSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListBasicPublishingCredentialsPoliciesSlot method.\n   * @param options The options parameters.\n   */\n  private _listBasicPublishingCredentialsPoliciesSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListBasicPublishingCredentialsPoliciesSlotNextOptionalParams,\n  ): Promise<WebAppsListBasicPublishingCredentialsPoliciesSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listBasicPublishingCredentialsPoliciesSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListConfigurationsSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will return\n   *             configuration for the production slot.\n   * @param nextLink The nextLink from the previous successful call to the ListConfigurationsSlot method.\n   * @param options The options parameters.\n   */\n  private _listConfigurationsSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListConfigurationsSlotNextOptionalParams,\n  ): Promise<WebAppsListConfigurationsSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listConfigurationsSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetAppSettingsKeyVaultReferencesSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 GetAppSettingsKeyVaultReferencesSlot method.\n   * @param options The options parameters.\n   */\n  private _getAppSettingsKeyVaultReferencesSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsGetAppSettingsKeyVaultReferencesSlotNextOptionalParams,\n  ): Promise<WebAppsGetAppSettingsKeyVaultReferencesSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      getAppSettingsKeyVaultReferencesSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetSiteConnectionStringKeyVaultReferencesSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 GetSiteConnectionStringKeyVaultReferencesSlot method.\n   * @param options The options parameters.\n   */\n  private _getSiteConnectionStringKeyVaultReferencesSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsGetSiteConnectionStringKeyVaultReferencesSlotNextOptionalParams,\n  ): Promise<WebAppsGetSiteConnectionStringKeyVaultReferencesSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      getSiteConnectionStringKeyVaultReferencesSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListConfigurationSnapshotInfoSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will return\n   *             configuration for the production slot.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListConfigurationSnapshotInfoSlot method.\n   * @param options The options parameters.\n   */\n  private _listConfigurationSnapshotInfoSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListConfigurationSnapshotInfoSlotNextOptionalParams,\n  ): Promise<WebAppsListConfigurationSnapshotInfoSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listConfigurationSnapshotInfoSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListContinuousWebJobsSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment\n   *             for the production slot.\n   * @param nextLink The nextLink from the previous successful call to the ListContinuousWebJobsSlot\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listContinuousWebJobsSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListContinuousWebJobsSlotNextOptionalParams,\n  ): Promise<WebAppsListContinuousWebJobsSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listContinuousWebJobsSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListSlotSiteDeploymentStatusesSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get the deployment\n   *             status for the production slot.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListSlotSiteDeploymentStatusesSlot method.\n   * @param options The options parameters.\n   */\n  private _listSlotSiteDeploymentStatusesSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListSlotSiteDeploymentStatusesSlotNextOptionalParams,\n  ): Promise<WebAppsListSlotSiteDeploymentStatusesSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listSlotSiteDeploymentStatusesSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListDeploymentsSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param nextLink The nextLink from the previous successful call to the ListDeploymentsSlot method.\n   * @param options The options parameters.\n   */\n  private _listDeploymentsSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListDeploymentsSlotNextOptionalParams,\n  ): Promise<WebAppsListDeploymentsSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listDeploymentsSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListDomainOwnershipIdentifiersSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will delete the binding\n   *             for the production slot.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListDomainOwnershipIdentifiersSlot method.\n   * @param options The options parameters.\n   */\n  private _listDomainOwnershipIdentifiersSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListDomainOwnershipIdentifiersSlotNextOptionalParams,\n  ): Promise<WebAppsListDomainOwnershipIdentifiersSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listDomainOwnershipIdentifiersSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListInstanceFunctionsSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot.\n   * @param nextLink The nextLink from the previous successful call to the ListInstanceFunctionsSlot\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listInstanceFunctionsSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListInstanceFunctionsSlotNextOptionalParams,\n  ): Promise<WebAppsListInstanceFunctionsSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listInstanceFunctionsSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListHostNameBindingsSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API gets hostname bindings\n   *             for the production slot.\n   * @param nextLink The nextLink from the previous successful call to the ListHostNameBindingsSlot\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listHostNameBindingsSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListHostNameBindingsSlotNextOptionalParams,\n  ): Promise<WebAppsListHostNameBindingsSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listHostNameBindingsSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListInstanceIdentifiersSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API gets the production\n   *             slot instances.\n   * @param nextLink The nextLink from the previous successful call to the ListInstanceIdentifiersSlot\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listInstanceIdentifiersSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListInstanceIdentifiersSlotNextOptionalParams,\n  ): Promise<WebAppsListInstanceIdentifiersSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listInstanceIdentifiersSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListInstanceProcessesSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param nextLink The nextLink from the previous successful call to the ListInstanceProcessesSlot\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listInstanceProcessesSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    instanceId: string,\n    nextLink: string,\n    options?: WebAppsListInstanceProcessesSlotNextOptionalParams,\n  ): Promise<WebAppsListInstanceProcessesSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, instanceId, nextLink, options },\n      listInstanceProcessesSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListInstanceProcessModulesSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param nextLink The nextLink from the previous successful call to the ListInstanceProcessModulesSlot\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listInstanceProcessModulesSlotNext(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    instanceId: string,\n    nextLink: string,\n    options?: WebAppsListInstanceProcessModulesSlotNextOptionalParams,\n  ): Promise<WebAppsListInstanceProcessModulesSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        processId,\n        slot,\n        instanceId,\n        nextLink,\n        options,\n      },\n      listInstanceProcessModulesSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListInstanceProcessThreadsSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param instanceId ID of a specific scaled-out instance. This is the value of the name property in\n   *                   the JSON response from \"GET api/sites/{siteName}/instances\".\n   * @param nextLink The nextLink from the previous successful call to the ListInstanceProcessThreadsSlot\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listInstanceProcessThreadsSlotNext(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    instanceId: string,\n    nextLink: string,\n    options?: WebAppsListInstanceProcessThreadsSlotNextOptionalParams,\n  ): Promise<WebAppsListInstanceProcessThreadsSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        processId,\n        slot,\n        instanceId,\n        nextLink,\n        options,\n      },\n      listInstanceProcessThreadsSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListSiteBackupsSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get backups of the\n   *             production slot.\n   * @param nextLink The nextLink from the previous successful call to the ListSiteBackupsSlot method.\n   * @param options The options parameters.\n   */\n  private _listSiteBackupsSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListSiteBackupsSlotNextOptionalParams,\n  ): Promise<WebAppsListSiteBackupsSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listSiteBackupsSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListPerfMonCountersSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param nextLink The nextLink from the previous successful call to the ListPerfMonCountersSlot\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listPerfMonCountersSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListPerfMonCountersSlotNextOptionalParams,\n  ): Promise<WebAppsListPerfMonCountersSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listPerfMonCountersSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetPrivateEndpointConnectionListSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the site.\n   * @param slot Name of the site deployment slot.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 GetPrivateEndpointConnectionListSlot method.\n   * @param options The options parameters.\n   */\n  private _getPrivateEndpointConnectionListSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsGetPrivateEndpointConnectionListSlotNextOptionalParams,\n  ): Promise<WebAppsGetPrivateEndpointConnectionListSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      getPrivateEndpointConnectionListSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListProcessesSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param nextLink The nextLink from the previous successful call to the ListProcessesSlot method.\n   * @param options The options parameters.\n   */\n  private _listProcessesSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListProcessesSlotNextOptionalParams,\n  ): Promise<WebAppsListProcessesSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listProcessesSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListProcessModulesSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param nextLink The nextLink from the previous successful call to the ListProcessModulesSlot method.\n   * @param options The options parameters.\n   */\n  private _listProcessModulesSlotNext(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListProcessModulesSlotNextOptionalParams,\n  ): Promise<WebAppsListProcessModulesSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, slot, nextLink, options },\n      listProcessModulesSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListProcessThreadsSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param processId PID.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param nextLink The nextLink from the previous successful call to the ListProcessThreadsSlot method.\n   * @param options The options parameters.\n   */\n  private _listProcessThreadsSlotNext(\n    resourceGroupName: string,\n    name: string,\n    processId: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListProcessThreadsSlotNextOptionalParams,\n  ): Promise<WebAppsListProcessThreadsSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, processId, slot, nextLink, options },\n      listProcessThreadsSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListPublicCertificatesSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API gets hostname bindings\n   *             for the production slot.\n   * @param nextLink The nextLink from the previous successful call to the ListPublicCertificatesSlot\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listPublicCertificatesSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListPublicCertificatesSlotNextOptionalParams,\n  ): Promise<WebAppsListPublicCertificatesSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listPublicCertificatesSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListSiteContainersSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get a list of site\n   *             containers for the production slot.\n   * @param nextLink The nextLink from the previous successful call to the ListSiteContainersSlot method.\n   * @param options The options parameters.\n   */\n  private _listSiteContainersSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListSiteContainersSlotNextOptionalParams,\n  ): Promise<WebAppsListSiteContainersSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listSiteContainersSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListSiteExtensionsSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production\n   *             slot.\n   * @param nextLink The nextLink from the previous successful call to the ListSiteExtensionsSlot method.\n   * @param options The options parameters.\n   */\n  private _listSiteExtensionsSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListSiteExtensionsSlotNextOptionalParams,\n  ): Promise<WebAppsListSiteExtensionsSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listSiteExtensionsSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListSlotDifferencesSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the source slot. If a slot is not specified, the production slot is used as the\n   *             source slot.\n   * @param slotSwapEntity JSON object that contains the target slot name. See example.\n   * @param nextLink The nextLink from the previous successful call to the ListSlotDifferencesSlot\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listSlotDifferencesSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    slotSwapEntity: CsmSlotEntity,\n    nextLink: string,\n    options?: WebAppsListSlotDifferencesSlotNextOptionalParams,\n  ): Promise<WebAppsListSlotDifferencesSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, slotSwapEntity, nextLink, options },\n      listSlotDifferencesSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListSnapshotsSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Website Name.\n   * @param slot Website Slot.\n   * @param nextLink The nextLink from the previous successful call to the ListSnapshotsSlot method.\n   * @param options The options parameters.\n   */\n  private _listSnapshotsSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListSnapshotsSlotNextOptionalParams,\n  ): Promise<WebAppsListSnapshotsSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listSnapshotsSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListSnapshotsFromDRSecondarySlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Website Name.\n   * @param slot Website Slot.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListSnapshotsFromDRSecondarySlot method.\n   * @param options The options parameters.\n   */\n  private _listSnapshotsFromDRSecondarySlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListSnapshotsFromDRSecondarySlotNextOptionalParams,\n  ): Promise<WebAppsListSnapshotsFromDRSecondarySlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listSnapshotsFromDRSecondarySlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListTriggeredWebJobsSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API deletes a deployment\n   *             for the production slot.\n   * @param nextLink The nextLink from the previous successful call to the ListTriggeredWebJobsSlot\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listTriggeredWebJobsSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListTriggeredWebJobsSlotNextOptionalParams,\n  ): Promise<WebAppsListTriggeredWebJobsSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listTriggeredWebJobsSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListTriggeredWebJobHistorySlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API uses the production\n   *             slot.\n   * @param nextLink The nextLink from the previous successful call to the ListTriggeredWebJobHistorySlot\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listTriggeredWebJobHistorySlotNext(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListTriggeredWebJobHistorySlotNextOptionalParams,\n  ): Promise<WebAppsListTriggeredWebJobHistorySlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, slot, nextLink, options },\n      listTriggeredWebJobHistorySlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListUsagesSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API will get quota\n   *             information of the production slot.\n   * @param nextLink The nextLink from the previous successful call to the ListUsagesSlot method.\n   * @param options The options parameters.\n   */\n  private _listUsagesSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListUsagesSlotNextOptionalParams,\n  ): Promise<WebAppsListUsagesSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listUsagesSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListWebJobsSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot. If a slot is not specified, the API returns deployments for\n   *             the production slot.\n   * @param nextLink The nextLink from the previous successful call to the ListWebJobsSlot method.\n   * @param options The options parameters.\n   */\n  private _listWebJobsSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListWebJobsSlotNextOptionalParams,\n  ): Promise<WebAppsListWebJobsSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listWebJobsSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListSlotDifferencesFromProductionNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param slotSwapEntity JSON object that contains the target slot name. See example.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListSlotDifferencesFromProduction method.\n   * @param options The options parameters.\n   */\n  private _listSlotDifferencesFromProductionNext(\n    resourceGroupName: string,\n    name: string,\n    slotSwapEntity: CsmSlotEntity,\n    nextLink: string,\n    options?: WebAppsListSlotDifferencesFromProductionNextOptionalParams,\n  ): Promise<WebAppsListSlotDifferencesFromProductionNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slotSwapEntity, nextLink, options },\n      listSlotDifferencesFromProductionNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListSnapshotsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Website Name.\n   * @param nextLink The nextLink from the previous successful call to the ListSnapshots method.\n   * @param options The options parameters.\n   */\n  private _listSnapshotsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListSnapshotsNextOptionalParams,\n  ): Promise<WebAppsListSnapshotsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listSnapshotsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListSnapshotsFromDRSecondaryNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Website Name.\n   * @param nextLink The nextLink from the previous successful call to the ListSnapshotsFromDRSecondary\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listSnapshotsFromDRSecondaryNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListSnapshotsFromDRSecondaryNextOptionalParams,\n  ): Promise<WebAppsListSnapshotsFromDRSecondaryNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listSnapshotsFromDRSecondaryNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListTriggeredWebJobsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param nextLink The nextLink from the previous successful call to the ListTriggeredWebJobs method.\n   * @param options The options parameters.\n   */\n  private _listTriggeredWebJobsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListTriggeredWebJobsNextOptionalParams,\n  ): Promise<WebAppsListTriggeredWebJobsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listTriggeredWebJobsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListTriggeredWebJobHistoryNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param webJobName Name of Web Job.\n   * @param nextLink The nextLink from the previous successful call to the ListTriggeredWebJobHistory\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listTriggeredWebJobHistoryNext(\n    resourceGroupName: string,\n    name: string,\n    webJobName: string,\n    nextLink: string,\n    options?: WebAppsListTriggeredWebJobHistoryNextOptionalParams,\n  ): Promise<WebAppsListTriggeredWebJobHistoryNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, webJobName, nextLink, options },\n      listTriggeredWebJobHistoryNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListUsagesNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the app.\n   * @param nextLink The nextLink from the previous successful call to the ListUsages method.\n   * @param options The options parameters.\n   */\n  private _listUsagesNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListUsagesNextOptionalParams,\n  ): Promise<WebAppsListUsagesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listUsagesNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListWebJobsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param nextLink The nextLink from the previous successful call to the ListWebJobs method.\n   * @param options The options parameters.\n   */\n  private _listWebJobsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListWebJobsNextOptionalParams,\n  ): Promise<WebAppsListWebJobsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listWebJobsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListInstanceWorkflowsSlotNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param slot Name of the deployment slot.\n   * @param nextLink The nextLink from the previous successful call to the ListInstanceWorkflowsSlot\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listInstanceWorkflowsSlotNext(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    nextLink: string,\n    options?: WebAppsListInstanceWorkflowsSlotNextOptionalParams,\n  ): Promise<WebAppsListInstanceWorkflowsSlotNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, slot, nextLink, options },\n      listInstanceWorkflowsSlotNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListWorkflowsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param nextLink The nextLink from the previous successful call to the ListWorkflows method.\n   * @param options The options parameters.\n   */\n  private _listWorkflowsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: WebAppsListWorkflowsNextOptionalParams,\n  ): Promise<WebAppsListWorkflowsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listWorkflowsNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Web/sites\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.includeSlots],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Site,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Site,\n    },\n    201: {\n      bodyMapper: Mappers.Site,\n    },\n    202: {\n      bodyMapper: Mappers.Site,\n    },\n    204: {\n      bodyMapper: Mappers.Site,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.siteEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.deleteMetrics,\n    Parameters.deleteEmptyServerFarm,\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Site,\n    },\n    202: {\n      bodyMapper: Mappers.Site,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.siteEnvelope1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst analyzeCustomHostnameOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/analyzeCustomHostname\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomHostnameAnalysisResult,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.hostName],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst applySlotConfigToProductionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/applySlotConfig\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.slotSwapEntity,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst backupOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backup\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupItem,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.request1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listBackupsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupItemCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getBackupStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupItem,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.backupId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteBackupOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.backupId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listBackupStatusSecretsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}/list\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupItem,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.request1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.backupId,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst restoreOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}/restore\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.request2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.backupId,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listBasicPublishingCredentialsPoliciesOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/basicPublishingCredentialsPolicies\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PublishingCredentialsPoliciesCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getFtpAllowedOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/basicPublishingCredentialsPolicies/ftp\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CsmPublishingCredentialsPoliciesEntity,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateFtpAllowedOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/basicPublishingCredentialsPolicies/ftp\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CsmPublishingCredentialsPoliciesEntity,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.csmPublishingAccessPoliciesEntity,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getScmAllowedOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/basicPublishingCredentialsPolicies/scm\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CsmPublishingCredentialsPoliciesEntity,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateScmAllowedOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/basicPublishingCredentialsPolicies/scm\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CsmPublishingCredentialsPoliciesEntity,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.csmPublishingAccessPoliciesEntity,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listConfigurationsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteConfigResourceCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateApplicationSettingsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/appsettings\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StringDictionary,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.appSettings,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listApplicationSettingsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/appsettings/list\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StringDictionary,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateAuthSettingsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettings\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteAuthSettings,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.siteAuthSettings,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getAuthSettingsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettings/list\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteAuthSettings,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAuthSettingsV2WithoutSecretsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettingsV2\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteAuthSettingsV2,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateAuthSettingsV2OperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettingsV2\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteAuthSettingsV2,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.siteAuthSettingsV2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getAuthSettingsV2OperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettingsV2/list\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteAuthSettingsV2,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateAzureStorageAccountsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/azurestorageaccounts\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AzureStoragePropertyDictionaryResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.azureStorageAccounts,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listAzureStorageAccountsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/azurestorageaccounts/list\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AzureStoragePropertyDictionaryResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateBackupConfigurationOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/backup\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupRequest,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.request1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteBackupConfigurationOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/backup\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getBackupConfigurationOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/backup/list\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupRequest,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAppSettingsKeyVaultReferencesOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/configreferences/appsettings\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.ApiKVReferenceCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getAppSettingKeyVaultReferenceOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/configreferences/appsettings/{appSettingKey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApiKVReference,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.appSettingKey,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSiteConnectionStringKeyVaultReferencesOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/configreferences/connectionstrings\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.ApiKVReferenceCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getSiteConnectionStringKeyVaultReferenceOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/configreferences/connectionstrings/{connectionStringKey}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.ApiKVReference,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.connectionStringKey,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst updateConnectionStringsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/connectionstrings\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectionStringDictionary,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.connectionStrings,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listConnectionStringsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/connectionstrings/list\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectionStringDictionary,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDiagnosticLogsConfigurationOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/logs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteLogsConfig,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateDiagnosticLogsConfigOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/logs\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteLogsConfig,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.siteLogsConfig,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst updateMetadataOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/metadata\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StringDictionary,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.metadata,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listMetadataOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/metadata/list\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StringDictionary,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listPublishingCredentialsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/publishingcredentials/list\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.User,\n    },\n    201: {\n      bodyMapper: Mappers.User,\n    },\n    202: {\n      bodyMapper: Mappers.User,\n    },\n    204: {\n      bodyMapper: Mappers.User,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateSitePushSettingsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/pushsettings\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PushSettings,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.pushSettings,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listSitePushSettingsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/pushsettings/list\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PushSettings,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSlotConfigurationNamesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/slotConfigNames\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SlotConfigNamesResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateSlotConfigurationNamesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/slotConfigNames\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SlotConfigNamesResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.slotConfigNames,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getConfigurationOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteConfigResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateConfigurationOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteConfigResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.siteConfig,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst updateConfigurationOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteConfigResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.siteConfig,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listConfigurationSnapshotInfoOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web/snapshots\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteConfigurationSnapshotInfoCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getConfigurationSnapshotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web/snapshots/{snapshotId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteConfigResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.snapshotId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst recoverSiteConfigurationSnapshotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web/snapshots/{snapshotId}/recover\",\n    httpMethod: \"POST\",\n    responses: {\n      204: {},\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.snapshotId,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getWebSiteContainerLogsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/containerlogs\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n    },\n    204: {},\n    default: {},\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept1],\n  serializer,\n};\nconst getContainerLogsZipOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/containerlogs/zip/download\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n    },\n    204: {},\n    default: {},\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept2],\n  serializer,\n};\nconst listContinuousWebJobsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/continuouswebjobs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContinuousWebJobCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContinuousWebJobOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/continuouswebjobs/{webJobName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContinuousWebJob,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.webJobName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteContinuousWebJobOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/continuouswebjobs/{webJobName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.webJobName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst startContinuousWebJobOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/continuouswebjobs/{webJobName}/start\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.webJobName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst stopContinuousWebJobOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/continuouswebjobs/{webJobName}/stop\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.webJobName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listProductionSiteDeploymentStatusesOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deploymentStatus\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.CsmDeploymentStatusCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getProductionSiteDeploymentStatusOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deploymentStatus/{deploymentStatusId}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.CsmDeploymentStatus,\n      },\n      201: {\n        bodyMapper: Mappers.CsmDeploymentStatus,\n      },\n      202: {\n        bodyMapper: Mappers.CsmDeploymentStatus,\n      },\n      204: {\n        bodyMapper: Mappers.CsmDeploymentStatus,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.deploymentStatusId,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listDeploymentsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDeploymentOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Deployment,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.id,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createDeploymentOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Deployment,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.deployment,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.id,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteDeploymentOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.id,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listDeploymentLogOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}/log\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Deployment,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.id,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst discoverBackupOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/discoverbackup\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestoreRequest,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.request2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listDomainOwnershipIdentifiersOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/domainOwnershipIdentifiers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IdentifierCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDomainOwnershipIdentifierOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Identifier,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.domainOwnershipIdentifierName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateDomainOwnershipIdentifierOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.Identifier,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.domainOwnershipIdentifier1,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.domainOwnershipIdentifierName,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst deleteDomainOwnershipIdentifierOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.domainOwnershipIdentifierName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateDomainOwnershipIdentifierOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Identifier,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.domainOwnershipIdentifier1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.domainOwnershipIdentifierName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getMSDeployStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/extensions/MSDeploy\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MSDeployStatus,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createMSDeployOperationOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/extensions/MSDeploy\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MSDeployStatus,\n    },\n    201: {\n      bodyMapper: Mappers.MSDeployStatus,\n    },\n    202: {\n      bodyMapper: Mappers.MSDeployStatus,\n    },\n    204: {\n      bodyMapper: Mappers.MSDeployStatus,\n    },\n    409: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.mSDeploy,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getMSDeployLogOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/extensions/MSDeploy/log\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MSDeployLog,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOneDeployStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/extensions/onedeploy\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOneDeployOperationOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/extensions/onedeploy\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listFunctionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionEnvelopeCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getFunctionsAdminTokenOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/admin/token\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"String\" } },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getFunctionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/{functionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionEnvelope,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.functionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createFunctionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/{functionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionEnvelope,\n    },\n    201: {\n      bodyMapper: Mappers.FunctionEnvelope,\n    },\n    202: {\n      bodyMapper: Mappers.FunctionEnvelope,\n    },\n    204: {\n      bodyMapper: Mappers.FunctionEnvelope,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.functionEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.functionName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteFunctionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/{functionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.functionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateFunctionSecretOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/{functionName}/keys/{keyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyInfo,\n    },\n    201: {\n      bodyMapper: Mappers.KeyInfo,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.key,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.functionName,\n    Parameters.keyName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteFunctionSecretOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/{functionName}/keys/{keyName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.functionName,\n    Parameters.keyName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listFunctionKeysOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/{functionName}/listkeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StringDictionary,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.functionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listFunctionSecretsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/{functionName}/listsecrets\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionSecrets,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.functionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listHostKeysOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/host/default/listkeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HostKeys,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSyncStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/host/default/listsyncstatus\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst syncFunctionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/host/default/sync\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateHostSecretOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/host/default/{keyType}/{keyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyInfo,\n    },\n    201: {\n      bodyMapper: Mappers.KeyInfo,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.key,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.keyName,\n    Parameters.keyType,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteHostSecretOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/host/default/{keyType}/{keyName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.keyName,\n    Parameters.keyType,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listHostNameBindingsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HostNameBindingCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getHostNameBindingOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HostNameBinding,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.hostName1,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateHostNameBindingOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HostNameBinding,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.hostNameBinding,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.hostName1,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteHostNameBindingOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.hostName1,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getHybridConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HybridConnection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.namespaceName,\n    Parameters.relayName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateHybridConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HybridConnection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.connectionEnvelope1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.namespaceName,\n    Parameters.relayName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteHybridConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.namespaceName,\n    Parameters.relayName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateHybridConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HybridConnection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.connectionEnvelope1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.namespaceName,\n    Parameters.relayName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listHybridConnectionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridConnectionRelays\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HybridConnection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listRelayServiceConnectionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RelayServiceConnectionEntity,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getRelayServiceConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RelayServiceConnectionEntity,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.entityName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateRelayServiceConnectionOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.RelayServiceConnectionEntity,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.connectionEnvelope2,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.entityName,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst deleteRelayServiceConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.entityName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateRelayServiceConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RelayServiceConnectionEntity,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.connectionEnvelope2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.entityName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listInstanceIdentifiersOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppInstanceStatusCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getInstanceInfoOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebSiteInstanceStatus,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.instanceId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getInstanceMsDeployStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/extensions/MSDeploy\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MSDeployStatus,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.instanceId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createInstanceMSDeployOperationOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/extensions/MSDeploy\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MSDeployStatus,\n    },\n    201: {\n      bodyMapper: Mappers.MSDeployStatus,\n    },\n    202: {\n      bodyMapper: Mappers.MSDeployStatus,\n    },\n    204: {\n      bodyMapper: Mappers.MSDeployStatus,\n    },\n    409: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.mSDeploy,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.instanceId,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getInstanceMSDeployLogOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/extensions/MSDeploy/log\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MSDeployLog,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.instanceId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listInstanceProcessesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.instanceId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getInstanceProcessOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes/{processId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessInfo,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.instanceId,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteInstanceProcessOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes/{processId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.instanceId,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getInstanceProcessDumpOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes/{processId}/dump\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.instanceId,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listInstanceProcessModulesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes/{processId}/modules\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessModuleInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.instanceId,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getInstanceProcessModuleOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes/{processId}/modules/{baseAddress}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessModuleInfo,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.instanceId,\n    Parameters.processId,\n    Parameters.baseAddress,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listInstanceProcessThreadsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes/{processId}/threads\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessThreadInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.instanceId,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst isCloneableOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/iscloneable\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteCloneability,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSiteBackupsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/listbackups\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupItemCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSyncFunctionTriggersOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/listsyncfunctiontriggerstatus\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionSecrets,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateMachineKeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/updatemachinekey\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst migrateStorageOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/migrate\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageMigrationResponse,\n    },\n    201: {\n      bodyMapper: Mappers.StorageMigrationResponse,\n    },\n    202: {\n      bodyMapper: Mappers.StorageMigrationResponse,\n    },\n    204: {\n      bodyMapper: Mappers.StorageMigrationResponse,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.migrationOptions,\n  queryParameters: [Parameters.apiVersion, Parameters.subscriptionName],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst migrateMySqlOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/migratemysql\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Operation,\n    },\n    201: {\n      bodyMapper: Mappers.Operation,\n    },\n    202: {\n      bodyMapper: Mappers.Operation,\n    },\n    204: {\n      bodyMapper: Mappers.Operation,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.migrationRequestEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getMigrateMySqlStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/migratemysql/status\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MigrateMySqlStatus,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSwiftVirtualNetworkConnectionOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkConfig/virtualNetwork\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.SwiftVirtualNetwork,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst createOrUpdateSwiftVirtualNetworkConnectionWithCheckOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkConfig/virtualNetwork\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.SwiftVirtualNetwork,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.connectionEnvelope3,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst deleteSwiftVirtualNetworkOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkConfig/virtualNetwork\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateSwiftVirtualNetworkConnectionWithCheckOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkConfig/virtualNetwork\",\n    httpMethod: \"PATCH\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.SwiftVirtualNetwork,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.connectionEnvelope3,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst listNetworkFeaturesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkFeatures/{view}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NetworkFeatures,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.view,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNetworkTraceOperationOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkTrace/operationresults/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n        },\n      },\n    },\n    202: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n        },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst startWebSiteNetworkTraceOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkTrace/start\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"String\" } },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.durationInSeconds,\n    Parameters.maxFrameLength,\n    Parameters.sasUrl,\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst startWebSiteNetworkTraceOperationOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkTrace/startOperation\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {\n        bodyMapper: {\n          type: {\n            name: \"Sequence\",\n            element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n          },\n        },\n      },\n      201: {\n        bodyMapper: {\n          type: {\n            name: \"Sequence\",\n            element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n          },\n        },\n      },\n      202: {\n        bodyMapper: {\n          type: {\n            name: \"Sequence\",\n            element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n          },\n        },\n      },\n      204: {\n        bodyMapper: {\n          type: {\n            name: \"Sequence\",\n            element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n          },\n        },\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [\n      Parameters.apiVersion,\n      Parameters.durationInSeconds,\n      Parameters.maxFrameLength,\n      Parameters.sasUrl,\n    ],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst stopWebSiteNetworkTraceOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkTrace/stop\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNetworkTracesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkTrace/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n        },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNetworkTraceOperationV2OperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkTraces/current/operationresults/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n        },\n      },\n    },\n    202: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n        },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNetworkTracesV2OperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkTraces/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n        },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst generateNewSitePublishingPasswordOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/newpassword\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {},\n      204: {},\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listPerfMonCountersOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/perfcounters\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PerfMonCounterCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSitePhpErrorLogFlagOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/phplogging\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SitePhpErrorLogFlag,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listPremierAddOnsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PremierAddOn,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getPremierAddOnOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PremierAddOn,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.premierAddOnName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst addPremierAddOnOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PremierAddOn,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.premierAddOn,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.premierAddOnName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deletePremierAddOnOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.premierAddOnName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updatePremierAddOnOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PremierAddOn,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.premierAddOn1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.premierAddOnName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getPrivateAccessOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateAccess/virtualNetworks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateAccess,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst putPrivateAccessVnetOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateAccess/virtualNetworks\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateAccess,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.access,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getPrivateEndpointConnectionListOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateEndpointConnections\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PrivateEndpointConnectionCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getPrivateEndpointConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemotePrivateEndpointConnectionARMResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.privateEndpointConnectionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst approveOrRejectPrivateEndpointConnectionOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateEndpointConnections/{privateEndpointConnectionName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.RemotePrivateEndpointConnectionARMResource,\n      },\n      201: {\n        bodyMapper: Mappers.RemotePrivateEndpointConnectionARMResource,\n      },\n      202: {\n        bodyMapper: Mappers.RemotePrivateEndpointConnectionARMResource,\n      },\n      204: {\n        bodyMapper: Mappers.RemotePrivateEndpointConnectionARMResource,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.privateEndpointWrapper,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.privateEndpointConnectionName,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst deletePrivateEndpointConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n      },\n    },\n    201: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n      },\n    },\n    202: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n      },\n    },\n    204: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.privateEndpointConnectionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getPrivateLinkResourcesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateLinkResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResourcesWrapper,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listProcessesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getProcessOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessInfo,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteProcessOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getProcessDumpOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}/dump\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listProcessModulesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}/modules\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessModuleInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getProcessModuleOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}/modules/{baseAddress}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessModuleInfo,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.processId,\n    Parameters.baseAddress,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listProcessThreadsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}/threads\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessThreadInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listPublicCertificatesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publicCertificates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PublicCertificateCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getPublicCertificateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publicCertificates/{publicCertificateName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PublicCertificate,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.publicCertificateName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdatePublicCertificateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publicCertificates/{publicCertificateName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PublicCertificate,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.publicCertificate,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.publicCertificateName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deletePublicCertificateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publicCertificates/{publicCertificateName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.publicCertificateName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listPublishingProfileXmlWithSecretsOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publishxml\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {\n        bodyMapper: {\n          type: { name: \"Stream\" },\n          serializedName: \"parsedResponse\",\n        },\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.publishingProfileOptions,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.contentType, Parameters.accept3],\n    mediaType: \"json\",\n    serializer,\n  };\nconst resetProductionSlotConfigOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/resetSlotConfig\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst restartOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/restart\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.softRestart,\n    Parameters.synchronous,\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst restoreFromBackupBlobOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/restoreFromBackupBlob\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.request2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst restoreFromDeletedAppOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/restoreFromDeletedApp\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.restoreRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst restoreSnapshotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/restoreSnapshot\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.restoreRequest1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listSiteContainersOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sitecontainers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteContainerCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSiteContainerOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sitecontainers/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteContainer,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.containerName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateSiteContainerOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sitecontainers/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteContainer,\n    },\n    201: {\n      bodyMapper: Mappers.SiteContainer,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.request3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.containerName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteSiteContainerOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sitecontainers/{containerName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.containerName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSiteExtensionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/siteextensions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteExtensionInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSiteExtensionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/siteextensions/{siteExtensionId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteExtensionInfo,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.siteExtensionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst installSiteExtensionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/siteextensions/{siteExtensionId}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteExtensionInfo,\n    },\n    201: {\n      bodyMapper: Mappers.SiteExtensionInfo,\n    },\n    202: {\n      bodyMapper: Mappers.SiteExtensionInfo,\n    },\n    204: {\n      bodyMapper: Mappers.SiteExtensionInfo,\n    },\n    429: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.siteExtensionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteSiteExtensionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/siteextensions/{siteExtensionId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.siteExtensionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSlotsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Site,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Site,\n    },\n    201: {\n      bodyMapper: Mappers.Site,\n    },\n    202: {\n      bodyMapper: Mappers.Site,\n    },\n    204: {\n      bodyMapper: Mappers.Site,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.siteEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.deleteMetrics,\n    Parameters.deleteEmptyServerFarm,\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Site,\n    },\n    202: {\n      bodyMapper: Mappers.Site,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.siteEnvelope1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst analyzeCustomHostnameSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/analyzeCustomHostname\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomHostnameAnalysisResult,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.hostName],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst applySlotConfigurationSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/applySlotConfig\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.slotSwapEntity,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst backupSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backup\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupItem,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.request1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listBackupsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupItemCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getBackupStatusSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupItem,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.backupId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteBackupSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.backupId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listBackupStatusSecretsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}/list\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupItem,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.request1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.backupId,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst restoreSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}/restore\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.request2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.backupId,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listBasicPublishingCredentialsPoliciesSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/basicPublishingCredentialsPolicies\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PublishingCredentialsPoliciesCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getFtpAllowedSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/basicPublishingCredentialsPolicies/ftp\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CsmPublishingCredentialsPoliciesEntity,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateFtpAllowedSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/basicPublishingCredentialsPolicies/ftp\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CsmPublishingCredentialsPoliciesEntity,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.csmPublishingAccessPoliciesEntity,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getScmAllowedSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/basicPublishingCredentialsPolicies/scm\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CsmPublishingCredentialsPoliciesEntity,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateScmAllowedSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/basicPublishingCredentialsPolicies/scm\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CsmPublishingCredentialsPoliciesEntity,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.csmPublishingAccessPoliciesEntity,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listConfigurationsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteConfigResourceCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateApplicationSettingsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/appsettings\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StringDictionary,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.appSettings,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listApplicationSettingsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/appsettings/list\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StringDictionary,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateAuthSettingsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettings\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteAuthSettings,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.siteAuthSettings,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getAuthSettingsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettings/list\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteAuthSettings,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAuthSettingsV2WithoutSecretsSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettingsV2\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.SiteAuthSettingsV2,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst updateAuthSettingsV2SlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettingsV2\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteAuthSettingsV2,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.siteAuthSettingsV2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getAuthSettingsV2SlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettingsV2/list\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteAuthSettingsV2,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateAzureStorageAccountsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/azurestorageaccounts\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AzureStoragePropertyDictionaryResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.azureStorageAccounts,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listAzureStorageAccountsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/azurestorageaccounts/list\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AzureStoragePropertyDictionaryResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateBackupConfigurationSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/backup\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupRequest,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.request1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteBackupConfigurationSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/backup\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getBackupConfigurationSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/backup/list\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupRequest,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAppSettingsKeyVaultReferencesSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/configreferences/appsettings\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.ApiKVReferenceCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getAppSettingKeyVaultReferenceSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/configreferences/appsettings/{appSettingKey}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.ApiKVReference,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n      Parameters.appSettingKey,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getSiteConnectionStringKeyVaultReferencesSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/configreferences/connectionstrings\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.ApiKVReferenceCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getSiteConnectionStringKeyVaultReferenceSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/configreferences/connectionstrings/{connectionStringKey}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.ApiKVReference,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n      Parameters.connectionStringKey,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst updateConnectionStringsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/connectionstrings\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectionStringDictionary,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.connectionStrings,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listConnectionStringsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/connectionstrings/list\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectionStringDictionary,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDiagnosticLogsConfigurationSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/logs\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.SiteLogsConfig,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst updateDiagnosticLogsConfigSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/logs\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteLogsConfig,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.siteLogsConfig,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst updateMetadataSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/metadata\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StringDictionary,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.metadata,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listMetadataSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/metadata/list\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StringDictionary,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listPublishingCredentialsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/publishingcredentials/list\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.User,\n    },\n    201: {\n      bodyMapper: Mappers.User,\n    },\n    202: {\n      bodyMapper: Mappers.User,\n    },\n    204: {\n      bodyMapper: Mappers.User,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateSitePushSettingsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/pushsettings\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PushSettings,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.pushSettings,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listSitePushSettingsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/pushsettings/list\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PushSettings,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getConfigurationSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteConfigResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateConfigurationSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteConfigResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.siteConfig,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst updateConfigurationSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteConfigResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.siteConfig,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listConfigurationSnapshotInfoSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web/snapshots\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.SiteConfigurationSnapshotInfoCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getConfigurationSnapshotSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web/snapshots/{snapshotId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteConfigResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.snapshotId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst recoverSiteConfigurationSnapshotSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web/snapshots/{snapshotId}/recover\",\n    httpMethod: \"POST\",\n    responses: {\n      204: {},\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n      Parameters.snapshotId,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getWebSiteContainerLogsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/containerlogs\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n    },\n    204: {},\n    default: {},\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept1],\n  serializer,\n};\nconst getContainerLogsZipSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/containerlogs/zip/download\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n    },\n    204: {},\n    default: {},\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept2],\n  serializer,\n};\nconst listContinuousWebJobsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/continuouswebjobs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContinuousWebJobCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContinuousWebJobSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/continuouswebjobs/{webJobName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContinuousWebJob,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.webJobName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteContinuousWebJobSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/continuouswebjobs/{webJobName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.webJobName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst startContinuousWebJobSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/continuouswebjobs/{webJobName}/start\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.webJobName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst stopContinuousWebJobSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/continuouswebjobs/{webJobName}/stop\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.webJobName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSlotSiteDeploymentStatusesSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deploymentStatus\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.CsmDeploymentStatusCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getSlotSiteDeploymentStatusSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deploymentStatus/{deploymentStatusId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CsmDeploymentStatus,\n    },\n    201: {\n      bodyMapper: Mappers.CsmDeploymentStatus,\n    },\n    202: {\n      bodyMapper: Mappers.CsmDeploymentStatus,\n    },\n    204: {\n      bodyMapper: Mappers.CsmDeploymentStatus,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.deploymentStatusId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listDeploymentsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDeploymentSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Deployment,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.id,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createDeploymentSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Deployment,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.deployment,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.id,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteDeploymentSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.id,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listDeploymentLogSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}/log\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Deployment,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.id,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst discoverBackupSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/discoverbackup\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestoreRequest,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.request2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listDomainOwnershipIdentifiersSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/domainOwnershipIdentifiers\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.IdentifierCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getDomainOwnershipIdentifierSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.Identifier,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n      Parameters.domainOwnershipIdentifierName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst createOrUpdateDomainOwnershipIdentifierSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.Identifier,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.domainOwnershipIdentifier1,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n      Parameters.domainOwnershipIdentifierName,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst deleteDomainOwnershipIdentifierSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}\",\n    httpMethod: \"DELETE\",\n    responses: {\n      200: {},\n      204: {},\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n      Parameters.domainOwnershipIdentifierName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst updateDomainOwnershipIdentifierSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}\",\n    httpMethod: \"PATCH\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.Identifier,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.domainOwnershipIdentifier1,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n      Parameters.domainOwnershipIdentifierName,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst getMSDeployStatusSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/extensions/MSDeploy\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MSDeployStatus,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createMSDeployOperationSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/extensions/MSDeploy\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MSDeployStatus,\n    },\n    201: {\n      bodyMapper: Mappers.MSDeployStatus,\n    },\n    202: {\n      bodyMapper: Mappers.MSDeployStatus,\n    },\n    204: {\n      bodyMapper: Mappers.MSDeployStatus,\n    },\n    409: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.mSDeploy,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getMSDeployLogSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/extensions/MSDeploy/log\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MSDeployLog,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listInstanceFunctionsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionEnvelopeCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getFunctionsAdminTokenSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/admin/token\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"String\" } },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getInstanceFunctionSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/{functionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionEnvelope,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.functionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createInstanceFunctionSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/{functionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionEnvelope,\n    },\n    201: {\n      bodyMapper: Mappers.FunctionEnvelope,\n    },\n    202: {\n      bodyMapper: Mappers.FunctionEnvelope,\n    },\n    204: {\n      bodyMapper: Mappers.FunctionEnvelope,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.functionEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.functionName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteInstanceFunctionSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/{functionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.functionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateFunctionSecretSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/{functionName}/keys/{keyName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.KeyInfo,\n      },\n      201: {\n        bodyMapper: Mappers.KeyInfo,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.key,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n      Parameters.functionName,\n      Parameters.keyName,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst deleteFunctionSecretSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/{functionName}/keys/{keyName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.functionName,\n    Parameters.keyName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listFunctionKeysSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/{functionName}/listkeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StringDictionary,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.functionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listFunctionSecretsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/{functionName}/listsecrets\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionSecrets,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.functionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listHostKeysSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/host/default/listkeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HostKeys,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSyncStatusSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/host/default/listsyncstatus\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst syncFunctionsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/host/default/sync\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateHostSecretSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/host/default/{keyType}/{keyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyInfo,\n    },\n    201: {\n      bodyMapper: Mappers.KeyInfo,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.key,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.keyName,\n    Parameters.keyType,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteHostSecretSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/host/default/{keyType}/{keyName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.keyName,\n    Parameters.keyType,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listHostNameBindingsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HostNameBindingCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getHostNameBindingSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HostNameBinding,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.hostName1,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateHostNameBindingSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.HostNameBinding,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.hostNameBinding,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n      Parameters.hostName1,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst deleteHostNameBindingSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.hostName1,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getHybridConnectionSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HybridConnection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.namespaceName,\n    Parameters.relayName,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateHybridConnectionSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.HybridConnection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.connectionEnvelope1,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.namespaceName,\n      Parameters.relayName,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst deleteHybridConnectionSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.namespaceName,\n    Parameters.relayName,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateHybridConnectionSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HybridConnection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.connectionEnvelope1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.namespaceName,\n    Parameters.relayName,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listHybridConnectionsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridConnectionRelays\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HybridConnection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listRelayServiceConnectionsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RelayServiceConnectionEntity,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getRelayServiceConnectionSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RelayServiceConnectionEntity,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.entityName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateRelayServiceConnectionSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.RelayServiceConnectionEntity,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.connectionEnvelope2,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n      Parameters.entityName,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst deleteRelayServiceConnectionSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}\",\n    httpMethod: \"DELETE\",\n    responses: {\n      200: {},\n      404: {\n        isError: true,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n      Parameters.entityName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst updateRelayServiceConnectionSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}\",\n    httpMethod: \"PATCH\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.RelayServiceConnectionEntity,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.connectionEnvelope2,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n      Parameters.entityName,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst listInstanceIdentifiersSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppInstanceStatusCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getInstanceInfoSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebSiteInstanceStatus,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.instanceId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getInstanceMsDeployStatusSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/extensions/MSDeploy\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MSDeployStatus,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.instanceId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createInstanceMSDeployOperationSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/extensions/MSDeploy\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.MSDeployStatus,\n      },\n      201: {\n        bodyMapper: Mappers.MSDeployStatus,\n      },\n      202: {\n        bodyMapper: Mappers.MSDeployStatus,\n      },\n      204: {\n        bodyMapper: Mappers.MSDeployStatus,\n      },\n      409: {\n        isError: true,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.mSDeploy,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n      Parameters.instanceId,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst getInstanceMSDeployLogSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/extensions/MSDeploy/log\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MSDeployLog,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.instanceId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listInstanceProcessesSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.instanceId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getInstanceProcessSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes/{processId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessInfo,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.instanceId,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteInstanceProcessSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes/{processId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.instanceId,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getInstanceProcessDumpSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes/{processId}/dump\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.instanceId,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listInstanceProcessModulesSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes/{processId}/modules\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessModuleInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.instanceId,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getInstanceProcessModuleSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes/{processId}/modules/{baseAddress}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessModuleInfo,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.instanceId,\n    Parameters.processId,\n    Parameters.baseAddress,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listInstanceProcessThreadsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes/{processId}/threads\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessThreadInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.instanceId,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst isCloneableSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/iscloneable\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteCloneability,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSiteBackupsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/listbackups\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupItemCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSyncFunctionTriggersSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/listsyncfunctiontriggerstatus\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionSecrets,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getMigrateMySqlStatusSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/migratemysql/status\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MigrateMySqlStatus,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSwiftVirtualNetworkConnectionSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkConfig/virtualNetwork\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.SwiftVirtualNetwork,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst createOrUpdateSwiftVirtualNetworkConnectionWithCheckSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkConfig/virtualNetwork\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.SwiftVirtualNetwork,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.connectionEnvelope3,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst deleteSwiftVirtualNetworkSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkConfig/virtualNetwork\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateSwiftVirtualNetworkConnectionWithCheckSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkConfig/virtualNetwork\",\n    httpMethod: \"PATCH\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.SwiftVirtualNetwork,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.connectionEnvelope3,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst listNetworkFeaturesSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkFeatures/{view}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NetworkFeatures,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.view,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNetworkTraceOperationSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkTrace/operationresults/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n        },\n      },\n    },\n    202: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n        },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst startWebSiteNetworkTraceSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkTrace/start\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"String\" } },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.durationInSeconds,\n    Parameters.maxFrameLength,\n    Parameters.sasUrl,\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst startWebSiteNetworkTraceOperationSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkTrace/startOperation\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {\n        bodyMapper: {\n          type: {\n            name: \"Sequence\",\n            element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n          },\n        },\n      },\n      201: {\n        bodyMapper: {\n          type: {\n            name: \"Sequence\",\n            element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n          },\n        },\n      },\n      202: {\n        bodyMapper: {\n          type: {\n            name: \"Sequence\",\n            element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n          },\n        },\n      },\n      204: {\n        bodyMapper: {\n          type: {\n            name: \"Sequence\",\n            element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n          },\n        },\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [\n      Parameters.apiVersion,\n      Parameters.durationInSeconds,\n      Parameters.maxFrameLength,\n      Parameters.sasUrl,\n    ],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst stopWebSiteNetworkTraceSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkTrace/stop\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNetworkTracesSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkTrace/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n        },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNetworkTraceOperationSlotV2OperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkTraces/current/operationresults/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n        },\n      },\n    },\n    202: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n        },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNetworkTracesSlotV2OperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkTraces/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n        },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.operationId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst generateNewSitePublishingPasswordSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/newpassword\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {},\n      204: {},\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listPerfMonCountersSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/perfcounters\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PerfMonCounterCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSitePhpErrorLogFlagSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/phplogging\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SitePhpErrorLogFlag,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listPremierAddOnsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PremierAddOn,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getPremierAddOnSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PremierAddOn,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.premierAddOnName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst addPremierAddOnSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PremierAddOn,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.premierAddOn,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.premierAddOnName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deletePremierAddOnSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.premierAddOnName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updatePremierAddOnSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PremierAddOn,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.premierAddOn1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.premierAddOnName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getPrivateAccessSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateAccess/virtualNetworks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateAccess,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst putPrivateAccessVnetSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateAccess/virtualNetworks\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateAccess,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.access,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getPrivateEndpointConnectionListSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateEndpointConnections\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PrivateEndpointConnectionCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getPrivateEndpointConnectionSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateEndpointConnections/{privateEndpointConnectionName}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.RemotePrivateEndpointConnectionARMResource,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.privateEndpointConnectionName,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst approveOrRejectPrivateEndpointConnectionSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateEndpointConnections/{privateEndpointConnectionName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.RemotePrivateEndpointConnectionARMResource,\n      },\n      201: {\n        bodyMapper: Mappers.RemotePrivateEndpointConnectionARMResource,\n      },\n      202: {\n        bodyMapper: Mappers.RemotePrivateEndpointConnectionARMResource,\n      },\n      204: {\n        bodyMapper: Mappers.RemotePrivateEndpointConnectionARMResource,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.privateEndpointWrapper,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.privateEndpointConnectionName,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst deletePrivateEndpointConnectionSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateEndpointConnections/{privateEndpointConnectionName}\",\n    httpMethod: \"DELETE\",\n    responses: {\n      200: {\n        bodyMapper: {\n          type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n        },\n      },\n      201: {\n        bodyMapper: {\n          type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n        },\n      },\n      202: {\n        bodyMapper: {\n          type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n        },\n      },\n      204: {\n        bodyMapper: {\n          type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n        },\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.privateEndpointConnectionName,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getPrivateLinkResourcesSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateLinkResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResourcesWrapper,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listProcessesSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getProcessSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessInfo,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteProcessSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getProcessDumpSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}/dump\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listProcessModulesSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}/modules\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessModuleInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getProcessModuleSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}/modules/{baseAddress}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessModuleInfo,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.processId,\n    Parameters.baseAddress,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listProcessThreadsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}/threads\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessThreadInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listPublicCertificatesSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publicCertificates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PublicCertificateCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getPublicCertificateSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publicCertificates/{publicCertificateName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PublicCertificate,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.publicCertificateName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdatePublicCertificateSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publicCertificates/{publicCertificateName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PublicCertificate,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.publicCertificate,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n      Parameters.publicCertificateName,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst deletePublicCertificateSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publicCertificates/{publicCertificateName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.publicCertificateName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listPublishingProfileXmlWithSecretsSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publishxml\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {\n        bodyMapper: {\n          type: { name: \"Stream\" },\n          serializedName: \"parsedResponse\",\n        },\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.publishingProfileOptions,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.contentType, Parameters.accept3],\n    mediaType: \"json\",\n    serializer,\n  };\nconst resetSlotConfigurationSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/resetSlotConfig\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst restartSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/restart\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.softRestart,\n    Parameters.synchronous,\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst restoreFromBackupBlobSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/restoreFromBackupBlob\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.request2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst restoreFromDeletedAppSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/restoreFromDeletedApp\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.restoreRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst restoreSnapshotSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/restoreSnapshot\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.restoreRequest1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listSiteContainersSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sitecontainers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteContainerCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSiteContainerSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sitecontainers/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteContainer,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.containerName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateSiteContainerSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sitecontainers/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteContainer,\n    },\n    201: {\n      bodyMapper: Mappers.SiteContainer,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.request3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.containerName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteSiteContainerSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sitecontainers/{containerName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.containerName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSiteExtensionsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/siteextensions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteExtensionInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSiteExtensionSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/siteextensions/{siteExtensionId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteExtensionInfo,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.siteExtensionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst installSiteExtensionSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/siteextensions/{siteExtensionId}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteExtensionInfo,\n    },\n    201: {\n      bodyMapper: Mappers.SiteExtensionInfo,\n    },\n    202: {\n      bodyMapper: Mappers.SiteExtensionInfo,\n    },\n    204: {\n      bodyMapper: Mappers.SiteExtensionInfo,\n    },\n    429: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.siteExtensionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteSiteExtensionSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/siteextensions/{siteExtensionId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.siteExtensionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSlotDifferencesSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/slotsdiffs\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SlotDifferenceCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.slotSwapEntity,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst swapSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/slotsswap\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.slotSwapEntity,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listSnapshotsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/snapshots\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SnapshotCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSnapshotsFromDRSecondarySlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/snapshotsdr\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.SnapshotCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getSourceControlSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteSourceControl,\n    },\n    201: {\n      bodyMapper: Mappers.SiteSourceControl,\n    },\n    202: {\n      bodyMapper: Mappers.SiteSourceControl,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateSourceControlSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteSourceControl,\n    },\n    201: {\n      bodyMapper: Mappers.SiteSourceControl,\n    },\n    202: {\n      bodyMapper: Mappers.SiteSourceControl,\n    },\n    204: {\n      bodyMapper: Mappers.SiteSourceControl,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.siteSourceControl,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteSourceControlSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    202: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.additionalFlags],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateSourceControlSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteSourceControl,\n    },\n    201: {\n      bodyMapper: Mappers.SiteSourceControl,\n    },\n    202: {\n      bodyMapper: Mappers.SiteSourceControl,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.siteSourceControl,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst startSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/start\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst startNetworkTraceSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/startNetworkTrace\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n        },\n      },\n    },\n    201: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n        },\n      },\n    },\n    202: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n        },\n      },\n    },\n    204: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n        },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.durationInSeconds,\n    Parameters.maxFrameLength,\n    Parameters.sasUrl,\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst stopSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/stop\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst stopNetworkTraceSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/stopNetworkTrace\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst syncRepositorySlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sync\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst syncFunctionTriggersSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/syncfunctiontriggers\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listTriggeredWebJobsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TriggeredWebJobCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTriggeredWebJobSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs/{webJobName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TriggeredWebJob,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.webJobName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteTriggeredWebJobSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs/{webJobName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.webJobName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listTriggeredWebJobHistorySlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs/{webJobName}/history\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TriggeredJobHistoryCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.webJobName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTriggeredWebJobHistorySlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs/{webJobName}/history/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TriggeredJobHistory,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.webJobName,\n    Parameters.id,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst runTriggeredWebJobSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs/{webJobName}/run\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.webJobName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listUsagesSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/usages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CsmUsageQuotaCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listVnetConnectionsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"VnetInfoResource\" },\n          },\n        },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getVnetConnectionSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VnetInfoResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.vnetName,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateVnetConnectionSlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.VnetInfoResource,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.connectionEnvelope4,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.vnetName,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst deleteVnetConnectionSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.vnetName,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateVnetConnectionSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VnetInfoResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.connectionEnvelope4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.vnetName,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getVnetConnectionGatewaySlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VnetGateway,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.vnetName,\n    Parameters.gatewayName,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateVnetConnectionGatewaySlotOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.VnetGateway,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.connectionEnvelope,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.vnetName,\n      Parameters.gatewayName,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst updateVnetConnectionGatewaySlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VnetGateway,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.connectionEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.vnetName,\n    Parameters.gatewayName,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listWebJobsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/webjobs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebJobCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getWebJobSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/webjobs/{webJobName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebJob,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.webJobName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSlotDifferencesFromProductionOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slotsdiffs\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.SlotDifferenceCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.slotSwapEntity,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst swapSlotWithProductionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slotsswap\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.slotSwapEntity,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listSnapshotsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/snapshots\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SnapshotCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSnapshotsFromDRSecondaryOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/snapshotsdr\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SnapshotCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSourceControlOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteSourceControl,\n    },\n    201: {\n      bodyMapper: Mappers.SiteSourceControl,\n    },\n    202: {\n      bodyMapper: Mappers.SiteSourceControl,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateSourceControlOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteSourceControl,\n    },\n    201: {\n      bodyMapper: Mappers.SiteSourceControl,\n    },\n    202: {\n      bodyMapper: Mappers.SiteSourceControl,\n    },\n    204: {\n      bodyMapper: Mappers.SiteSourceControl,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.siteSourceControl,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteSourceControlOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    202: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.additionalFlags],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateSourceControlOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteSourceControl,\n    },\n    201: {\n      bodyMapper: Mappers.SiteSourceControl,\n    },\n    202: {\n      bodyMapper: Mappers.SiteSourceControl,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.siteSourceControl,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst startOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/start\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst startNetworkTraceOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/startNetworkTrace\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n        },\n      },\n    },\n    201: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n        },\n      },\n    },\n    202: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n        },\n      },\n    },\n    204: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"NetworkTrace\" } },\n        },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.durationInSeconds,\n    Parameters.maxFrameLength,\n    Parameters.sasUrl,\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst stopOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/stop\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst stopNetworkTraceOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/stopNetworkTrace\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst syncRepositoryOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sync\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst syncFunctionTriggersOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/syncfunctiontriggers\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listTriggeredWebJobsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TriggeredWebJobCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTriggeredWebJobOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs/{webJobName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TriggeredWebJob,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.webJobName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteTriggeredWebJobOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs/{webJobName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.webJobName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listTriggeredWebJobHistoryOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs/{webJobName}/history\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TriggeredJobHistoryCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.webJobName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTriggeredWebJobHistoryOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs/{webJobName}/history/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TriggeredJobHistory,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.webJobName,\n    Parameters.id,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst runTriggeredWebJobOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs/{webJobName}/run\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.webJobName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listUsagesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/usages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CsmUsageQuotaCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listVnetConnectionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"VnetInfoResource\" },\n          },\n        },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getVnetConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VnetInfoResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.vnetName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateVnetConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VnetInfoResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.connectionEnvelope4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.vnetName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteVnetConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.vnetName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateVnetConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VnetInfoResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.connectionEnvelope4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.vnetName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getVnetConnectionGatewayOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VnetGateway,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.vnetName,\n    Parameters.gatewayName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateVnetConnectionGatewayOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.VnetGateway,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.connectionEnvelope,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.vnetName,\n      Parameters.gatewayName,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst updateVnetConnectionGatewayOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VnetGateway,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.connectionEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.vnetName,\n    Parameters.gatewayName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listWebJobsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/webjobs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebJobCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getWebJobOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/webjobs/{webJobName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebJob,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.webJobName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deployWorkflowArtifactsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployWorkflowArtifacts\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.workflowArtifacts,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deployWorkflowArtifactsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployWorkflowArtifacts\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.workflowArtifacts,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listInstanceWorkflowsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/workflows\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkflowEnvelopeCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getInstanceWorkflowSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/workflows/{workflowName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkflowEnvelope,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n    Parameters.workflowName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listWorkflowsConnectionsSlotOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/listWorkflowsConnections\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkflowEnvelope,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listWorkflowsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/workflows\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkflowEnvelopeCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getWorkflowOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/workflows/{workflowName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkflowEnvelope,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.workflowName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listWorkflowsConnectionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/listWorkflowsConnections\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkflowEnvelope,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listBackupsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupItemCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listBasicPublishingCredentialsPoliciesNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PublishingCredentialsPoliciesCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listConfigurationsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteConfigResourceCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAppSettingsKeyVaultReferencesNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.ApiKVReferenceCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getSiteConnectionStringKeyVaultReferencesNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.ApiKVReferenceCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listConfigurationSnapshotInfoNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.SiteConfigurationSnapshotInfoCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listContinuousWebJobsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContinuousWebJobCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listProductionSiteDeploymentStatusesNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.CsmDeploymentStatusCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listDeploymentsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listDomainOwnershipIdentifiersNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.IdentifierCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listFunctionsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionEnvelopeCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listHostNameBindingsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HostNameBindingCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listInstanceIdentifiersNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppInstanceStatusCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listInstanceProcessesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.instanceId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listInstanceProcessModulesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessModuleInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.instanceId,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listInstanceProcessThreadsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessThreadInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.instanceId,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSiteBackupsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupItemCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listPerfMonCountersNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PerfMonCounterCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getPrivateEndpointConnectionListNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PrivateEndpointConnectionCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listProcessesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listProcessModulesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessModuleInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listProcessThreadsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessThreadInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listPublicCertificatesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PublicCertificateCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSiteContainersNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteContainerCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSiteExtensionsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteExtensionInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSlotsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listBackupsSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupItemCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listBasicPublishingCredentialsPoliciesSlotNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PublishingCredentialsPoliciesCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listConfigurationsSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteConfigResourceCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAppSettingsKeyVaultReferencesSlotNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.ApiKVReferenceCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getSiteConnectionStringKeyVaultReferencesSlotNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.ApiKVReferenceCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listConfigurationSnapshotInfoSlotNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.SiteConfigurationSnapshotInfoCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listContinuousWebJobsSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContinuousWebJobCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSlotSiteDeploymentStatusesSlotNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.CsmDeploymentStatusCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listDeploymentsSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listDomainOwnershipIdentifiersSlotNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.IdentifierCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listInstanceFunctionsSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionEnvelopeCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listHostNameBindingsSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HostNameBindingCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listInstanceIdentifiersSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppInstanceStatusCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listInstanceProcessesSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n    Parameters.instanceId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listInstanceProcessModulesSlotNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.ProcessModuleInfoCollection,\n      },\n      404: {\n        isError: true,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n      Parameters.slot,\n      Parameters.instanceId,\n      Parameters.processId,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listInstanceProcessThreadsSlotNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.ProcessThreadInfoCollection,\n      },\n      404: {\n        isError: true,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n      Parameters.slot,\n      Parameters.instanceId,\n      Parameters.processId,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listSiteBackupsSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupItemCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listPerfMonCountersSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PerfMonCounterCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getPrivateEndpointConnectionListSlotNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PrivateEndpointConnectionCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listProcessesSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listProcessModulesSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessModuleInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listProcessThreadsSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProcessThreadInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n    Parameters.processId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listPublicCertificatesSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PublicCertificateCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSiteContainersSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteContainerCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSiteExtensionsSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SiteExtensionInfoCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSlotDifferencesSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SlotDifferenceCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listSnapshotsSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SnapshotCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSnapshotsFromDRSecondarySlotNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.SnapshotCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n      Parameters.slot,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listTriggeredWebJobsSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TriggeredWebJobCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listTriggeredWebJobHistorySlotNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.TriggeredJobHistoryCollection,\n      },\n      404: {\n        isError: true,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n      Parameters.slot,\n      Parameters.webJobName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listUsagesSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CsmUsageQuotaCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listWebJobsSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebJobCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSlotDifferencesFromProductionNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.SlotDifferenceCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst listSnapshotsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SnapshotCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listSnapshotsFromDRSecondaryNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.SnapshotCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listTriggeredWebJobsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TriggeredWebJobCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listTriggeredWebJobHistoryNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TriggeredJobHistoryCollection,\n    },\n    404: {\n      isError: true,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.webJobName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listUsagesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CsmUsageQuotaCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listWebJobsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebJobCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listInstanceWorkflowsSlotNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkflowEnvelopeCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.slot,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listWorkflowsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkflowEnvelopeCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}