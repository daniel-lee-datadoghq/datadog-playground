{"version":3,"file":"staticSites.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/staticSites.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  StaticSiteARMResource,\n  StaticSitesListOptionalParams,\n  StaticSitesGetStaticSitesByResourceGroupOptionalParams,\n  StaticSiteUserARMResource,\n  StaticSitesListStaticSiteUsersOptionalParams,\n  StaticSiteBuildARMResource,\n  StaticSitesGetStaticSiteBuildsOptionalParams,\n  DatabaseConnection,\n  StaticSitesGetBuildDatabaseConnectionsOptionalParams,\n  StaticSiteFunctionOverviewARMResource,\n  StaticSitesListStaticSiteBuildFunctionsOptionalParams,\n  StaticSitesGetBuildDatabaseConnectionsWithDetailsOptionalParams,\n  StaticSiteUserProvidedFunctionAppARMResource,\n  StaticSitesGetUserProvidedFunctionAppsForStaticSiteBuildOptionalParams,\n  StaticSiteBasicAuthPropertiesARMResource,\n  StaticSitesListBasicAuthOptionalParams,\n  StaticSiteCustomDomainOverviewARMResource,\n  StaticSitesListStaticSiteCustomDomainsOptionalParams,\n  StaticSitesGetDatabaseConnectionsOptionalParams,\n  StaticSitesListStaticSiteFunctionsOptionalParams,\n  RemotePrivateEndpointConnectionARMResource,\n  StaticSitesGetPrivateEndpointConnectionListOptionalParams,\n  StaticSitesGetDatabaseConnectionsWithDetailsOptionalParams,\n  StaticSitesGetUserProvidedFunctionAppsForStaticSiteOptionalParams,\n  StaticSiteLinkedBackendARMResource,\n  StaticSitesGetLinkedBackendsOptionalParams,\n  StaticSitesGetLinkedBackendsForBuildOptionalParams,\n  StaticSitesWorkflowPreviewRequest,\n  StaticSitesPreviewWorkflowOptionalParams,\n  StaticSitesPreviewWorkflowResponse,\n  StaticSitesGetStaticSiteOptionalParams,\n  StaticSitesGetStaticSiteResponse,\n  StaticSitesCreateOrUpdateStaticSiteOptionalParams,\n  StaticSitesCreateOrUpdateStaticSiteResponse,\n  StaticSitesDeleteStaticSiteOptionalParams,\n  StaticSitePatchResource,\n  StaticSitesUpdateStaticSiteOptionalParams,\n  StaticSitesUpdateStaticSiteResponse,\n  StaticSitesDeleteStaticSiteUserOptionalParams,\n  StaticSitesUpdateStaticSiteUserOptionalParams,\n  StaticSitesUpdateStaticSiteUserResponse,\n  StaticSitesGetStaticSiteBuildOptionalParams,\n  StaticSitesGetStaticSiteBuildResponse,\n  StaticSitesDeleteStaticSiteBuildOptionalParams,\n  StringDictionary,\n  StaticSitesCreateOrUpdateStaticSiteBuildAppSettingsOptionalParams,\n  StaticSitesCreateOrUpdateStaticSiteBuildAppSettingsResponse,\n  StaticSitesCreateOrUpdateStaticSiteBuildFunctionAppSettingsOptionalParams,\n  StaticSitesCreateOrUpdateStaticSiteBuildFunctionAppSettingsResponse,\n  StaticSitesGetBuildDatabaseConnectionOptionalParams,\n  StaticSitesGetBuildDatabaseConnectionResponse,\n  StaticSitesCreateOrUpdateBuildDatabaseConnectionOptionalParams,\n  StaticSitesCreateOrUpdateBuildDatabaseConnectionResponse,\n  StaticSitesDeleteBuildDatabaseConnectionOptionalParams,\n  DatabaseConnectionPatchRequest,\n  StaticSitesUpdateBuildDatabaseConnectionOptionalParams,\n  StaticSitesUpdateBuildDatabaseConnectionResponse,\n  StaticSitesGetBuildDatabaseConnectionWithDetailsOptionalParams,\n  StaticSitesGetBuildDatabaseConnectionWithDetailsResponse,\n  StaticSitesListStaticSiteBuildAppSettingsOptionalParams,\n  StaticSitesListStaticSiteBuildAppSettingsResponse,\n  StaticSitesListStaticSiteBuildFunctionAppSettingsOptionalParams,\n  StaticSitesListStaticSiteBuildFunctionAppSettingsResponse,\n  StaticSitesGetUserProvidedFunctionAppForStaticSiteBuildOptionalParams,\n  StaticSitesGetUserProvidedFunctionAppForStaticSiteBuildResponse,\n  StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteBuildOptionalParams,\n  StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteBuildResponse,\n  StaticSitesDetachUserProvidedFunctionAppFromStaticSiteBuildOptionalParams,\n  StaticSiteZipDeploymentARMResource,\n  StaticSitesCreateZipDeploymentForStaticSiteBuildOptionalParams,\n  StaticSitesCreateOrUpdateStaticSiteAppSettingsOptionalParams,\n  StaticSitesCreateOrUpdateStaticSiteAppSettingsResponse,\n  BasicAuthName,\n  StaticSitesGetBasicAuthOptionalParams,\n  StaticSitesGetBasicAuthResponse,\n  StaticSitesCreateOrUpdateBasicAuthOptionalParams,\n  StaticSitesCreateOrUpdateBasicAuthResponse,\n  StaticSitesCreateOrUpdateStaticSiteFunctionAppSettingsOptionalParams,\n  StaticSitesCreateOrUpdateStaticSiteFunctionAppSettingsResponse,\n  StaticSiteUserInvitationRequestResource,\n  StaticSitesCreateUserRolesInvitationLinkOptionalParams,\n  StaticSitesCreateUserRolesInvitationLinkResponse,\n  StaticSitesGetStaticSiteCustomDomainOptionalParams,\n  StaticSitesGetStaticSiteCustomDomainResponse,\n  StaticSiteCustomDomainRequestPropertiesARMResource,\n  StaticSitesCreateOrUpdateStaticSiteCustomDomainOptionalParams,\n  StaticSitesCreateOrUpdateStaticSiteCustomDomainResponse,\n  StaticSitesDeleteStaticSiteCustomDomainOptionalParams,\n  StaticSitesValidateCustomDomainCanBeAddedToStaticSiteOptionalParams,\n  StaticSitesGetDatabaseConnectionOptionalParams,\n  StaticSitesGetDatabaseConnectionResponse,\n  StaticSitesCreateOrUpdateDatabaseConnectionOptionalParams,\n  StaticSitesCreateOrUpdateDatabaseConnectionResponse,\n  StaticSitesDeleteDatabaseConnectionOptionalParams,\n  StaticSitesUpdateDatabaseConnectionOptionalParams,\n  StaticSitesUpdateDatabaseConnectionResponse,\n  StaticSitesGetDatabaseConnectionWithDetailsOptionalParams,\n  StaticSitesGetDatabaseConnectionWithDetailsResponse,\n  StaticSitesDetachStaticSiteOptionalParams,\n  StaticSitesListStaticSiteAppSettingsOptionalParams,\n  StaticSitesListStaticSiteAppSettingsResponse,\n  StaticSitesListStaticSiteConfiguredRolesOptionalParams,\n  StaticSitesListStaticSiteConfiguredRolesResponse,\n  StaticSitesListStaticSiteFunctionAppSettingsOptionalParams,\n  StaticSitesListStaticSiteFunctionAppSettingsResponse,\n  StaticSitesListStaticSiteSecretsOptionalParams,\n  StaticSitesListStaticSiteSecretsResponse,\n  StaticSitesGetPrivateEndpointConnectionOptionalParams,\n  StaticSitesGetPrivateEndpointConnectionResponse,\n  StaticSitesApproveOrRejectPrivateEndpointConnectionOptionalParams,\n  StaticSitesApproveOrRejectPrivateEndpointConnectionResponse,\n  StaticSitesDeletePrivateEndpointConnectionOptionalParams,\n  StaticSitesDeletePrivateEndpointConnectionResponse,\n  StaticSitesGetPrivateLinkResourcesOptionalParams,\n  StaticSitesGetPrivateLinkResourcesResponse,\n  StaticSiteResetPropertiesARMResource,\n  StaticSitesResetStaticSiteApiKeyOptionalParams,\n  StaticSitesGetUserProvidedFunctionAppForStaticSiteOptionalParams,\n  StaticSitesGetUserProvidedFunctionAppForStaticSiteResponse,\n  StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteOptionalParams,\n  StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteResponse,\n  StaticSitesDetachUserProvidedFunctionAppFromStaticSiteOptionalParams,\n  StaticSitesCreateZipDeploymentForStaticSiteOptionalParams,\n  StaticSitesValidateBackendOptionalParams,\n  StaticSitesValidateBackendForBuildOptionalParams,\n  StaticSitesGetLinkedBackendOptionalParams,\n  StaticSitesGetLinkedBackendResponse,\n  StaticSitesLinkBackendOptionalParams,\n  StaticSitesLinkBackendResponse,\n  StaticSitesUnlinkBackendOptionalParams,\n  StaticSitesGetLinkedBackendForBuildOptionalParams,\n  StaticSitesGetLinkedBackendForBuildResponse,\n  StaticSitesLinkBackendToBuildOptionalParams,\n  StaticSitesLinkBackendToBuildResponse,\n  StaticSitesUnlinkBackendFromBuildOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a StaticSites. */\nexport interface StaticSites {\n  /**\n   * Description for Get all Static Sites for a subscription.\n   * @param options The options parameters.\n   */\n  list(\n    options?: StaticSitesListOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteARMResource>;\n  /**\n   * Description for Gets all static sites in the specified resource group.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param options The options parameters.\n   */\n  listStaticSitesByResourceGroup(\n    resourceGroupName: string,\n    options?: StaticSitesGetStaticSitesByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteARMResource>;\n  /**\n   * Description for Gets the list of users of a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param authprovider The auth provider for the users.\n   * @param options The options parameters.\n   */\n  listStaticSiteUsers(\n    resourceGroupName: string,\n    name: string,\n    authprovider: string,\n    options?: StaticSitesListStaticSiteUsersOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteUserARMResource>;\n  /**\n   * Description for Gets all static site builds for a particular static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  listStaticSiteBuilds(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetStaticSiteBuildsOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteBuildARMResource>;\n  /**\n   * Returns overviews of database connections for a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  listBuildDatabaseConnections(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetBuildDatabaseConnectionsOptionalParams,\n  ): PagedAsyncIterableIterator<DatabaseConnection>;\n  /**\n   * Description for Gets the functions of a particular static site build.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  listStaticSiteBuildFunctions(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesListStaticSiteBuildFunctionsOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteFunctionOverviewARMResource>;\n  /**\n   * Returns details of database connections for a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  listBuildDatabaseConnectionsWithDetails(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetBuildDatabaseConnectionsWithDetailsOptionalParams,\n  ): PagedAsyncIterableIterator<DatabaseConnection>;\n  /**\n   * Description for Gets the details of the user provided function apps registered with a static site\n   * build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  listUserProvidedFunctionAppsForStaticSiteBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetUserProvidedFunctionAppsForStaticSiteBuildOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteUserProvidedFunctionAppARMResource>;\n  /**\n   * Description for Gets the basic auth properties for a static site as a collection.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  listBasicAuth(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListBasicAuthOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteBasicAuthPropertiesARMResource>;\n  /**\n   * Description for Gets all static site custom domains for a particular static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site resource to search in.\n   * @param options The options parameters.\n   */\n  listStaticSiteCustomDomains(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListStaticSiteCustomDomainsOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteCustomDomainOverviewARMResource>;\n  /**\n   * Returns overviews of database connections for a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param options The options parameters.\n   */\n  listDatabaseConnections(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetDatabaseConnectionsOptionalParams,\n  ): PagedAsyncIterableIterator<DatabaseConnection>;\n  /**\n   * Description for Gets the functions of a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  listStaticSiteFunctions(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListStaticSiteFunctionsOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteFunctionOverviewARMResource>;\n  /**\n   * Description for Gets the list of private endpoint connections associated with a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  listPrivateEndpointConnectionList(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetPrivateEndpointConnectionListOptionalParams,\n  ): PagedAsyncIterableIterator<RemotePrivateEndpointConnectionARMResource>;\n  /**\n   * Returns details of database connections for a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param options The options parameters.\n   */\n  listDatabaseConnectionsWithDetails(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetDatabaseConnectionsWithDetailsOptionalParams,\n  ): PagedAsyncIterableIterator<DatabaseConnection>;\n  /**\n   * Description for Gets the details of the user provided function apps registered with a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  listUserProvidedFunctionAppsForStaticSite(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetUserProvidedFunctionAppsForStaticSiteOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteUserProvidedFunctionAppARMResource>;\n  /**\n   * Returns details of all backends linked to a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param options The options parameters.\n   */\n  listLinkedBackends(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetLinkedBackendsOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteLinkedBackendARMResource>;\n  /**\n   * Returns details of all backends linked to a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier\n   * @param options The options parameters.\n   */\n  listLinkedBackendsForBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetLinkedBackendsForBuildOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteLinkedBackendARMResource>;\n  /**\n   * Description for Generates a preview workflow file for the static site\n   * @param location Location where you plan to create the static site.\n   * @param staticSitesWorkflowPreviewRequest A JSON representation of the\n   *                                          StaticSitesWorkflowPreviewRequest properties. See example.\n   * @param options The options parameters.\n   */\n  previewWorkflow(\n    location: string,\n    staticSitesWorkflowPreviewRequest: StaticSitesWorkflowPreviewRequest,\n    options?: StaticSitesPreviewWorkflowOptionalParams,\n  ): Promise<StaticSitesPreviewWorkflowResponse>;\n  /**\n   * Description for Gets the details of a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  getStaticSite(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetStaticSiteOptionalParams,\n  ): Promise<StaticSitesGetStaticSiteResponse>;\n  /**\n   * Description for Creates a new static site in an existing resource group, or updates an existing\n   * static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site to create or update.\n   * @param staticSiteEnvelope A JSON representation of the staticsite properties. See example.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateStaticSite(\n    resourceGroupName: string,\n    name: string,\n    staticSiteEnvelope: StaticSiteARMResource,\n    options?: StaticSitesCreateOrUpdateStaticSiteOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<StaticSitesCreateOrUpdateStaticSiteResponse>,\n      StaticSitesCreateOrUpdateStaticSiteResponse\n    >\n  >;\n  /**\n   * Description for Creates a new static site in an existing resource group, or updates an existing\n   * static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site to create or update.\n   * @param staticSiteEnvelope A JSON representation of the staticsite properties. See example.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateStaticSiteAndWait(\n    resourceGroupName: string,\n    name: string,\n    staticSiteEnvelope: StaticSiteARMResource,\n    options?: StaticSitesCreateOrUpdateStaticSiteOptionalParams,\n  ): Promise<StaticSitesCreateOrUpdateStaticSiteResponse>;\n  /**\n   * Description for Deletes a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site to delete.\n   * @param options The options parameters.\n   */\n  beginDeleteStaticSite(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesDeleteStaticSiteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Description for Deletes a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site to delete.\n   * @param options The options parameters.\n   */\n  beginDeleteStaticSiteAndWait(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesDeleteStaticSiteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Description for Creates a new static site in an existing resource group, or updates an existing\n   * static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site to create or update.\n   * @param staticSiteEnvelope A JSON representation of the staticsite properties. See example.\n   * @param options The options parameters.\n   */\n  updateStaticSite(\n    resourceGroupName: string,\n    name: string,\n    staticSiteEnvelope: StaticSitePatchResource,\n    options?: StaticSitesUpdateStaticSiteOptionalParams,\n  ): Promise<StaticSitesUpdateStaticSiteResponse>;\n  /**\n   * Description for Deletes the user entry from the static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the staticsite.\n   * @param authprovider The auth provider for this user.\n   * @param userid The user id of the user.\n   * @param options The options parameters.\n   */\n  deleteStaticSiteUser(\n    resourceGroupName: string,\n    name: string,\n    authprovider: string,\n    userid: string,\n    options?: StaticSitesDeleteStaticSiteUserOptionalParams,\n  ): Promise<void>;\n  /**\n   * Description for Updates a user entry with the listed roles\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param authprovider The auth provider for this user.\n   * @param userid The user id of the user.\n   * @param staticSiteUserEnvelope A JSON representation of the StaticSiteUser properties. See example.\n   * @param options The options parameters.\n   */\n  updateStaticSiteUser(\n    resourceGroupName: string,\n    name: string,\n    authprovider: string,\n    userid: string,\n    staticSiteUserEnvelope: StaticSiteUserARMResource,\n    options?: StaticSitesUpdateStaticSiteUserOptionalParams,\n  ): Promise<StaticSitesUpdateStaticSiteUserResponse>;\n  /**\n   * Description for Gets the details of a static site build.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  getStaticSiteBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetStaticSiteBuildOptionalParams,\n  ): Promise<StaticSitesGetStaticSiteBuildResponse>;\n  /**\n   * Description for Deletes a static site build.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  beginDeleteStaticSiteBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesDeleteStaticSiteBuildOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Description for Deletes a static site build.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  beginDeleteStaticSiteBuildAndWait(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesDeleteStaticSiteBuildOptionalParams,\n  ): Promise<void>;\n  /**\n   * Description for Creates or updates the app settings of a static site build.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param appSettings The dictionary containing the static site app settings to update.\n   * @param options The options parameters.\n   */\n  createOrUpdateStaticSiteBuildAppSettings(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    appSettings: StringDictionary,\n    options?: StaticSitesCreateOrUpdateStaticSiteBuildAppSettingsOptionalParams,\n  ): Promise<StaticSitesCreateOrUpdateStaticSiteBuildAppSettingsResponse>;\n  /**\n   * Description for Creates or updates the function app settings of a static site build.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param appSettings The dictionary containing the static site function app settings to update.\n   * @param options The options parameters.\n   */\n  createOrUpdateStaticSiteBuildFunctionAppSettings(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    appSettings: StringDictionary,\n    options?: StaticSitesCreateOrUpdateStaticSiteBuildFunctionAppSettingsOptionalParams,\n  ): Promise<StaticSitesCreateOrUpdateStaticSiteBuildFunctionAppSettingsResponse>;\n  /**\n   * Returns overview of a database connection for a static site build by name\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier.\n   * @param databaseConnectionName Name of the database connection.\n   * @param options The options parameters.\n   */\n  getBuildDatabaseConnection(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    databaseConnectionName: string,\n    options?: StaticSitesGetBuildDatabaseConnectionOptionalParams,\n  ): Promise<StaticSitesGetBuildDatabaseConnectionResponse>;\n  /**\n   * Description for Create or update a database connection for a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier.\n   * @param databaseConnectionName Name of the database connection.\n   * @param databaseConnectionRequestEnvelope A JSON representation of the database connection request\n   *                                          properties\n   * @param options The options parameters.\n   */\n  createOrUpdateBuildDatabaseConnection(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    databaseConnectionName: string,\n    databaseConnectionRequestEnvelope: DatabaseConnection,\n    options?: StaticSitesCreateOrUpdateBuildDatabaseConnectionOptionalParams,\n  ): Promise<StaticSitesCreateOrUpdateBuildDatabaseConnectionResponse>;\n  /**\n   * Delete a database connection for a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier.\n   * @param databaseConnectionName Name of the database connection.\n   * @param options The options parameters.\n   */\n  deleteBuildDatabaseConnection(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    databaseConnectionName: string,\n    options?: StaticSitesDeleteBuildDatabaseConnectionOptionalParams,\n  ): Promise<void>;\n  /**\n   * Description for Create or update a database connection for a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier.\n   * @param databaseConnectionName Name of the database connection.\n   * @param databaseConnectionRequestEnvelope A JSON representation of the database connection request\n   *                                          properties\n   * @param options The options parameters.\n   */\n  updateBuildDatabaseConnection(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    databaseConnectionName: string,\n    databaseConnectionRequestEnvelope: DatabaseConnectionPatchRequest,\n    options?: StaticSitesUpdateBuildDatabaseConnectionOptionalParams,\n  ): Promise<StaticSitesUpdateBuildDatabaseConnectionResponse>;\n  /**\n   * Returns details of a database connection for a static site build by name\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier.\n   * @param databaseConnectionName Name of the database connection.\n   * @param options The options parameters.\n   */\n  getBuildDatabaseConnectionWithDetails(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    databaseConnectionName: string,\n    options?: StaticSitesGetBuildDatabaseConnectionWithDetailsOptionalParams,\n  ): Promise<StaticSitesGetBuildDatabaseConnectionWithDetailsResponse>;\n  /**\n   * Description for Gets the application settings of a static site build.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  listStaticSiteBuildAppSettings(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesListStaticSiteBuildAppSettingsOptionalParams,\n  ): Promise<StaticSitesListStaticSiteBuildAppSettingsResponse>;\n  /**\n   * Description for Gets the application settings of a static site build.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  listStaticSiteBuildFunctionAppSettings(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesListStaticSiteBuildFunctionAppSettingsOptionalParams,\n  ): Promise<StaticSitesListStaticSiteBuildFunctionAppSettingsResponse>;\n  /**\n   * Description for Gets the details of the user provided function app registered with a static site\n   * build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param functionAppName Name of the function app registered with the static site build.\n   * @param options The options parameters.\n   */\n  getUserProvidedFunctionAppForStaticSiteBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    functionAppName: string,\n    options?: StaticSitesGetUserProvidedFunctionAppForStaticSiteBuildOptionalParams,\n  ): Promise<StaticSitesGetUserProvidedFunctionAppForStaticSiteBuildResponse>;\n  /**\n   * Description for Register a user provided function app with a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param functionAppName Name of the function app to register with the static site build.\n   * @param staticSiteUserProvidedFunctionEnvelope A JSON representation of the user provided function\n   *                                               app properties. See example.\n   * @param options The options parameters.\n   */\n  beginRegisterUserProvidedFunctionAppWithStaticSiteBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    functionAppName: string,\n    staticSiteUserProvidedFunctionEnvelope: StaticSiteUserProvidedFunctionAppARMResource,\n    options?: StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteBuildOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteBuildResponse>,\n      StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteBuildResponse\n    >\n  >;\n  /**\n   * Description for Register a user provided function app with a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param functionAppName Name of the function app to register with the static site build.\n   * @param staticSiteUserProvidedFunctionEnvelope A JSON representation of the user provided function\n   *                                               app properties. See example.\n   * @param options The options parameters.\n   */\n  beginRegisterUserProvidedFunctionAppWithStaticSiteBuildAndWait(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    functionAppName: string,\n    staticSiteUserProvidedFunctionEnvelope: StaticSiteUserProvidedFunctionAppARMResource,\n    options?: StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteBuildOptionalParams,\n  ): Promise<StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteBuildResponse>;\n  /**\n   * Description for Detach the user provided function app from the static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param functionAppName Name of the function app registered with the static site build.\n   * @param options The options parameters.\n   */\n  detachUserProvidedFunctionAppFromStaticSiteBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    functionAppName: string,\n    options?: StaticSitesDetachUserProvidedFunctionAppFromStaticSiteBuildOptionalParams,\n  ): Promise<void>;\n  /**\n   * Description for Deploys zipped content to a specific environment of a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName Name of the environment.\n   * @param staticSiteZipDeploymentEnvelope A JSON representation of the StaticSiteZipDeployment\n   *                                        properties. See example.\n   * @param options The options parameters.\n   */\n  beginCreateZipDeploymentForStaticSiteBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    staticSiteZipDeploymentEnvelope: StaticSiteZipDeploymentARMResource,\n    options?: StaticSitesCreateZipDeploymentForStaticSiteBuildOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Description for Deploys zipped content to a specific environment of a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName Name of the environment.\n   * @param staticSiteZipDeploymentEnvelope A JSON representation of the StaticSiteZipDeployment\n   *                                        properties. See example.\n   * @param options The options parameters.\n   */\n  beginCreateZipDeploymentForStaticSiteBuildAndWait(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    staticSiteZipDeploymentEnvelope: StaticSiteZipDeploymentARMResource,\n    options?: StaticSitesCreateZipDeploymentForStaticSiteBuildOptionalParams,\n  ): Promise<void>;\n  /**\n   * Description for Creates or updates the app settings of a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param appSettings The dictionary containing the static site app settings to update.\n   * @param options The options parameters.\n   */\n  createOrUpdateStaticSiteAppSettings(\n    resourceGroupName: string,\n    name: string,\n    appSettings: StringDictionary,\n    options?: StaticSitesCreateOrUpdateStaticSiteAppSettingsOptionalParams,\n  ): Promise<StaticSitesCreateOrUpdateStaticSiteAppSettingsResponse>;\n  /**\n   * Description for Gets the basic auth properties for a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param basicAuthName name of the basic auth entry.\n   * @param options The options parameters.\n   */\n  getBasicAuth(\n    resourceGroupName: string,\n    name: string,\n    basicAuthName: BasicAuthName,\n    options?: StaticSitesGetBasicAuthOptionalParams,\n  ): Promise<StaticSitesGetBasicAuthResponse>;\n  /**\n   * Description for Adds or updates basic auth for a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param basicAuthName name of the basic auth entry.\n   * @param basicAuthEnvelope A JSON representation of the basic auth properties.\n   * @param options The options parameters.\n   */\n  createOrUpdateBasicAuth(\n    resourceGroupName: string,\n    name: string,\n    basicAuthName: BasicAuthName,\n    basicAuthEnvelope: StaticSiteBasicAuthPropertiesARMResource,\n    options?: StaticSitesCreateOrUpdateBasicAuthOptionalParams,\n  ): Promise<StaticSitesCreateOrUpdateBasicAuthResponse>;\n  /**\n   * Description for Creates or updates the function app settings of a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param appSettings The dictionary containing the static site function app settings to update.\n   * @param options The options parameters.\n   */\n  createOrUpdateStaticSiteFunctionAppSettings(\n    resourceGroupName: string,\n    name: string,\n    appSettings: StringDictionary,\n    options?: StaticSitesCreateOrUpdateStaticSiteFunctionAppSettingsOptionalParams,\n  ): Promise<StaticSitesCreateOrUpdateStaticSiteFunctionAppSettingsResponse>;\n  /**\n   * Description for Creates an invitation link for a user with the role\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param staticSiteUserRolesInvitationEnvelope Static sites user roles invitation resource.\n   * @param options The options parameters.\n   */\n  createUserRolesInvitationLink(\n    resourceGroupName: string,\n    name: string,\n    staticSiteUserRolesInvitationEnvelope: StaticSiteUserInvitationRequestResource,\n    options?: StaticSitesCreateUserRolesInvitationLinkOptionalParams,\n  ): Promise<StaticSitesCreateUserRolesInvitationLinkResponse>;\n  /**\n   * Description for Gets an existing custom domain for a particular static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site resource to search in.\n   * @param domainName The custom domain name.\n   * @param options The options parameters.\n   */\n  getStaticSiteCustomDomain(\n    resourceGroupName: string,\n    name: string,\n    domainName: string,\n    options?: StaticSitesGetStaticSiteCustomDomainOptionalParams,\n  ): Promise<StaticSitesGetStaticSiteCustomDomainResponse>;\n  /**\n   * Description for Creates a new static site custom domain in an existing resource group and static\n   * site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param domainName The custom domain to create.\n   * @param staticSiteCustomDomainRequestPropertiesEnvelope A JSON representation of the static site\n   *                                                        custom domain request properties. See example.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateStaticSiteCustomDomain(\n    resourceGroupName: string,\n    name: string,\n    domainName: string,\n    staticSiteCustomDomainRequestPropertiesEnvelope: StaticSiteCustomDomainRequestPropertiesARMResource,\n    options?: StaticSitesCreateOrUpdateStaticSiteCustomDomainOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<StaticSitesCreateOrUpdateStaticSiteCustomDomainResponse>,\n      StaticSitesCreateOrUpdateStaticSiteCustomDomainResponse\n    >\n  >;\n  /**\n   * Description for Creates a new static site custom domain in an existing resource group and static\n   * site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param domainName The custom domain to create.\n   * @param staticSiteCustomDomainRequestPropertiesEnvelope A JSON representation of the static site\n   *                                                        custom domain request properties. See example.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateStaticSiteCustomDomainAndWait(\n    resourceGroupName: string,\n    name: string,\n    domainName: string,\n    staticSiteCustomDomainRequestPropertiesEnvelope: StaticSiteCustomDomainRequestPropertiesARMResource,\n    options?: StaticSitesCreateOrUpdateStaticSiteCustomDomainOptionalParams,\n  ): Promise<StaticSitesCreateOrUpdateStaticSiteCustomDomainResponse>;\n  /**\n   * Description for Deletes a custom domain.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param domainName The custom domain to delete.\n   * @param options The options parameters.\n   */\n  beginDeleteStaticSiteCustomDomain(\n    resourceGroupName: string,\n    name: string,\n    domainName: string,\n    options?: StaticSitesDeleteStaticSiteCustomDomainOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Description for Deletes a custom domain.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param domainName The custom domain to delete.\n   * @param options The options parameters.\n   */\n  beginDeleteStaticSiteCustomDomainAndWait(\n    resourceGroupName: string,\n    name: string,\n    domainName: string,\n    options?: StaticSitesDeleteStaticSiteCustomDomainOptionalParams,\n  ): Promise<void>;\n  /**\n   * Description for Validates a particular custom domain can be added to a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param domainName The custom domain to validate.\n   * @param staticSiteCustomDomainRequestPropertiesEnvelope A JSON representation of the static site\n   *                                                        custom domain request properties. See example.\n   * @param options The options parameters.\n   */\n  beginValidateCustomDomainCanBeAddedToStaticSite(\n    resourceGroupName: string,\n    name: string,\n    domainName: string,\n    staticSiteCustomDomainRequestPropertiesEnvelope: StaticSiteCustomDomainRequestPropertiesARMResource,\n    options?: StaticSitesValidateCustomDomainCanBeAddedToStaticSiteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Description for Validates a particular custom domain can be added to a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param domainName The custom domain to validate.\n   * @param staticSiteCustomDomainRequestPropertiesEnvelope A JSON representation of the static site\n   *                                                        custom domain request properties. See example.\n   * @param options The options parameters.\n   */\n  beginValidateCustomDomainCanBeAddedToStaticSiteAndWait(\n    resourceGroupName: string,\n    name: string,\n    domainName: string,\n    staticSiteCustomDomainRequestPropertiesEnvelope: StaticSiteCustomDomainRequestPropertiesARMResource,\n    options?: StaticSitesValidateCustomDomainCanBeAddedToStaticSiteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Returns overview of a database connection for a static site by name\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param databaseConnectionName Name of the database connection.\n   * @param options The options parameters.\n   */\n  getDatabaseConnection(\n    resourceGroupName: string,\n    name: string,\n    databaseConnectionName: string,\n    options?: StaticSitesGetDatabaseConnectionOptionalParams,\n  ): Promise<StaticSitesGetDatabaseConnectionResponse>;\n  /**\n   * Description for Create or update a database connection for a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param databaseConnectionName Name of the database connection.\n   * @param databaseConnectionRequestEnvelope A JSON representation of the database connection request\n   *                                          properties\n   * @param options The options parameters.\n   */\n  createOrUpdateDatabaseConnection(\n    resourceGroupName: string,\n    name: string,\n    databaseConnectionName: string,\n    databaseConnectionRequestEnvelope: DatabaseConnection,\n    options?: StaticSitesCreateOrUpdateDatabaseConnectionOptionalParams,\n  ): Promise<StaticSitesCreateOrUpdateDatabaseConnectionResponse>;\n  /**\n   * Delete a database connection for a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param databaseConnectionName Name of the database connection.\n   * @param options The options parameters.\n   */\n  deleteDatabaseConnection(\n    resourceGroupName: string,\n    name: string,\n    databaseConnectionName: string,\n    options?: StaticSitesDeleteDatabaseConnectionOptionalParams,\n  ): Promise<void>;\n  /**\n   * Description for Create or update a database connection for a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param databaseConnectionName Name of the database connection.\n   * @param databaseConnectionRequestEnvelope A JSON representation of the database connection request\n   *                                          properties\n   * @param options The options parameters.\n   */\n  updateDatabaseConnection(\n    resourceGroupName: string,\n    name: string,\n    databaseConnectionName: string,\n    databaseConnectionRequestEnvelope: DatabaseConnectionPatchRequest,\n    options?: StaticSitesUpdateDatabaseConnectionOptionalParams,\n  ): Promise<StaticSitesUpdateDatabaseConnectionResponse>;\n  /**\n   * Returns details of a database connection for a static site by name\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param databaseConnectionName Name of the database connection.\n   * @param options The options parameters.\n   */\n  getDatabaseConnectionWithDetails(\n    resourceGroupName: string,\n    name: string,\n    databaseConnectionName: string,\n    options?: StaticSitesGetDatabaseConnectionWithDetailsOptionalParams,\n  ): Promise<StaticSitesGetDatabaseConnectionWithDetailsResponse>;\n  /**\n   * Description for Detaches a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site to detach.\n   * @param options The options parameters.\n   */\n  beginDetachStaticSite(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesDetachStaticSiteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Description for Detaches a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site to detach.\n   * @param options The options parameters.\n   */\n  beginDetachStaticSiteAndWait(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesDetachStaticSiteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Description for Gets the application settings of a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  listStaticSiteAppSettings(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListStaticSiteAppSettingsOptionalParams,\n  ): Promise<StaticSitesListStaticSiteAppSettingsResponse>;\n  /**\n   * Description for Lists the roles configured for the static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  listStaticSiteConfiguredRoles(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListStaticSiteConfiguredRolesOptionalParams,\n  ): Promise<StaticSitesListStaticSiteConfiguredRolesResponse>;\n  /**\n   * Description for Gets the application settings of a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  listStaticSiteFunctionAppSettings(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListStaticSiteFunctionAppSettingsOptionalParams,\n  ): Promise<StaticSitesListStaticSiteFunctionAppSettingsResponse>;\n  /**\n   * Description for Lists the secrets for an existing static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  listStaticSiteSecrets(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListStaticSiteSecretsOptionalParams,\n  ): Promise<StaticSitesListStaticSiteSecretsResponse>;\n  /**\n   * Description for Gets a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param privateEndpointConnectionName Name of the private endpoint connection.\n   * @param options The options parameters.\n   */\n  getPrivateEndpointConnection(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    options?: StaticSitesGetPrivateEndpointConnectionOptionalParams,\n  ): Promise<StaticSitesGetPrivateEndpointConnectionResponse>;\n  /**\n   * Description for Approves or rejects a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param privateEndpointConnectionName Name of the private endpoint connection.\n   * @param privateEndpointWrapper Request body.\n   * @param options The options parameters.\n   */\n  beginApproveOrRejectPrivateEndpointConnection(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    privateEndpointWrapper: RemotePrivateEndpointConnectionARMResource,\n    options?: StaticSitesApproveOrRejectPrivateEndpointConnectionOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<StaticSitesApproveOrRejectPrivateEndpointConnectionResponse>,\n      StaticSitesApproveOrRejectPrivateEndpointConnectionResponse\n    >\n  >;\n  /**\n   * Description for Approves or rejects a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param privateEndpointConnectionName Name of the private endpoint connection.\n   * @param privateEndpointWrapper Request body.\n   * @param options The options parameters.\n   */\n  beginApproveOrRejectPrivateEndpointConnectionAndWait(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    privateEndpointWrapper: RemotePrivateEndpointConnectionARMResource,\n    options?: StaticSitesApproveOrRejectPrivateEndpointConnectionOptionalParams,\n  ): Promise<StaticSitesApproveOrRejectPrivateEndpointConnectionResponse>;\n  /**\n   * Description for Deletes a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param privateEndpointConnectionName Name of the private endpoint connection.\n   * @param options The options parameters.\n   */\n  beginDeletePrivateEndpointConnection(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    options?: StaticSitesDeletePrivateEndpointConnectionOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<StaticSitesDeletePrivateEndpointConnectionResponse>,\n      StaticSitesDeletePrivateEndpointConnectionResponse\n    >\n  >;\n  /**\n   * Description for Deletes a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param privateEndpointConnectionName Name of the private endpoint connection.\n   * @param options The options parameters.\n   */\n  beginDeletePrivateEndpointConnectionAndWait(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    options?: StaticSitesDeletePrivateEndpointConnectionOptionalParams,\n  ): Promise<StaticSitesDeletePrivateEndpointConnectionResponse>;\n  /**\n   * Description for Gets the private link resources\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the site.\n   * @param options The options parameters.\n   */\n  getPrivateLinkResources(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetPrivateLinkResourcesOptionalParams,\n  ): Promise<StaticSitesGetPrivateLinkResourcesResponse>;\n  /**\n   * Description for Resets the api key for an existing static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param resetPropertiesEnvelope Static Site Reset Properties ARM resource.\n   * @param options The options parameters.\n   */\n  resetStaticSiteApiKey(\n    resourceGroupName: string,\n    name: string,\n    resetPropertiesEnvelope: StaticSiteResetPropertiesARMResource,\n    options?: StaticSitesResetStaticSiteApiKeyOptionalParams,\n  ): Promise<void>;\n  /**\n   * Description for Gets the details of the user provided function app registered with a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param functionAppName Name of the function app registered with the static site.\n   * @param options The options parameters.\n   */\n  getUserProvidedFunctionAppForStaticSite(\n    resourceGroupName: string,\n    name: string,\n    functionAppName: string,\n    options?: StaticSitesGetUserProvidedFunctionAppForStaticSiteOptionalParams,\n  ): Promise<StaticSitesGetUserProvidedFunctionAppForStaticSiteResponse>;\n  /**\n   * Description for Register a user provided function app with a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param functionAppName Name of the function app to register with the static site.\n   * @param staticSiteUserProvidedFunctionEnvelope A JSON representation of the user provided function\n   *                                               app properties. See example.\n   * @param options The options parameters.\n   */\n  beginRegisterUserProvidedFunctionAppWithStaticSite(\n    resourceGroupName: string,\n    name: string,\n    functionAppName: string,\n    staticSiteUserProvidedFunctionEnvelope: StaticSiteUserProvidedFunctionAppARMResource,\n    options?: StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteResponse>,\n      StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteResponse\n    >\n  >;\n  /**\n   * Description for Register a user provided function app with a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param functionAppName Name of the function app to register with the static site.\n   * @param staticSiteUserProvidedFunctionEnvelope A JSON representation of the user provided function\n   *                                               app properties. See example.\n   * @param options The options parameters.\n   */\n  beginRegisterUserProvidedFunctionAppWithStaticSiteAndWait(\n    resourceGroupName: string,\n    name: string,\n    functionAppName: string,\n    staticSiteUserProvidedFunctionEnvelope: StaticSiteUserProvidedFunctionAppARMResource,\n    options?: StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteOptionalParams,\n  ): Promise<StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteResponse>;\n  /**\n   * Description for Detach the user provided function app from the static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param functionAppName Name of the function app registered with the static site.\n   * @param options The options parameters.\n   */\n  detachUserProvidedFunctionAppFromStaticSite(\n    resourceGroupName: string,\n    name: string,\n    functionAppName: string,\n    options?: StaticSitesDetachUserProvidedFunctionAppFromStaticSiteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Description for Deploys zipped content to a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param staticSiteZipDeploymentEnvelope A JSON representation of the StaticSiteZipDeployment\n   *                                        properties. See example.\n   * @param options The options parameters.\n   */\n  beginCreateZipDeploymentForStaticSite(\n    resourceGroupName: string,\n    name: string,\n    staticSiteZipDeploymentEnvelope: StaticSiteZipDeploymentARMResource,\n    options?: StaticSitesCreateZipDeploymentForStaticSiteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Description for Deploys zipped content to a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param staticSiteZipDeploymentEnvelope A JSON representation of the StaticSiteZipDeployment\n   *                                        properties. See example.\n   * @param options The options parameters.\n   */\n  beginCreateZipDeploymentForStaticSiteAndWait(\n    resourceGroupName: string,\n    name: string,\n    staticSiteZipDeploymentEnvelope: StaticSiteZipDeploymentARMResource,\n    options?: StaticSitesCreateZipDeploymentForStaticSiteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Validates that a backend can be linked to a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param linkedBackendName Name of the linked backend that should be retrieved\n   * @param staticSiteLinkedBackendEnvelope A JSON representation of the linked backend request\n   *                                        properties\n   * @param options The options parameters.\n   */\n  beginValidateBackend(\n    resourceGroupName: string,\n    name: string,\n    linkedBackendName: string,\n    staticSiteLinkedBackendEnvelope: StaticSiteLinkedBackendARMResource,\n    options?: StaticSitesValidateBackendOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Validates that a backend can be linked to a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param linkedBackendName Name of the linked backend that should be retrieved\n   * @param staticSiteLinkedBackendEnvelope A JSON representation of the linked backend request\n   *                                        properties\n   * @param options The options parameters.\n   */\n  beginValidateBackendAndWait(\n    resourceGroupName: string,\n    name: string,\n    linkedBackendName: string,\n    staticSiteLinkedBackendEnvelope: StaticSiteLinkedBackendARMResource,\n    options?: StaticSitesValidateBackendOptionalParams,\n  ): Promise<void>;\n  /**\n   * Validates that a backend can be linked to a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier\n   * @param linkedBackendName Name of the linked backend that should be retrieved\n   * @param staticSiteLinkedBackendEnvelope A JSON representation of the linked backend request\n   *                                        properties\n   * @param options The options parameters.\n   */\n  beginValidateBackendForBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    linkedBackendName: string,\n    staticSiteLinkedBackendEnvelope: StaticSiteLinkedBackendARMResource,\n    options?: StaticSitesValidateBackendForBuildOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Validates that a backend can be linked to a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier\n   * @param linkedBackendName Name of the linked backend that should be retrieved\n   * @param staticSiteLinkedBackendEnvelope A JSON representation of the linked backend request\n   *                                        properties\n   * @param options The options parameters.\n   */\n  beginValidateBackendForBuildAndWait(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    linkedBackendName: string,\n    staticSiteLinkedBackendEnvelope: StaticSiteLinkedBackendARMResource,\n    options?: StaticSitesValidateBackendForBuildOptionalParams,\n  ): Promise<void>;\n  /**\n   * Returns the details of a linked backend linked to a static site by name\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param linkedBackendName Name of the linked backend that should be retrieved\n   * @param options The options parameters.\n   */\n  getLinkedBackend(\n    resourceGroupName: string,\n    name: string,\n    linkedBackendName: string,\n    options?: StaticSitesGetLinkedBackendOptionalParams,\n  ): Promise<StaticSitesGetLinkedBackendResponse>;\n  /**\n   * Link backend to a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param linkedBackendName Name of the backend to link to the static site\n   * @param staticSiteLinkedBackendEnvelope A JSON representation of the linked backend request\n   *                                        properties\n   * @param options The options parameters.\n   */\n  beginLinkBackend(\n    resourceGroupName: string,\n    name: string,\n    linkedBackendName: string,\n    staticSiteLinkedBackendEnvelope: StaticSiteLinkedBackendARMResource,\n    options?: StaticSitesLinkBackendOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<StaticSitesLinkBackendResponse>,\n      StaticSitesLinkBackendResponse\n    >\n  >;\n  /**\n   * Link backend to a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param linkedBackendName Name of the backend to link to the static site\n   * @param staticSiteLinkedBackendEnvelope A JSON representation of the linked backend request\n   *                                        properties\n   * @param options The options parameters.\n   */\n  beginLinkBackendAndWait(\n    resourceGroupName: string,\n    name: string,\n    linkedBackendName: string,\n    staticSiteLinkedBackendEnvelope: StaticSiteLinkedBackendARMResource,\n    options?: StaticSitesLinkBackendOptionalParams,\n  ): Promise<StaticSitesLinkBackendResponse>;\n  /**\n   * Unlink a backend from a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param linkedBackendName Name of the backend linked to the static site\n   * @param options The options parameters.\n   */\n  unlinkBackend(\n    resourceGroupName: string,\n    name: string,\n    linkedBackendName: string,\n    options?: StaticSitesUnlinkBackendOptionalParams,\n  ): Promise<void>;\n  /**\n   * Returns the details of a linked backend linked to a static site build by name\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier\n   * @param linkedBackendName Name of the linked backend that should be retrieved\n   * @param options The options parameters.\n   */\n  getLinkedBackendForBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    linkedBackendName: string,\n    options?: StaticSitesGetLinkedBackendForBuildOptionalParams,\n  ): Promise<StaticSitesGetLinkedBackendForBuildResponse>;\n  /**\n   * Link backend to a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier\n   * @param linkedBackendName Name of the backend to link to the static site\n   * @param staticSiteLinkedBackendEnvelope A JSON representation of the linked backend request\n   *                                        properties\n   * @param options The options parameters.\n   */\n  beginLinkBackendToBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    linkedBackendName: string,\n    staticSiteLinkedBackendEnvelope: StaticSiteLinkedBackendARMResource,\n    options?: StaticSitesLinkBackendToBuildOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<StaticSitesLinkBackendToBuildResponse>,\n      StaticSitesLinkBackendToBuildResponse\n    >\n  >;\n  /**\n   * Link backend to a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier\n   * @param linkedBackendName Name of the backend to link to the static site\n   * @param staticSiteLinkedBackendEnvelope A JSON representation of the linked backend request\n   *                                        properties\n   * @param options The options parameters.\n   */\n  beginLinkBackendToBuildAndWait(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    linkedBackendName: string,\n    staticSiteLinkedBackendEnvelope: StaticSiteLinkedBackendARMResource,\n    options?: StaticSitesLinkBackendToBuildOptionalParams,\n  ): Promise<StaticSitesLinkBackendToBuildResponse>;\n  /**\n   * Unlink a backend from a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier\n   * @param linkedBackendName Name of the backend linked to the static site\n   * @param options The options parameters.\n   */\n  unlinkBackendFromBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    linkedBackendName: string,\n    options?: StaticSitesUnlinkBackendFromBuildOptionalParams,\n  ): Promise<void>;\n}\n"]}