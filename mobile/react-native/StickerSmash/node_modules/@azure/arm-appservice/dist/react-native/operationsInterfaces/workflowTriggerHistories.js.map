{"version":3,"file":"workflowTriggerHistories.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/workflowTriggerHistories.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  WorkflowTriggerHistory,\n  WorkflowTriggerHistoriesListOptionalParams,\n  WorkflowTriggerHistoriesGetOptionalParams,\n  WorkflowTriggerHistoriesGetResponse,\n  WorkflowTriggerHistoriesResubmitOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a WorkflowTriggerHistories. */\nexport interface WorkflowTriggerHistories {\n  /**\n   * Gets a list of workflow trigger histories.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param workflowName The workflow name.\n   * @param triggerName The workflow trigger name.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    name: string,\n    workflowName: string,\n    triggerName: string,\n    options?: WorkflowTriggerHistoriesListOptionalParams,\n  ): PagedAsyncIterableIterator<WorkflowTriggerHistory>;\n  /**\n   * Gets a workflow trigger history.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param workflowName The workflow name.\n   * @param triggerName The workflow trigger name.\n   * @param historyName The workflow trigger history name. Corresponds to the run name for triggers that\n   *                    resulted in a run.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    name: string,\n    workflowName: string,\n    triggerName: string,\n    historyName: string,\n    options?: WorkflowTriggerHistoriesGetOptionalParams,\n  ): Promise<WorkflowTriggerHistoriesGetResponse>;\n  /**\n   * Resubmits a workflow run based on the trigger history.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param workflowName The workflow name.\n   * @param triggerName The workflow trigger name.\n   * @param historyName The workflow trigger history name. Corresponds to the run name for triggers that\n   *                    resulted in a run.\n   * @param options The options parameters.\n   */\n  beginResubmit(\n    resourceGroupName: string,\n    name: string,\n    workflowName: string,\n    triggerName: string,\n    historyName: string,\n    options?: WorkflowTriggerHistoriesResubmitOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Resubmits a workflow run based on the trigger history.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param workflowName The workflow name.\n   * @param triggerName The workflow trigger name.\n   * @param historyName The workflow trigger history name. Corresponds to the run name for triggers that\n   *                    resulted in a run.\n   * @param options The options parameters.\n   */\n  beginResubmitAndWait(\n    resourceGroupName: string,\n    name: string,\n    workflowName: string,\n    triggerName: string,\n    historyName: string,\n    options?: WorkflowTriggerHistoriesResubmitOptionalParams,\n  ): Promise<void>;\n}\n"]}