{"version":3,"file":"provider.js","sourceRoot":"","sources":["../../../src/operations/provider.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { Provider } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { WebSiteManagementClient } from \"../webSiteManagementClient.js\";\nimport {\n  ApplicationStackResource,\n  ProviderGetAvailableStacksNextOptionalParams,\n  ProviderGetAvailableStacksOptionalParams,\n  ProviderGetAvailableStacksResponse,\n  FunctionAppStack,\n  ProviderGetFunctionAppStacksNextOptionalParams,\n  ProviderGetFunctionAppStacksOptionalParams,\n  ProviderGetFunctionAppStacksResponse,\n  ProviderGetFunctionAppStacksForLocationNextOptionalParams,\n  ProviderGetFunctionAppStacksForLocationOptionalParams,\n  ProviderGetFunctionAppStacksForLocationResponse,\n  WebAppStack,\n  ProviderGetWebAppStacksForLocationNextOptionalParams,\n  ProviderGetWebAppStacksForLocationOptionalParams,\n  ProviderGetWebAppStacksForLocationResponse,\n  CsmOperationDescription,\n  ProviderListOperationsNextOptionalParams,\n  ProviderListOperationsOptionalParams,\n  ProviderListOperationsResponse,\n  ProviderGetWebAppStacksNextOptionalParams,\n  ProviderGetWebAppStacksOptionalParams,\n  ProviderGetWebAppStacksResponse,\n  ProviderGetAvailableStacksOnPremNextOptionalParams,\n  ProviderGetAvailableStacksOnPremOptionalParams,\n  ProviderGetAvailableStacksOnPremResponse,\n  ProviderGetAvailableStacksNextResponse,\n  ProviderGetFunctionAppStacksNextResponse,\n  ProviderGetFunctionAppStacksForLocationNextResponse,\n  ProviderGetWebAppStacksForLocationNextResponse,\n  ProviderListOperationsNextResponse,\n  ProviderGetWebAppStacksNextResponse,\n  ProviderGetAvailableStacksOnPremNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Provider operations. */\nexport class ProviderImpl implements Provider {\n  private readonly client: WebSiteManagementClient;\n\n  /**\n   * Initialize a new instance of the class Provider class.\n   * @param client Reference to the service client\n   */\n  constructor(client: WebSiteManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Description for Get available application frameworks and their versions\n   * @param options The options parameters.\n   */\n  public listAvailableStacks(\n    options?: ProviderGetAvailableStacksOptionalParams,\n  ): PagedAsyncIterableIterator<ApplicationStackResource> {\n    const iter = this.getAvailableStacksPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getAvailableStacksPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *getAvailableStacksPagingPage(\n    options?: ProviderGetAvailableStacksOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ApplicationStackResource[]> {\n    let result: ProviderGetAvailableStacksResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getAvailableStacks(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getAvailableStacksNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getAvailableStacksPagingAll(\n    options?: ProviderGetAvailableStacksOptionalParams,\n  ): AsyncIterableIterator<ApplicationStackResource> {\n    for await (const page of this.getAvailableStacksPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get available Function app frameworks and their versions\n   * @param options The options parameters.\n   */\n  public listFunctionAppStacks(\n    options?: ProviderGetFunctionAppStacksOptionalParams,\n  ): PagedAsyncIterableIterator<FunctionAppStack> {\n    const iter = this.getFunctionAppStacksPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getFunctionAppStacksPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *getFunctionAppStacksPagingPage(\n    options?: ProviderGetFunctionAppStacksOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<FunctionAppStack[]> {\n    let result: ProviderGetFunctionAppStacksResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getFunctionAppStacks(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getFunctionAppStacksNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getFunctionAppStacksPagingAll(\n    options?: ProviderGetFunctionAppStacksOptionalParams,\n  ): AsyncIterableIterator<FunctionAppStack> {\n    for await (const page of this.getFunctionAppStacksPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get available Function app frameworks and their versions for location\n   * @param location Function App stack location.\n   * @param options The options parameters.\n   */\n  public listFunctionAppStacksForLocation(\n    location: string,\n    options?: ProviderGetFunctionAppStacksForLocationOptionalParams,\n  ): PagedAsyncIterableIterator<FunctionAppStack> {\n    const iter = this.getFunctionAppStacksForLocationPagingAll(\n      location,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getFunctionAppStacksForLocationPagingPage(\n          location,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getFunctionAppStacksForLocationPagingPage(\n    location: string,\n    options?: ProviderGetFunctionAppStacksForLocationOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<FunctionAppStack[]> {\n    let result: ProviderGetFunctionAppStacksForLocationResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getFunctionAppStacksForLocation(location, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getFunctionAppStacksForLocationNext(\n        location,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getFunctionAppStacksForLocationPagingAll(\n    location: string,\n    options?: ProviderGetFunctionAppStacksForLocationOptionalParams,\n  ): AsyncIterableIterator<FunctionAppStack> {\n    for await (const page of this.getFunctionAppStacksForLocationPagingPage(\n      location,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get available Web app frameworks and their versions for location\n   * @param location Web App stack location.\n   * @param options The options parameters.\n   */\n  public listWebAppStacksForLocation(\n    location: string,\n    options?: ProviderGetWebAppStacksForLocationOptionalParams,\n  ): PagedAsyncIterableIterator<WebAppStack> {\n    const iter = this.getWebAppStacksForLocationPagingAll(location, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getWebAppStacksForLocationPagingPage(\n          location,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getWebAppStacksForLocationPagingPage(\n    location: string,\n    options?: ProviderGetWebAppStacksForLocationOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<WebAppStack[]> {\n    let result: ProviderGetWebAppStacksForLocationResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getWebAppStacksForLocation(location, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getWebAppStacksForLocationNext(\n        location,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getWebAppStacksForLocationPagingAll(\n    location: string,\n    options?: ProviderGetWebAppStacksForLocationOptionalParams,\n  ): AsyncIterableIterator<WebAppStack> {\n    for await (const page of this.getWebAppStacksForLocationPagingPage(\n      location,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets all available operations for the Microsoft.Web resource provider. Also exposes\n   * resource metric definitions\n   * @param options The options parameters.\n   */\n  public listOperations(\n    options?: ProviderListOperationsOptionalParams,\n  ): PagedAsyncIterableIterator<CsmOperationDescription> {\n    const iter = this.listOperationsPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listOperationsPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listOperationsPagingPage(\n    options?: ProviderListOperationsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<CsmOperationDescription[]> {\n    let result: ProviderListOperationsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listOperations(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listOperationsNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listOperationsPagingAll(\n    options?: ProviderListOperationsOptionalParams,\n  ): AsyncIterableIterator<CsmOperationDescription> {\n    for await (const page of this.listOperationsPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get available Web app frameworks and their versions\n   * @param options The options parameters.\n   */\n  public listWebAppStacks(\n    options?: ProviderGetWebAppStacksOptionalParams,\n  ): PagedAsyncIterableIterator<WebAppStack> {\n    const iter = this.getWebAppStacksPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getWebAppStacksPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *getWebAppStacksPagingPage(\n    options?: ProviderGetWebAppStacksOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<WebAppStack[]> {\n    let result: ProviderGetWebAppStacksResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getWebAppStacks(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getWebAppStacksNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getWebAppStacksPagingAll(\n    options?: ProviderGetWebAppStacksOptionalParams,\n  ): AsyncIterableIterator<WebAppStack> {\n    for await (const page of this.getWebAppStacksPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get available application frameworks and their versions\n   * @param options The options parameters.\n   */\n  public listAvailableStacksOnPrem(\n    options?: ProviderGetAvailableStacksOnPremOptionalParams,\n  ): PagedAsyncIterableIterator<ApplicationStackResource> {\n    const iter = this.getAvailableStacksOnPremPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getAvailableStacksOnPremPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *getAvailableStacksOnPremPagingPage(\n    options?: ProviderGetAvailableStacksOnPremOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ApplicationStackResource[]> {\n    let result: ProviderGetAvailableStacksOnPremResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getAvailableStacksOnPrem(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getAvailableStacksOnPremNext(\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getAvailableStacksOnPremPagingAll(\n    options?: ProviderGetAvailableStacksOnPremOptionalParams,\n  ): AsyncIterableIterator<ApplicationStackResource> {\n    for await (const page of this.getAvailableStacksOnPremPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get available application frameworks and their versions\n   * @param options The options parameters.\n   */\n  private _getAvailableStacks(\n    options?: ProviderGetAvailableStacksOptionalParams,\n  ): Promise<ProviderGetAvailableStacksResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getAvailableStacksOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get available Function app frameworks and their versions\n   * @param options The options parameters.\n   */\n  private _getFunctionAppStacks(\n    options?: ProviderGetFunctionAppStacksOptionalParams,\n  ): Promise<ProviderGetFunctionAppStacksResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getFunctionAppStacksOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get available Function app frameworks and their versions for location\n   * @param location Function App stack location.\n   * @param options The options parameters.\n   */\n  private _getFunctionAppStacksForLocation(\n    location: string,\n    options?: ProviderGetFunctionAppStacksForLocationOptionalParams,\n  ): Promise<ProviderGetFunctionAppStacksForLocationResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      getFunctionAppStacksForLocationOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get available Web app frameworks and their versions for location\n   * @param location Web App stack location.\n   * @param options The options parameters.\n   */\n  private _getWebAppStacksForLocation(\n    location: string,\n    options?: ProviderGetWebAppStacksForLocationOptionalParams,\n  ): Promise<ProviderGetWebAppStacksForLocationResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      getWebAppStacksForLocationOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets all available operations for the Microsoft.Web resource provider. Also exposes\n   * resource metric definitions\n   * @param options The options parameters.\n   */\n  private _listOperations(\n    options?: ProviderListOperationsOptionalParams,\n  ): Promise<ProviderListOperationsResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listOperationsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get available Web app frameworks and their versions\n   * @param options The options parameters.\n   */\n  private _getWebAppStacks(\n    options?: ProviderGetWebAppStacksOptionalParams,\n  ): Promise<ProviderGetWebAppStacksResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getWebAppStacksOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get available application frameworks and their versions\n   * @param options The options parameters.\n   */\n  private _getAvailableStacksOnPrem(\n    options?: ProviderGetAvailableStacksOnPremOptionalParams,\n  ): Promise<ProviderGetAvailableStacksOnPremResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getAvailableStacksOnPremOperationSpec,\n    );\n  }\n\n  /**\n   * GetAvailableStacksNext\n   * @param nextLink The nextLink from the previous successful call to the GetAvailableStacks method.\n   * @param options The options parameters.\n   */\n  private _getAvailableStacksNext(\n    nextLink: string,\n    options?: ProviderGetAvailableStacksNextOptionalParams,\n  ): Promise<ProviderGetAvailableStacksNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      getAvailableStacksNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetFunctionAppStacksNext\n   * @param nextLink The nextLink from the previous successful call to the GetFunctionAppStacks method.\n   * @param options The options parameters.\n   */\n  private _getFunctionAppStacksNext(\n    nextLink: string,\n    options?: ProviderGetFunctionAppStacksNextOptionalParams,\n  ): Promise<ProviderGetFunctionAppStacksNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      getFunctionAppStacksNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetFunctionAppStacksForLocationNext\n   * @param location Function App stack location.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 GetFunctionAppStacksForLocation method.\n   * @param options The options parameters.\n   */\n  private _getFunctionAppStacksForLocationNext(\n    location: string,\n    nextLink: string,\n    options?: ProviderGetFunctionAppStacksForLocationNextOptionalParams,\n  ): Promise<ProviderGetFunctionAppStacksForLocationNextResponse> {\n    return this.client.sendOperationRequest(\n      { location, nextLink, options },\n      getFunctionAppStacksForLocationNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetWebAppStacksForLocationNext\n   * @param location Web App stack location.\n   * @param nextLink The nextLink from the previous successful call to the GetWebAppStacksForLocation\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _getWebAppStacksForLocationNext(\n    location: string,\n    nextLink: string,\n    options?: ProviderGetWebAppStacksForLocationNextOptionalParams,\n  ): Promise<ProviderGetWebAppStacksForLocationNextResponse> {\n    return this.client.sendOperationRequest(\n      { location, nextLink, options },\n      getWebAppStacksForLocationNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListOperationsNext\n   * @param nextLink The nextLink from the previous successful call to the ListOperations method.\n   * @param options The options parameters.\n   */\n  private _listOperationsNext(\n    nextLink: string,\n    options?: ProviderListOperationsNextOptionalParams,\n  ): Promise<ProviderListOperationsNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listOperationsNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetWebAppStacksNext\n   * @param nextLink The nextLink from the previous successful call to the GetWebAppStacks method.\n   * @param options The options parameters.\n   */\n  private _getWebAppStacksNext(\n    nextLink: string,\n    options?: ProviderGetWebAppStacksNextOptionalParams,\n  ): Promise<ProviderGetWebAppStacksNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      getWebAppStacksNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetAvailableStacksOnPremNext\n   * @param nextLink The nextLink from the previous successful call to the GetAvailableStacksOnPrem\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _getAvailableStacksOnPremNext(\n    nextLink: string,\n    options?: ProviderGetAvailableStacksOnPremNextOptionalParams,\n  ): Promise<ProviderGetAvailableStacksOnPremNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      getAvailableStacksOnPremNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getAvailableStacksOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Web/availableStacks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApplicationStackCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.osTypeSelected],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getFunctionAppStacksOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Web/functionAppStacks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionAppStackCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.stackOsType],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getFunctionAppStacksForLocationOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Web/locations/{location}/functionAppStacks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionAppStackCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.stackOsType],\n  urlParameters: [Parameters.$host, Parameters.location],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getWebAppStacksForLocationOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Web/locations/{location}/webAppStacks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppStackCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.stackOsType],\n  urlParameters: [Parameters.$host, Parameters.location],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listOperationsOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Web/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CsmOperationCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getWebAppStacksOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Web/webAppStacks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppStackCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.stackOsType],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAvailableStacksOnPremOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Web/availableStacks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApplicationStackCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.osTypeSelected],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAvailableStacksNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApplicationStackCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getFunctionAppStacksNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FunctionAppStackCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getFunctionAppStacksForLocationNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.FunctionAppStackCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.location],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getWebAppStacksForLocationNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppStackCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.location],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listOperationsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CsmOperationCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getWebAppStacksNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppStackCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAvailableStacksOnPremNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApplicationStackCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}