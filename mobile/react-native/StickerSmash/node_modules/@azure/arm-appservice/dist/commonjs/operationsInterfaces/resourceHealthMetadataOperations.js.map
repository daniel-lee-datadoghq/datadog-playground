{"version":3,"file":"resourceHealthMetadataOperations.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/resourceHealthMetadataOperations.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport {\n  ResourceHealthMetadata,\n  ResourceHealthMetadataListOptionalParams,\n  ResourceHealthMetadataListByResourceGroupOptionalParams,\n  ResourceHealthMetadataListBySiteOptionalParams,\n  ResourceHealthMetadataListBySiteSlotOptionalParams,\n  ResourceHealthMetadataGetBySiteOptionalParams,\n  ResourceHealthMetadataGetBySiteResponse,\n  ResourceHealthMetadataGetBySiteSlotOptionalParams,\n  ResourceHealthMetadataGetBySiteSlotResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a ResourceHealthMetadataOperations. */\nexport interface ResourceHealthMetadataOperations {\n  /**\n   * Description for List all ResourceHealthMetadata for all sites in the subscription.\n   * @param options The options parameters.\n   */\n  list(\n    options?: ResourceHealthMetadataListOptionalParams,\n  ): PagedAsyncIterableIterator<ResourceHealthMetadata>;\n  /**\n   * Description for List all ResourceHealthMetadata for all sites in the resource group in the\n   * subscription.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param options The options parameters.\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?: ResourceHealthMetadataListByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<ResourceHealthMetadata>;\n  /**\n   * Description for Gets the category of ResourceHealthMetadata to use for the given site as a\n   * collection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param options The options parameters.\n   */\n  listBySite(\n    resourceGroupName: string,\n    name: string,\n    options?: ResourceHealthMetadataListBySiteOptionalParams,\n  ): PagedAsyncIterableIterator<ResourceHealthMetadata>;\n  /**\n   * Description for Gets the category of ResourceHealthMetadata to use for the given site as a\n   * collection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app.\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param options The options parameters.\n   */\n  listBySiteSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: ResourceHealthMetadataListBySiteSlotOptionalParams,\n  ): PagedAsyncIterableIterator<ResourceHealthMetadata>;\n  /**\n   * Description for Gets the category of ResourceHealthMetadata to use for the given site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app\n   * @param options The options parameters.\n   */\n  getBySite(\n    resourceGroupName: string,\n    name: string,\n    options?: ResourceHealthMetadataGetBySiteOptionalParams,\n  ): Promise<ResourceHealthMetadataGetBySiteResponse>;\n  /**\n   * Description for Gets the category of ResourceHealthMetadata to use for the given site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of web app\n   * @param slot Name of web app slot. If not specified then will default to production slot.\n   * @param options The options parameters.\n   */\n  getBySiteSlot(\n    resourceGroupName: string,\n    name: string,\n    slot: string,\n    options?: ResourceHealthMetadataGetBySiteSlotOptionalParams,\n  ): Promise<ResourceHealthMetadataGetBySiteSlotResponse>;\n}\n"]}