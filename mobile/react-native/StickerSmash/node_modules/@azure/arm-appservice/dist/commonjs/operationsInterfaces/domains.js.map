{"version":3,"file":"domains.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/domains.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  Domain,\n  DomainsListOptionalParams,\n  NameIdentifier,\n  DomainRecommendationSearchParameters,\n  DomainsListRecommendationsOptionalParams,\n  DomainsListByResourceGroupOptionalParams,\n  DomainOwnershipIdentifier,\n  DomainsListOwnershipIdentifiersOptionalParams,\n  DomainsCheckAvailabilityOptionalParams,\n  DomainsCheckAvailabilityResponse,\n  DomainsGetControlCenterSsoRequestOptionalParams,\n  DomainsGetControlCenterSsoRequestResponse,\n  DomainsGetOptionalParams,\n  DomainsGetResponse,\n  DomainsCreateOrUpdateOptionalParams,\n  DomainsCreateOrUpdateResponse,\n  DomainsDeleteOptionalParams,\n  DomainPatchResource,\n  DomainsUpdateOptionalParams,\n  DomainsUpdateResponse,\n  DomainsGetOwnershipIdentifierOptionalParams,\n  DomainsGetOwnershipIdentifierResponse,\n  DomainsCreateOrUpdateOwnershipIdentifierOptionalParams,\n  DomainsCreateOrUpdateOwnershipIdentifierResponse,\n  DomainsDeleteOwnershipIdentifierOptionalParams,\n  DomainsUpdateOwnershipIdentifierOptionalParams,\n  DomainsUpdateOwnershipIdentifierResponse,\n  DomainsRenewOptionalParams,\n  DomainsTransferOutOptionalParams,\n  DomainsTransferOutResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a Domains. */\nexport interface Domains {\n  /**\n   * Description for Get all domains in a subscription.\n   * @param options The options parameters.\n   */\n  list(options?: DomainsListOptionalParams): PagedAsyncIterableIterator<Domain>;\n  /**\n   * Description for Get domain name recommendations based on keywords.\n   * @param parameters Search parameters for domain name recommendations.\n   * @param options The options parameters.\n   */\n  listRecommendations(\n    parameters: DomainRecommendationSearchParameters,\n    options?: DomainsListRecommendationsOptionalParams,\n  ): PagedAsyncIterableIterator<NameIdentifier>;\n  /**\n   * Description for Get all domains in a resource group.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param options The options parameters.\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?: DomainsListByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<Domain>;\n  /**\n   * Description for Lists domain ownership identifiers.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param domainName Name of domain.\n   * @param options The options parameters.\n   */\n  listOwnershipIdentifiers(\n    resourceGroupName: string,\n    domainName: string,\n    options?: DomainsListOwnershipIdentifiersOptionalParams,\n  ): PagedAsyncIterableIterator<DomainOwnershipIdentifier>;\n  /**\n   * Description for Check if a domain is available for registration.\n   * @param identifier Name of the domain.\n   * @param options The options parameters.\n   */\n  checkAvailability(\n    identifier: NameIdentifier,\n    options?: DomainsCheckAvailabilityOptionalParams,\n  ): Promise<DomainsCheckAvailabilityResponse>;\n  /**\n   * Description for Generate a single sign-on request for the domain management portal.\n   * @param options The options parameters.\n   */\n  getControlCenterSsoRequest(\n    options?: DomainsGetControlCenterSsoRequestOptionalParams,\n  ): Promise<DomainsGetControlCenterSsoRequestResponse>;\n  /**\n   * Description for Get a domain.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param domainName Name of the domain.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    domainName: string,\n    options?: DomainsGetOptionalParams,\n  ): Promise<DomainsGetResponse>;\n  /**\n   * Description for Creates or updates a domain.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param domainName Name of the domain.\n   * @param domain Domain registration information.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    domainName: string,\n    domain: Domain,\n    options?: DomainsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DomainsCreateOrUpdateResponse>,\n      DomainsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Description for Creates or updates a domain.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param domainName Name of the domain.\n   * @param domain Domain registration information.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    domainName: string,\n    domain: Domain,\n    options?: DomainsCreateOrUpdateOptionalParams,\n  ): Promise<DomainsCreateOrUpdateResponse>;\n  /**\n   * Description for Delete a domain.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param domainName Name of the domain.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    domainName: string,\n    options?: DomainsDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Description for Creates or updates a domain.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param domainName Name of the domain.\n   * @param domain Domain registration information.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    domainName: string,\n    domain: DomainPatchResource,\n    options?: DomainsUpdateOptionalParams,\n  ): Promise<DomainsUpdateResponse>;\n  /**\n   * Description for Get ownership identifier for domain\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param domainName Name of domain.\n   * @param name Name of identifier.\n   * @param options The options parameters.\n   */\n  getOwnershipIdentifier(\n    resourceGroupName: string,\n    domainName: string,\n    name: string,\n    options?: DomainsGetOwnershipIdentifierOptionalParams,\n  ): Promise<DomainsGetOwnershipIdentifierResponse>;\n  /**\n   * Description for Creates an ownership identifier for a domain or updates identifier details for an\n   * existing identifier\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param domainName Name of domain.\n   * @param name Name of identifier.\n   * @param domainOwnershipIdentifier A JSON representation of the domain ownership properties.\n   * @param options The options parameters.\n   */\n  createOrUpdateOwnershipIdentifier(\n    resourceGroupName: string,\n    domainName: string,\n    name: string,\n    domainOwnershipIdentifier: DomainOwnershipIdentifier,\n    options?: DomainsCreateOrUpdateOwnershipIdentifierOptionalParams,\n  ): Promise<DomainsCreateOrUpdateOwnershipIdentifierResponse>;\n  /**\n   * Description for Delete ownership identifier for domain\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param domainName Name of domain.\n   * @param name Name of identifier.\n   * @param options The options parameters.\n   */\n  deleteOwnershipIdentifier(\n    resourceGroupName: string,\n    domainName: string,\n    name: string,\n    options?: DomainsDeleteOwnershipIdentifierOptionalParams,\n  ): Promise<void>;\n  /**\n   * Description for Creates an ownership identifier for a domain or updates identifier details for an\n   * existing identifier\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param domainName Name of domain.\n   * @param name Name of identifier.\n   * @param domainOwnershipIdentifier A JSON representation of the domain ownership properties.\n   * @param options The options parameters.\n   */\n  updateOwnershipIdentifier(\n    resourceGroupName: string,\n    domainName: string,\n    name: string,\n    domainOwnershipIdentifier: DomainOwnershipIdentifier,\n    options?: DomainsUpdateOwnershipIdentifierOptionalParams,\n  ): Promise<DomainsUpdateOwnershipIdentifierResponse>;\n  /**\n   * Description for Renew a domain.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param domainName Name of the domain.\n   * @param options The options parameters.\n   */\n  renew(\n    resourceGroupName: string,\n    domainName: string,\n    options?: DomainsRenewOptionalParams,\n  ): Promise<void>;\n  /**\n   * Transfer out domain to another registrar\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param domainName Name of domain.\n   * @param options The options parameters.\n   */\n  transferOut(\n    resourceGroupName: string,\n    domainName: string,\n    options?: DomainsTransferOutOptionalParams,\n  ): Promise<DomainsTransferOutResponse>;\n}\n"]}