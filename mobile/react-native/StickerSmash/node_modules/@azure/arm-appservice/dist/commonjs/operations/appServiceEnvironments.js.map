{"version":3,"file":"appServiceEnvironments.js","sourceRoot":"","sources":["../../../src/operations/appServiceEnvironments.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { AppServiceEnvironments } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { WebSiteManagementClient } from \"../webSiteManagementClient.js\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller,\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl.js\";\nimport {\n  AppServiceEnvironmentResource,\n  AppServiceEnvironmentsListNextOptionalParams,\n  AppServiceEnvironmentsListOptionalParams,\n  AppServiceEnvironmentsListResponse,\n  AppServiceEnvironmentsListByResourceGroupNextOptionalParams,\n  AppServiceEnvironmentsListByResourceGroupOptionalParams,\n  AppServiceEnvironmentsListByResourceGroupResponse,\n  StampCapacity,\n  AppServiceEnvironmentsListCapacitiesNextOptionalParams,\n  AppServiceEnvironmentsListCapacitiesOptionalParams,\n  AppServiceEnvironmentsListCapacitiesResponse,\n  Site,\n  VirtualNetworkProfile,\n  AppServiceEnvironmentsChangeVnetNextOptionalParams,\n  AppServiceEnvironmentsChangeVnetOptionalParams,\n  AppServiceEnvironmentsChangeVnetResponse,\n  InboundEnvironmentEndpoint,\n  AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsNextOptionalParams,\n  AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsOptionalParams,\n  AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsResponse,\n  WorkerPoolResource,\n  AppServiceEnvironmentsListMultiRolePoolsNextOptionalParams,\n  AppServiceEnvironmentsListMultiRolePoolsOptionalParams,\n  AppServiceEnvironmentsListMultiRolePoolsResponse,\n  ResourceMetricDefinition,\n  AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsNextOptionalParams,\n  AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsOptionalParams,\n  AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsResponse,\n  AppServiceEnvironmentsListMultiRoleMetricDefinitionsNextOptionalParams,\n  AppServiceEnvironmentsListMultiRoleMetricDefinitionsOptionalParams,\n  AppServiceEnvironmentsListMultiRoleMetricDefinitionsResponse,\n  SkuInfo,\n  AppServiceEnvironmentsListMultiRolePoolSkusNextOptionalParams,\n  AppServiceEnvironmentsListMultiRolePoolSkusOptionalParams,\n  AppServiceEnvironmentsListMultiRolePoolSkusResponse,\n  Usage,\n  AppServiceEnvironmentsListMultiRoleUsagesNextOptionalParams,\n  AppServiceEnvironmentsListMultiRoleUsagesOptionalParams,\n  AppServiceEnvironmentsListMultiRoleUsagesResponse,\n  OutboundEnvironmentEndpoint,\n  AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsNextOptionalParams,\n  AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsOptionalParams,\n  AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsResponse,\n  RemotePrivateEndpointConnectionARMResource,\n  AppServiceEnvironmentsGetPrivateEndpointConnectionListNextOptionalParams,\n  AppServiceEnvironmentsGetPrivateEndpointConnectionListOptionalParams,\n  AppServiceEnvironmentsGetPrivateEndpointConnectionListResponse,\n  AppServiceEnvironmentsResumeNextOptionalParams,\n  AppServiceEnvironmentsResumeOptionalParams,\n  AppServiceEnvironmentsResumeResponse,\n  AppServicePlan,\n  AppServiceEnvironmentsListAppServicePlansNextOptionalParams,\n  AppServiceEnvironmentsListAppServicePlansOptionalParams,\n  AppServiceEnvironmentsListAppServicePlansResponse,\n  AppServiceEnvironmentsListWebAppsNextOptionalParams,\n  AppServiceEnvironmentsListWebAppsOptionalParams,\n  AppServiceEnvironmentsListWebAppsResponse,\n  AppServiceEnvironmentsSuspendNextOptionalParams,\n  AppServiceEnvironmentsSuspendOptionalParams,\n  AppServiceEnvironmentsSuspendResponse,\n  CsmUsageQuota,\n  AppServiceEnvironmentsListUsagesNextOptionalParams,\n  AppServiceEnvironmentsListUsagesOptionalParams,\n  AppServiceEnvironmentsListUsagesResponse,\n  AppServiceEnvironmentsListWorkerPoolsNextOptionalParams,\n  AppServiceEnvironmentsListWorkerPoolsOptionalParams,\n  AppServiceEnvironmentsListWorkerPoolsResponse,\n  AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsNextOptionalParams,\n  AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsOptionalParams,\n  AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsResponse,\n  AppServiceEnvironmentsListWebWorkerMetricDefinitionsNextOptionalParams,\n  AppServiceEnvironmentsListWebWorkerMetricDefinitionsOptionalParams,\n  AppServiceEnvironmentsListWebWorkerMetricDefinitionsResponse,\n  AppServiceEnvironmentsListWorkerPoolSkusNextOptionalParams,\n  AppServiceEnvironmentsListWorkerPoolSkusOptionalParams,\n  AppServiceEnvironmentsListWorkerPoolSkusResponse,\n  AppServiceEnvironmentsListWebWorkerUsagesNextOptionalParams,\n  AppServiceEnvironmentsListWebWorkerUsagesOptionalParams,\n  AppServiceEnvironmentsListWebWorkerUsagesResponse,\n  AppServiceEnvironmentsGetOptionalParams,\n  AppServiceEnvironmentsGetResponse,\n  AppServiceEnvironmentsCreateOrUpdateOptionalParams,\n  AppServiceEnvironmentsCreateOrUpdateResponse,\n  AppServiceEnvironmentsDeleteOptionalParams,\n  AppServiceEnvironmentPatchResource,\n  AppServiceEnvironmentsUpdateOptionalParams,\n  AppServiceEnvironmentsUpdateResponse,\n  AppServiceEnvironmentsGetVipInfoOptionalParams,\n  AppServiceEnvironmentsGetVipInfoResponse,\n  AppServiceEnvironmentsGetAseCustomDnsSuffixConfigurationOptionalParams,\n  AppServiceEnvironmentsGetAseCustomDnsSuffixConfigurationResponse,\n  CustomDnsSuffixConfiguration,\n  AppServiceEnvironmentsUpdateAseCustomDnsSuffixConfigurationOptionalParams,\n  AppServiceEnvironmentsUpdateAseCustomDnsSuffixConfigurationResponse,\n  AppServiceEnvironmentsDeleteAseCustomDnsSuffixConfigurationOptionalParams,\n  AppServiceEnvironmentsDeleteAseCustomDnsSuffixConfigurationResponse,\n  AppServiceEnvironmentsGetAseV3NetworkingConfigurationOptionalParams,\n  AppServiceEnvironmentsGetAseV3NetworkingConfigurationResponse,\n  AseV3NetworkingConfiguration,\n  AppServiceEnvironmentsUpdateAseNetworkingConfigurationOptionalParams,\n  AppServiceEnvironmentsUpdateAseNetworkingConfigurationResponse,\n  AppServiceEnvironmentsListDiagnosticsOptionalParams,\n  AppServiceEnvironmentsListDiagnosticsResponse,\n  AppServiceEnvironmentsGetDiagnosticsItemOptionalParams,\n  AppServiceEnvironmentsGetDiagnosticsItemResponse,\n  AppServiceEnvironmentsGetMultiRolePoolOptionalParams,\n  AppServiceEnvironmentsGetMultiRolePoolResponse,\n  AppServiceEnvironmentsCreateOrUpdateMultiRolePoolOptionalParams,\n  AppServiceEnvironmentsCreateOrUpdateMultiRolePoolResponse,\n  AppServiceEnvironmentsUpdateMultiRolePoolOptionalParams,\n  AppServiceEnvironmentsUpdateMultiRolePoolResponse,\n  AppServiceEnvironmentsTestUpgradeAvailableNotificationOptionalParams,\n  AppServiceEnvironmentsUpgradeOptionalParams,\n  AppServiceEnvironmentsListOperationsOptionalParams,\n  AppServiceEnvironmentsListOperationsResponse,\n  AppServiceEnvironmentsGetPrivateEndpointConnectionOptionalParams,\n  AppServiceEnvironmentsGetPrivateEndpointConnectionResponse,\n  AppServiceEnvironmentsApproveOrRejectPrivateEndpointConnectionOptionalParams,\n  AppServiceEnvironmentsApproveOrRejectPrivateEndpointConnectionResponse,\n  AppServiceEnvironmentsDeletePrivateEndpointConnectionOptionalParams,\n  AppServiceEnvironmentsDeletePrivateEndpointConnectionResponse,\n  AppServiceEnvironmentsGetPrivateLinkResourcesOptionalParams,\n  AppServiceEnvironmentsGetPrivateLinkResourcesResponse,\n  AppServiceEnvironmentsRebootOptionalParams,\n  AppServiceEnvironmentsGetWorkerPoolOptionalParams,\n  AppServiceEnvironmentsGetWorkerPoolResponse,\n  AppServiceEnvironmentsCreateOrUpdateWorkerPoolOptionalParams,\n  AppServiceEnvironmentsCreateOrUpdateWorkerPoolResponse,\n  AppServiceEnvironmentsUpdateWorkerPoolOptionalParams,\n  AppServiceEnvironmentsUpdateWorkerPoolResponse,\n  AppServiceEnvironmentsListNextResponse,\n  AppServiceEnvironmentsListByResourceGroupNextResponse,\n  AppServiceEnvironmentsListCapacitiesNextResponse,\n  AppServiceEnvironmentsChangeVnetNextResponse,\n  AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsNextResponse,\n  AppServiceEnvironmentsListMultiRolePoolsNextResponse,\n  AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsNextResponse,\n  AppServiceEnvironmentsListMultiRoleMetricDefinitionsNextResponse,\n  AppServiceEnvironmentsListMultiRolePoolSkusNextResponse,\n  AppServiceEnvironmentsListMultiRoleUsagesNextResponse,\n  AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsNextResponse,\n  AppServiceEnvironmentsGetPrivateEndpointConnectionListNextResponse,\n  AppServiceEnvironmentsResumeNextResponse,\n  AppServiceEnvironmentsListAppServicePlansNextResponse,\n  AppServiceEnvironmentsListWebAppsNextResponse,\n  AppServiceEnvironmentsSuspendNextResponse,\n  AppServiceEnvironmentsListUsagesNextResponse,\n  AppServiceEnvironmentsListWorkerPoolsNextResponse,\n  AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsNextResponse,\n  AppServiceEnvironmentsListWebWorkerMetricDefinitionsNextResponse,\n  AppServiceEnvironmentsListWorkerPoolSkusNextResponse,\n  AppServiceEnvironmentsListWebWorkerUsagesNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing AppServiceEnvironments operations. */\nexport class AppServiceEnvironmentsImpl implements AppServiceEnvironments {\n  private readonly client: WebSiteManagementClient;\n\n  /**\n   * Initialize a new instance of the class AppServiceEnvironments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: WebSiteManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Description for Get all App Service Environments for a subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: AppServiceEnvironmentsListOptionalParams,\n  ): PagedAsyncIterableIterator<AppServiceEnvironmentResource> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    options?: AppServiceEnvironmentsListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<AppServiceEnvironmentResource[]> {\n    let result: AppServiceEnvironmentsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: AppServiceEnvironmentsListOptionalParams,\n  ): AsyncIterableIterator<AppServiceEnvironmentResource> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get all App Service Environments in a resource group.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: AppServiceEnvironmentsListByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<AppServiceEnvironmentResource> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: AppServiceEnvironmentsListByResourceGroupOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<AppServiceEnvironmentResource[]> {\n    let result: AppServiceEnvironmentsListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: AppServiceEnvironmentsListByResourceGroupOptionalParams,\n  ): AsyncIterableIterator<AppServiceEnvironmentResource> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get the used, available, and total worker capacity an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  public listCapacities(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListCapacitiesOptionalParams,\n  ): PagedAsyncIterableIterator<StampCapacity> {\n    const iter = this.listCapacitiesPagingAll(resourceGroupName, name, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listCapacitiesPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listCapacitiesPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListCapacitiesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<StampCapacity[]> {\n    let result: AppServiceEnvironmentsListCapacitiesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listCapacities(resourceGroupName, name, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listCapacitiesNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listCapacitiesPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListCapacitiesOptionalParams,\n  ): AsyncIterableIterator<StampCapacity> {\n    for await (const page of this.listCapacitiesPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Move an App Service Environment to a different VNET.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param vnetInfo Details for the new virtual network.\n   * @param options The options parameters.\n   */\n  public beginListChangeVnetAndWait(\n    resourceGroupName: string,\n    name: string,\n    vnetInfo: VirtualNetworkProfile,\n    options?: AppServiceEnvironmentsChangeVnetOptionalParams,\n  ): PagedAsyncIterableIterator<Site> {\n    const iter = this.changeVnetPagingAll(\n      resourceGroupName,\n      name,\n      vnetInfo,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.changeVnetPagingPage(\n          resourceGroupName,\n          name,\n          vnetInfo,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *changeVnetPagingPage(\n    resourceGroupName: string,\n    name: string,\n    vnetInfo: VirtualNetworkProfile,\n    options?: AppServiceEnvironmentsChangeVnetOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Site[]> {\n    let result: AppServiceEnvironmentsChangeVnetResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      const poller = await this._changeVnet(\n        resourceGroupName,\n        name,\n        vnetInfo,\n        options,\n      );\n      result = await poller.pollUntilDone();\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._changeVnetNext(\n        resourceGroupName,\n        name,\n        vnetInfo,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *changeVnetPagingAll(\n    resourceGroupName: string,\n    name: string,\n    vnetInfo: VirtualNetworkProfile,\n    options?: AppServiceEnvironmentsChangeVnetOptionalParams,\n  ): AsyncIterableIterator<Site> {\n    for await (const page of this.changeVnetPagingPage(\n      resourceGroupName,\n      name,\n      vnetInfo,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get the network endpoints of all inbound dependencies of an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  public listInboundNetworkDependenciesEndpoints(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsOptionalParams,\n  ): PagedAsyncIterableIterator<InboundEnvironmentEndpoint> {\n    const iter = this.getInboundNetworkDependenciesEndpointsPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getInboundNetworkDependenciesEndpointsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getInboundNetworkDependenciesEndpointsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<InboundEnvironmentEndpoint[]> {\n    let result: AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getInboundNetworkDependenciesEndpoints(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getInboundNetworkDependenciesEndpointsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getInboundNetworkDependenciesEndpointsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsOptionalParams,\n  ): AsyncIterableIterator<InboundEnvironmentEndpoint> {\n    for await (const page of this.getInboundNetworkDependenciesEndpointsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get all multi-role pools.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  public listMultiRolePools(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListMultiRolePoolsOptionalParams,\n  ): PagedAsyncIterableIterator<WorkerPoolResource> {\n    const iter = this.listMultiRolePoolsPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listMultiRolePoolsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listMultiRolePoolsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListMultiRolePoolsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<WorkerPoolResource[]> {\n    let result: AppServiceEnvironmentsListMultiRolePoolsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listMultiRolePools(resourceGroupName, name, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listMultiRolePoolsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listMultiRolePoolsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListMultiRolePoolsOptionalParams,\n  ): AsyncIterableIterator<WorkerPoolResource> {\n    for await (const page of this.listMultiRolePoolsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get metric definitions for a specific instance of a multi-role pool of an App\n   * Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param instance Name of the instance in the multi-role pool.\n   * @param options The options parameters.\n   */\n  public listMultiRolePoolInstanceMetricDefinitions(\n    resourceGroupName: string,\n    name: string,\n    instance: string,\n    options?: AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsOptionalParams,\n  ): PagedAsyncIterableIterator<ResourceMetricDefinition> {\n    const iter = this.listMultiRolePoolInstanceMetricDefinitionsPagingAll(\n      resourceGroupName,\n      name,\n      instance,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listMultiRolePoolInstanceMetricDefinitionsPagingPage(\n          resourceGroupName,\n          name,\n          instance,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listMultiRolePoolInstanceMetricDefinitionsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    instance: string,\n    options?: AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ResourceMetricDefinition[]> {\n    let result: AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listMultiRolePoolInstanceMetricDefinitions(\n        resourceGroupName,\n        name,\n        instance,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listMultiRolePoolInstanceMetricDefinitionsNext(\n        resourceGroupName,\n        name,\n        instance,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listMultiRolePoolInstanceMetricDefinitionsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    instance: string,\n    options?: AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsOptionalParams,\n  ): AsyncIterableIterator<ResourceMetricDefinition> {\n    for await (const page of this.listMultiRolePoolInstanceMetricDefinitionsPagingPage(\n      resourceGroupName,\n      name,\n      instance,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get metric definitions for a multi-role pool of an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  public listMultiRoleMetricDefinitions(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListMultiRoleMetricDefinitionsOptionalParams,\n  ): PagedAsyncIterableIterator<ResourceMetricDefinition> {\n    const iter = this.listMultiRoleMetricDefinitionsPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listMultiRoleMetricDefinitionsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listMultiRoleMetricDefinitionsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListMultiRoleMetricDefinitionsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ResourceMetricDefinition[]> {\n    let result: AppServiceEnvironmentsListMultiRoleMetricDefinitionsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listMultiRoleMetricDefinitions(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listMultiRoleMetricDefinitionsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listMultiRoleMetricDefinitionsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListMultiRoleMetricDefinitionsOptionalParams,\n  ): AsyncIterableIterator<ResourceMetricDefinition> {\n    for await (const page of this.listMultiRoleMetricDefinitionsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get available SKUs for scaling a multi-role pool.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  public listMultiRolePoolSkus(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListMultiRolePoolSkusOptionalParams,\n  ): PagedAsyncIterableIterator<SkuInfo> {\n    const iter = this.listMultiRolePoolSkusPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listMultiRolePoolSkusPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listMultiRolePoolSkusPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListMultiRolePoolSkusOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<SkuInfo[]> {\n    let result: AppServiceEnvironmentsListMultiRolePoolSkusResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listMultiRolePoolSkus(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listMultiRolePoolSkusNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listMultiRolePoolSkusPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListMultiRolePoolSkusOptionalParams,\n  ): AsyncIterableIterator<SkuInfo> {\n    for await (const page of this.listMultiRolePoolSkusPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get usage metrics for a multi-role pool of an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  public listMultiRoleUsages(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListMultiRoleUsagesOptionalParams,\n  ): PagedAsyncIterableIterator<Usage> {\n    const iter = this.listMultiRoleUsagesPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listMultiRoleUsagesPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listMultiRoleUsagesPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListMultiRoleUsagesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Usage[]> {\n    let result: AppServiceEnvironmentsListMultiRoleUsagesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listMultiRoleUsages(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listMultiRoleUsagesNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listMultiRoleUsagesPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListMultiRoleUsagesOptionalParams,\n  ): AsyncIterableIterator<Usage> {\n    for await (const page of this.listMultiRoleUsagesPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get the network endpoints of all outbound dependencies of an App Service\n   * Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  public listOutboundNetworkDependenciesEndpoints(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsOptionalParams,\n  ): PagedAsyncIterableIterator<OutboundEnvironmentEndpoint> {\n    const iter = this.getOutboundNetworkDependenciesEndpointsPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getOutboundNetworkDependenciesEndpointsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getOutboundNetworkDependenciesEndpointsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<OutboundEnvironmentEndpoint[]> {\n    let result: AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getOutboundNetworkDependenciesEndpoints(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getOutboundNetworkDependenciesEndpointsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getOutboundNetworkDependenciesEndpointsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsOptionalParams,\n  ): AsyncIterableIterator<OutboundEnvironmentEndpoint> {\n    for await (const page of this.getOutboundNetworkDependenciesEndpointsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets the list of private endpoints associated with a hosting environment\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  public listPrivateEndpointConnectionList(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsGetPrivateEndpointConnectionListOptionalParams,\n  ): PagedAsyncIterableIterator<RemotePrivateEndpointConnectionARMResource> {\n    const iter = this.getPrivateEndpointConnectionListPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getPrivateEndpointConnectionListPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getPrivateEndpointConnectionListPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsGetPrivateEndpointConnectionListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<RemotePrivateEndpointConnectionARMResource[]> {\n    let result: AppServiceEnvironmentsGetPrivateEndpointConnectionListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getPrivateEndpointConnectionList(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getPrivateEndpointConnectionListNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getPrivateEndpointConnectionListPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsGetPrivateEndpointConnectionListOptionalParams,\n  ): AsyncIterableIterator<RemotePrivateEndpointConnectionARMResource> {\n    for await (const page of this.getPrivateEndpointConnectionListPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Resume an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  public beginListResumeAndWait(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsResumeOptionalParams,\n  ): PagedAsyncIterableIterator<Site> {\n    const iter = this.resumePagingAll(resourceGroupName, name, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.resumePagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *resumePagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsResumeOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Site[]> {\n    let result: AppServiceEnvironmentsResumeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      const poller = await this._resume(resourceGroupName, name, options);\n      result = await poller.pollUntilDone();\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._resumeNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *resumePagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsResumeOptionalParams,\n  ): AsyncIterableIterator<Site> {\n    for await (const page of this.resumePagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get all App Service plans in an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  public listAppServicePlans(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListAppServicePlansOptionalParams,\n  ): PagedAsyncIterableIterator<AppServicePlan> {\n    const iter = this.listAppServicePlansPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAppServicePlansPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listAppServicePlansPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListAppServicePlansOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<AppServicePlan[]> {\n    let result: AppServiceEnvironmentsListAppServicePlansResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAppServicePlans(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAppServicePlansNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAppServicePlansPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListAppServicePlansOptionalParams,\n  ): AsyncIterableIterator<AppServicePlan> {\n    for await (const page of this.listAppServicePlansPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get all apps in an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  public listWebApps(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListWebAppsOptionalParams,\n  ): PagedAsyncIterableIterator<Site> {\n    const iter = this.listWebAppsPagingAll(resourceGroupName, name, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listWebAppsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listWebAppsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListWebAppsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Site[]> {\n    let result: AppServiceEnvironmentsListWebAppsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listWebApps(resourceGroupName, name, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listWebAppsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listWebAppsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListWebAppsOptionalParams,\n  ): AsyncIterableIterator<Site> {\n    for await (const page of this.listWebAppsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Suspend an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  public beginListSuspendAndWait(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsSuspendOptionalParams,\n  ): PagedAsyncIterableIterator<Site> {\n    const iter = this.suspendPagingAll(resourceGroupName, name, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.suspendPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *suspendPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsSuspendOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Site[]> {\n    let result: AppServiceEnvironmentsSuspendResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      const poller = await this._suspend(resourceGroupName, name, options);\n      result = await poller.pollUntilDone();\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._suspendNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *suspendPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsSuspendOptionalParams,\n  ): AsyncIterableIterator<Site> {\n    for await (const page of this.suspendPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get global usage metrics of an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  public listUsages(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListUsagesOptionalParams,\n  ): PagedAsyncIterableIterator<CsmUsageQuota> {\n    const iter = this.listUsagesPagingAll(resourceGroupName, name, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listUsagesPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listUsagesPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListUsagesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<CsmUsageQuota[]> {\n    let result: AppServiceEnvironmentsListUsagesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listUsages(resourceGroupName, name, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listUsagesNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listUsagesPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListUsagesOptionalParams,\n  ): AsyncIterableIterator<CsmUsageQuota> {\n    for await (const page of this.listUsagesPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get all worker pools of an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  public listWorkerPools(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListWorkerPoolsOptionalParams,\n  ): PagedAsyncIterableIterator<WorkerPoolResource> {\n    const iter = this.listWorkerPoolsPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listWorkerPoolsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listWorkerPoolsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListWorkerPoolsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<WorkerPoolResource[]> {\n    let result: AppServiceEnvironmentsListWorkerPoolsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listWorkerPools(resourceGroupName, name, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listWorkerPoolsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listWorkerPoolsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListWorkerPoolsOptionalParams,\n  ): AsyncIterableIterator<WorkerPoolResource> {\n    for await (const page of this.listWorkerPoolsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get metric definitions for a specific instance of a worker pool of an App Service\n   * Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param workerPoolName Name of the worker pool.\n   * @param instance Name of the instance in the worker pool.\n   * @param options The options parameters.\n   */\n  public listWorkerPoolInstanceMetricDefinitions(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    instance: string,\n    options?: AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsOptionalParams,\n  ): PagedAsyncIterableIterator<ResourceMetricDefinition> {\n    const iter = this.listWorkerPoolInstanceMetricDefinitionsPagingAll(\n      resourceGroupName,\n      name,\n      workerPoolName,\n      instance,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listWorkerPoolInstanceMetricDefinitionsPagingPage(\n          resourceGroupName,\n          name,\n          workerPoolName,\n          instance,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listWorkerPoolInstanceMetricDefinitionsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    instance: string,\n    options?: AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ResourceMetricDefinition[]> {\n    let result: AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listWorkerPoolInstanceMetricDefinitions(\n        resourceGroupName,\n        name,\n        workerPoolName,\n        instance,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listWorkerPoolInstanceMetricDefinitionsNext(\n        resourceGroupName,\n        name,\n        workerPoolName,\n        instance,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listWorkerPoolInstanceMetricDefinitionsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    instance: string,\n    options?: AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsOptionalParams,\n  ): AsyncIterableIterator<ResourceMetricDefinition> {\n    for await (const page of this.listWorkerPoolInstanceMetricDefinitionsPagingPage(\n      resourceGroupName,\n      name,\n      workerPoolName,\n      instance,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get metric definitions for a worker pool of an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param workerPoolName Name of the worker pool.\n   * @param options The options parameters.\n   */\n  public listWebWorkerMetricDefinitions(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    options?: AppServiceEnvironmentsListWebWorkerMetricDefinitionsOptionalParams,\n  ): PagedAsyncIterableIterator<ResourceMetricDefinition> {\n    const iter = this.listWebWorkerMetricDefinitionsPagingAll(\n      resourceGroupName,\n      name,\n      workerPoolName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listWebWorkerMetricDefinitionsPagingPage(\n          resourceGroupName,\n          name,\n          workerPoolName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listWebWorkerMetricDefinitionsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    options?: AppServiceEnvironmentsListWebWorkerMetricDefinitionsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ResourceMetricDefinition[]> {\n    let result: AppServiceEnvironmentsListWebWorkerMetricDefinitionsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listWebWorkerMetricDefinitions(\n        resourceGroupName,\n        name,\n        workerPoolName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listWebWorkerMetricDefinitionsNext(\n        resourceGroupName,\n        name,\n        workerPoolName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listWebWorkerMetricDefinitionsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    options?: AppServiceEnvironmentsListWebWorkerMetricDefinitionsOptionalParams,\n  ): AsyncIterableIterator<ResourceMetricDefinition> {\n    for await (const page of this.listWebWorkerMetricDefinitionsPagingPage(\n      resourceGroupName,\n      name,\n      workerPoolName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get available SKUs for scaling a worker pool.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param workerPoolName Name of the worker pool.\n   * @param options The options parameters.\n   */\n  public listWorkerPoolSkus(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    options?: AppServiceEnvironmentsListWorkerPoolSkusOptionalParams,\n  ): PagedAsyncIterableIterator<SkuInfo> {\n    const iter = this.listWorkerPoolSkusPagingAll(\n      resourceGroupName,\n      name,\n      workerPoolName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listWorkerPoolSkusPagingPage(\n          resourceGroupName,\n          name,\n          workerPoolName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listWorkerPoolSkusPagingPage(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    options?: AppServiceEnvironmentsListWorkerPoolSkusOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<SkuInfo[]> {\n    let result: AppServiceEnvironmentsListWorkerPoolSkusResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listWorkerPoolSkus(\n        resourceGroupName,\n        name,\n        workerPoolName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listWorkerPoolSkusNext(\n        resourceGroupName,\n        name,\n        workerPoolName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listWorkerPoolSkusPagingAll(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    options?: AppServiceEnvironmentsListWorkerPoolSkusOptionalParams,\n  ): AsyncIterableIterator<SkuInfo> {\n    for await (const page of this.listWorkerPoolSkusPagingPage(\n      resourceGroupName,\n      name,\n      workerPoolName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get usage metrics for a worker pool of an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param workerPoolName Name of the worker pool.\n   * @param options The options parameters.\n   */\n  public listWebWorkerUsages(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    options?: AppServiceEnvironmentsListWebWorkerUsagesOptionalParams,\n  ): PagedAsyncIterableIterator<Usage> {\n    const iter = this.listWebWorkerUsagesPagingAll(\n      resourceGroupName,\n      name,\n      workerPoolName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listWebWorkerUsagesPagingPage(\n          resourceGroupName,\n          name,\n          workerPoolName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listWebWorkerUsagesPagingPage(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    options?: AppServiceEnvironmentsListWebWorkerUsagesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<Usage[]> {\n    let result: AppServiceEnvironmentsListWebWorkerUsagesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listWebWorkerUsages(\n        resourceGroupName,\n        name,\n        workerPoolName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listWebWorkerUsagesNext(\n        resourceGroupName,\n        name,\n        workerPoolName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listWebWorkerUsagesPagingAll(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    options?: AppServiceEnvironmentsListWebWorkerUsagesOptionalParams,\n  ): AsyncIterableIterator<Usage> {\n    for await (const page of this.listWebWorkerUsagesPagingPage(\n      resourceGroupName,\n      name,\n      workerPoolName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Get all App Service Environments for a subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: AppServiceEnvironmentsListOptionalParams,\n  ): Promise<AppServiceEnvironmentsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Description for Get all App Service Environments in a resource group.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: AppServiceEnvironmentsListByResourceGroupOptionalParams,\n  ): Promise<AppServiceEnvironmentsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get the properties of an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsGetOptionalParams,\n  ): Promise<AppServiceEnvironmentsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Create or update an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param hostingEnvironmentEnvelope Configuration details of the App Service Environment.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    name: string,\n    hostingEnvironmentEnvelope: AppServiceEnvironmentResource,\n    options?: AppServiceEnvironmentsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<AppServiceEnvironmentsCreateOrUpdateResponse>,\n      AppServiceEnvironmentsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<AppServiceEnvironmentsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, hostingEnvironmentEnvelope, options },\n      spec: createOrUpdateOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      AppServiceEnvironmentsCreateOrUpdateResponse,\n      OperationState<AppServiceEnvironmentsCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Create or update an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param hostingEnvironmentEnvelope Configuration details of the App Service Environment.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    name: string,\n    hostingEnvironmentEnvelope: AppServiceEnvironmentResource,\n    options?: AppServiceEnvironmentsCreateOrUpdateOptionalParams,\n  ): Promise<AppServiceEnvironmentsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      name,\n      hostingEnvironmentEnvelope,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Delete an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, options },\n      spec: deleteOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Delete an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsDeleteOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginDelete(resourceGroupName, name, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Create or update an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param hostingEnvironmentEnvelope Configuration details of the App Service Environment.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    name: string,\n    hostingEnvironmentEnvelope: AppServiceEnvironmentPatchResource,\n    options?: AppServiceEnvironmentsUpdateOptionalParams,\n  ): Promise<AppServiceEnvironmentsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, hostingEnvironmentEnvelope, options },\n      updateOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get the used, available, and total worker capacity an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  private _listCapacities(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListCapacitiesOptionalParams,\n  ): Promise<AppServiceEnvironmentsListCapacitiesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listCapacitiesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get IP addresses assigned to an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  getVipInfo(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsGetVipInfoOptionalParams,\n  ): Promise<AppServiceEnvironmentsGetVipInfoResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getVipInfoOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Move an App Service Environment to a different VNET.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param vnetInfo Details for the new virtual network.\n   * @param options The options parameters.\n   */\n  private async _changeVnet(\n    resourceGroupName: string,\n    name: string,\n    vnetInfo: VirtualNetworkProfile,\n    options?: AppServiceEnvironmentsChangeVnetOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<AppServiceEnvironmentsChangeVnetResponse>,\n      AppServiceEnvironmentsChangeVnetResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<AppServiceEnvironmentsChangeVnetResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, vnetInfo, options },\n      spec: changeVnetOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      AppServiceEnvironmentsChangeVnetResponse,\n      OperationState<AppServiceEnvironmentsChangeVnetResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Get Custom Dns Suffix configuration of an App Service Environment\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  getAseCustomDnsSuffixConfiguration(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsGetAseCustomDnsSuffixConfigurationOptionalParams,\n  ): Promise<AppServiceEnvironmentsGetAseCustomDnsSuffixConfigurationResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getAseCustomDnsSuffixConfigurationOperationSpec,\n    );\n  }\n\n  /**\n   * Update Custom Dns Suffix configuration of an App Service Environment\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param customDnsSuffixConfiguration Full view of the custom domain suffix configuration for ASEv3.\n   * @param options The options parameters.\n   */\n  updateAseCustomDnsSuffixConfiguration(\n    resourceGroupName: string,\n    name: string,\n    customDnsSuffixConfiguration: CustomDnsSuffixConfiguration,\n    options?: AppServiceEnvironmentsUpdateAseCustomDnsSuffixConfigurationOptionalParams,\n  ): Promise<AppServiceEnvironmentsUpdateAseCustomDnsSuffixConfigurationResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, customDnsSuffixConfiguration, options },\n      updateAseCustomDnsSuffixConfigurationOperationSpec,\n    );\n  }\n\n  /**\n   * Delete Custom Dns Suffix configuration of an App Service Environment\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  deleteAseCustomDnsSuffixConfiguration(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsDeleteAseCustomDnsSuffixConfigurationOptionalParams,\n  ): Promise<AppServiceEnvironmentsDeleteAseCustomDnsSuffixConfigurationResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      deleteAseCustomDnsSuffixConfigurationOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get networking configuration of an App Service Environment\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  getAseV3NetworkingConfiguration(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsGetAseV3NetworkingConfigurationOptionalParams,\n  ): Promise<AppServiceEnvironmentsGetAseV3NetworkingConfigurationResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getAseV3NetworkingConfigurationOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Update networking configuration of an App Service Environment\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param aseNetworkingConfiguration Full view of networking configuration for an ASE.\n   * @param options The options parameters.\n   */\n  updateAseNetworkingConfiguration(\n    resourceGroupName: string,\n    name: string,\n    aseNetworkingConfiguration: AseV3NetworkingConfiguration,\n    options?: AppServiceEnvironmentsUpdateAseNetworkingConfigurationOptionalParams,\n  ): Promise<AppServiceEnvironmentsUpdateAseNetworkingConfigurationResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, aseNetworkingConfiguration, options },\n      updateAseNetworkingConfigurationOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get diagnostic information for an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  listDiagnostics(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListDiagnosticsOptionalParams,\n  ): Promise<AppServiceEnvironmentsListDiagnosticsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listDiagnosticsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get a diagnostics item for an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param diagnosticsName Name of the diagnostics item.\n   * @param options The options parameters.\n   */\n  getDiagnosticsItem(\n    resourceGroupName: string,\n    name: string,\n    diagnosticsName: string,\n    options?: AppServiceEnvironmentsGetDiagnosticsItemOptionalParams,\n  ): Promise<AppServiceEnvironmentsGetDiagnosticsItemResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, diagnosticsName, options },\n      getDiagnosticsItemOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get the network endpoints of all inbound dependencies of an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  private _getInboundNetworkDependenciesEndpoints(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsOptionalParams,\n  ): Promise<AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getInboundNetworkDependenciesEndpointsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get all multi-role pools.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  private _listMultiRolePools(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListMultiRolePoolsOptionalParams,\n  ): Promise<AppServiceEnvironmentsListMultiRolePoolsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listMultiRolePoolsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get properties of a multi-role pool.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  getMultiRolePool(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsGetMultiRolePoolOptionalParams,\n  ): Promise<AppServiceEnvironmentsGetMultiRolePoolResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getMultiRolePoolOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Create or update a multi-role pool.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param multiRolePoolEnvelope Properties of the multi-role pool.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateMultiRolePool(\n    resourceGroupName: string,\n    name: string,\n    multiRolePoolEnvelope: WorkerPoolResource,\n    options?: AppServiceEnvironmentsCreateOrUpdateMultiRolePoolOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<AppServiceEnvironmentsCreateOrUpdateMultiRolePoolResponse>,\n      AppServiceEnvironmentsCreateOrUpdateMultiRolePoolResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<AppServiceEnvironmentsCreateOrUpdateMultiRolePoolResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, multiRolePoolEnvelope, options },\n      spec: createOrUpdateMultiRolePoolOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      AppServiceEnvironmentsCreateOrUpdateMultiRolePoolResponse,\n      OperationState<AppServiceEnvironmentsCreateOrUpdateMultiRolePoolResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Create or update a multi-role pool.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param multiRolePoolEnvelope Properties of the multi-role pool.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateMultiRolePoolAndWait(\n    resourceGroupName: string,\n    name: string,\n    multiRolePoolEnvelope: WorkerPoolResource,\n    options?: AppServiceEnvironmentsCreateOrUpdateMultiRolePoolOptionalParams,\n  ): Promise<AppServiceEnvironmentsCreateOrUpdateMultiRolePoolResponse> {\n    const poller = await this.beginCreateOrUpdateMultiRolePool(\n      resourceGroupName,\n      name,\n      multiRolePoolEnvelope,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Create or update a multi-role pool.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param multiRolePoolEnvelope Properties of the multi-role pool.\n   * @param options The options parameters.\n   */\n  updateMultiRolePool(\n    resourceGroupName: string,\n    name: string,\n    multiRolePoolEnvelope: WorkerPoolResource,\n    options?: AppServiceEnvironmentsUpdateMultiRolePoolOptionalParams,\n  ): Promise<AppServiceEnvironmentsUpdateMultiRolePoolResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, multiRolePoolEnvelope, options },\n      updateMultiRolePoolOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get metric definitions for a specific instance of a multi-role pool of an App\n   * Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param instance Name of the instance in the multi-role pool.\n   * @param options The options parameters.\n   */\n  private _listMultiRolePoolInstanceMetricDefinitions(\n    resourceGroupName: string,\n    name: string,\n    instance: string,\n    options?: AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsOptionalParams,\n  ): Promise<AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, instance, options },\n      listMultiRolePoolInstanceMetricDefinitionsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get metric definitions for a multi-role pool of an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  private _listMultiRoleMetricDefinitions(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListMultiRoleMetricDefinitionsOptionalParams,\n  ): Promise<AppServiceEnvironmentsListMultiRoleMetricDefinitionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listMultiRoleMetricDefinitionsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get available SKUs for scaling a multi-role pool.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  private _listMultiRolePoolSkus(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListMultiRolePoolSkusOptionalParams,\n  ): Promise<AppServiceEnvironmentsListMultiRolePoolSkusResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listMultiRolePoolSkusOperationSpec,\n    );\n  }\n\n  /**\n   * Send a test notification that an upgrade is available for this App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  testUpgradeAvailableNotification(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsTestUpgradeAvailableNotificationOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      testUpgradeAvailableNotificationOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Initiate an upgrade of an App Service Environment if one is available.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  async beginUpgrade(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsUpgradeOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, options },\n      spec: upgradeOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Initiate an upgrade of an App Service Environment if one is available.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  async beginUpgradeAndWait(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsUpgradeOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginUpgrade(resourceGroupName, name, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Get usage metrics for a multi-role pool of an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  private _listMultiRoleUsages(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListMultiRoleUsagesOptionalParams,\n  ): Promise<AppServiceEnvironmentsListMultiRoleUsagesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listMultiRoleUsagesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for List all currently running operations on the App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  listOperations(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListOperationsOptionalParams,\n  ): Promise<AppServiceEnvironmentsListOperationsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listOperationsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get the network endpoints of all outbound dependencies of an App Service\n   * Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  private _getOutboundNetworkDependenciesEndpoints(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsOptionalParams,\n  ): Promise<AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getOutboundNetworkDependenciesEndpointsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the list of private endpoints associated with a hosting environment\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  private _getPrivateEndpointConnectionList(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsGetPrivateEndpointConnectionListOptionalParams,\n  ): Promise<AppServiceEnvironmentsGetPrivateEndpointConnectionListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getPrivateEndpointConnectionListOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param privateEndpointConnectionName Name of the private endpoint connection.\n   * @param options The options parameters.\n   */\n  getPrivateEndpointConnection(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    options?: AppServiceEnvironmentsGetPrivateEndpointConnectionOptionalParams,\n  ): Promise<AppServiceEnvironmentsGetPrivateEndpointConnectionResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, privateEndpointConnectionName, options },\n      getPrivateEndpointConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Approves or rejects a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param privateEndpointConnectionName\n   * @param privateEndpointWrapper Remote Private Endpoint Connection ARM resource.\n   * @param options The options parameters.\n   */\n  async beginApproveOrRejectPrivateEndpointConnection(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    privateEndpointWrapper: RemotePrivateEndpointConnectionARMResource,\n    options?: AppServiceEnvironmentsApproveOrRejectPrivateEndpointConnectionOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<AppServiceEnvironmentsApproveOrRejectPrivateEndpointConnectionResponse>,\n      AppServiceEnvironmentsApproveOrRejectPrivateEndpointConnectionResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<AppServiceEnvironmentsApproveOrRejectPrivateEndpointConnectionResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        name,\n        privateEndpointConnectionName,\n        privateEndpointWrapper,\n        options,\n      },\n      spec: approveOrRejectPrivateEndpointConnectionOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      AppServiceEnvironmentsApproveOrRejectPrivateEndpointConnectionResponse,\n      OperationState<AppServiceEnvironmentsApproveOrRejectPrivateEndpointConnectionResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Approves or rejects a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param privateEndpointConnectionName\n   * @param privateEndpointWrapper Remote Private Endpoint Connection ARM resource.\n   * @param options The options parameters.\n   */\n  async beginApproveOrRejectPrivateEndpointConnectionAndWait(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    privateEndpointWrapper: RemotePrivateEndpointConnectionARMResource,\n    options?: AppServiceEnvironmentsApproveOrRejectPrivateEndpointConnectionOptionalParams,\n  ): Promise<AppServiceEnvironmentsApproveOrRejectPrivateEndpointConnectionResponse> {\n    const poller = await this.beginApproveOrRejectPrivateEndpointConnection(\n      resourceGroupName,\n      name,\n      privateEndpointConnectionName,\n      privateEndpointWrapper,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Deletes a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param privateEndpointConnectionName\n   * @param options The options parameters.\n   */\n  async beginDeletePrivateEndpointConnection(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    options?: AppServiceEnvironmentsDeletePrivateEndpointConnectionOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<AppServiceEnvironmentsDeletePrivateEndpointConnectionResponse>,\n      AppServiceEnvironmentsDeletePrivateEndpointConnectionResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<AppServiceEnvironmentsDeletePrivateEndpointConnectionResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, privateEndpointConnectionName, options },\n      spec: deletePrivateEndpointConnectionOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      AppServiceEnvironmentsDeletePrivateEndpointConnectionResponse,\n      OperationState<AppServiceEnvironmentsDeletePrivateEndpointConnectionResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Deletes a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param privateEndpointConnectionName\n   * @param options The options parameters.\n   */\n  async beginDeletePrivateEndpointConnectionAndWait(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    options?: AppServiceEnvironmentsDeletePrivateEndpointConnectionOptionalParams,\n  ): Promise<AppServiceEnvironmentsDeletePrivateEndpointConnectionResponse> {\n    const poller = await this.beginDeletePrivateEndpointConnection(\n      resourceGroupName,\n      name,\n      privateEndpointConnectionName,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Gets the private link resources\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  getPrivateLinkResources(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsGetPrivateLinkResourcesOptionalParams,\n  ): Promise<AppServiceEnvironmentsGetPrivateLinkResourcesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getPrivateLinkResourcesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Reboot all machines in an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  reboot(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsRebootOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      rebootOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Resume an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  private async _resume(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsResumeOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<AppServiceEnvironmentsResumeResponse>,\n      AppServiceEnvironmentsResumeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<AppServiceEnvironmentsResumeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, options },\n      spec: resumeOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      AppServiceEnvironmentsResumeResponse,\n      OperationState<AppServiceEnvironmentsResumeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Get all App Service plans in an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  private _listAppServicePlans(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListAppServicePlansOptionalParams,\n  ): Promise<AppServiceEnvironmentsListAppServicePlansResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listAppServicePlansOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get all apps in an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  private _listWebApps(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListWebAppsOptionalParams,\n  ): Promise<AppServiceEnvironmentsListWebAppsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listWebAppsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Suspend an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  private async _suspend(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsSuspendOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<AppServiceEnvironmentsSuspendResponse>,\n      AppServiceEnvironmentsSuspendResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<AppServiceEnvironmentsSuspendResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, options },\n      spec: suspendOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      AppServiceEnvironmentsSuspendResponse,\n      OperationState<AppServiceEnvironmentsSuspendResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Get global usage metrics of an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  private _listUsages(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListUsagesOptionalParams,\n  ): Promise<AppServiceEnvironmentsListUsagesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listUsagesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get all worker pools of an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param options The options parameters.\n   */\n  private _listWorkerPools(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServiceEnvironmentsListWorkerPoolsOptionalParams,\n  ): Promise<AppServiceEnvironmentsListWorkerPoolsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listWorkerPoolsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get properties of a worker pool.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param workerPoolName Name of the worker pool.\n   * @param options The options parameters.\n   */\n  getWorkerPool(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    options?: AppServiceEnvironmentsGetWorkerPoolOptionalParams,\n  ): Promise<AppServiceEnvironmentsGetWorkerPoolResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, workerPoolName, options },\n      getWorkerPoolOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Create or update a worker pool.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param workerPoolName Name of the worker pool.\n   * @param workerPoolEnvelope Properties of the worker pool.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateWorkerPool(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    workerPoolEnvelope: WorkerPoolResource,\n    options?: AppServiceEnvironmentsCreateOrUpdateWorkerPoolOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<AppServiceEnvironmentsCreateOrUpdateWorkerPoolResponse>,\n      AppServiceEnvironmentsCreateOrUpdateWorkerPoolResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<AppServiceEnvironmentsCreateOrUpdateWorkerPoolResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        name,\n        workerPoolName,\n        workerPoolEnvelope,\n        options,\n      },\n      spec: createOrUpdateWorkerPoolOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      AppServiceEnvironmentsCreateOrUpdateWorkerPoolResponse,\n      OperationState<AppServiceEnvironmentsCreateOrUpdateWorkerPoolResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Create or update a worker pool.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param workerPoolName Name of the worker pool.\n   * @param workerPoolEnvelope Properties of the worker pool.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateWorkerPoolAndWait(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    workerPoolEnvelope: WorkerPoolResource,\n    options?: AppServiceEnvironmentsCreateOrUpdateWorkerPoolOptionalParams,\n  ): Promise<AppServiceEnvironmentsCreateOrUpdateWorkerPoolResponse> {\n    const poller = await this.beginCreateOrUpdateWorkerPool(\n      resourceGroupName,\n      name,\n      workerPoolName,\n      workerPoolEnvelope,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Create or update a worker pool.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param workerPoolName Name of the worker pool.\n   * @param workerPoolEnvelope Properties of the worker pool.\n   * @param options The options parameters.\n   */\n  updateWorkerPool(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    workerPoolEnvelope: WorkerPoolResource,\n    options?: AppServiceEnvironmentsUpdateWorkerPoolOptionalParams,\n  ): Promise<AppServiceEnvironmentsUpdateWorkerPoolResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, workerPoolName, workerPoolEnvelope, options },\n      updateWorkerPoolOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get metric definitions for a specific instance of a worker pool of an App Service\n   * Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param workerPoolName Name of the worker pool.\n   * @param instance Name of the instance in the worker pool.\n   * @param options The options parameters.\n   */\n  private _listWorkerPoolInstanceMetricDefinitions(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    instance: string,\n    options?: AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsOptionalParams,\n  ): Promise<AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, workerPoolName, instance, options },\n      listWorkerPoolInstanceMetricDefinitionsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get metric definitions for a worker pool of an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param workerPoolName Name of the worker pool.\n   * @param options The options parameters.\n   */\n  private _listWebWorkerMetricDefinitions(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    options?: AppServiceEnvironmentsListWebWorkerMetricDefinitionsOptionalParams,\n  ): Promise<AppServiceEnvironmentsListWebWorkerMetricDefinitionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, workerPoolName, options },\n      listWebWorkerMetricDefinitionsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get available SKUs for scaling a worker pool.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param workerPoolName Name of the worker pool.\n   * @param options The options parameters.\n   */\n  private _listWorkerPoolSkus(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    options?: AppServiceEnvironmentsListWorkerPoolSkusOptionalParams,\n  ): Promise<AppServiceEnvironmentsListWorkerPoolSkusResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, workerPoolName, options },\n      listWorkerPoolSkusOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get usage metrics for a worker pool of an App Service Environment.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param workerPoolName Name of the worker pool.\n   * @param options The options parameters.\n   */\n  private _listWebWorkerUsages(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    options?: AppServiceEnvironmentsListWebWorkerUsagesOptionalParams,\n  ): Promise<AppServiceEnvironmentsListWebWorkerUsagesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, workerPoolName, options },\n      listWebWorkerUsagesOperationSpec,\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: AppServiceEnvironmentsListNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: AppServiceEnvironmentsListByResourceGroupNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListCapacitiesNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param nextLink The nextLink from the previous successful call to the ListCapacities method.\n   * @param options The options parameters.\n   */\n  private _listCapacitiesNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: AppServiceEnvironmentsListCapacitiesNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsListCapacitiesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listCapacitiesNextOperationSpec,\n    );\n  }\n\n  /**\n   * ChangeVnetNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param vnetInfo Details for the new virtual network.\n   * @param nextLink The nextLink from the previous successful call to the ChangeVnet method.\n   * @param options The options parameters.\n   */\n  private _changeVnetNext(\n    resourceGroupName: string,\n    name: string,\n    vnetInfo: VirtualNetworkProfile,\n    nextLink: string,\n    options?: AppServiceEnvironmentsChangeVnetNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsChangeVnetNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, vnetInfo, nextLink, options },\n      changeVnetNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetInboundNetworkDependenciesEndpointsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 GetInboundNetworkDependenciesEndpoints method.\n   * @param options The options parameters.\n   */\n  private _getInboundNetworkDependenciesEndpointsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      getInboundNetworkDependenciesEndpointsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListMultiRolePoolsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param nextLink The nextLink from the previous successful call to the ListMultiRolePools method.\n   * @param options The options parameters.\n   */\n  private _listMultiRolePoolsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: AppServiceEnvironmentsListMultiRolePoolsNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsListMultiRolePoolsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listMultiRolePoolsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListMultiRolePoolInstanceMetricDefinitionsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param instance Name of the instance in the multi-role pool.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListMultiRolePoolInstanceMetricDefinitions method.\n   * @param options The options parameters.\n   */\n  private _listMultiRolePoolInstanceMetricDefinitionsNext(\n    resourceGroupName: string,\n    name: string,\n    instance: string,\n    nextLink: string,\n    options?: AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, instance, nextLink, options },\n      listMultiRolePoolInstanceMetricDefinitionsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListMultiRoleMetricDefinitionsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param nextLink The nextLink from the previous successful call to the ListMultiRoleMetricDefinitions\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listMultiRoleMetricDefinitionsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: AppServiceEnvironmentsListMultiRoleMetricDefinitionsNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsListMultiRoleMetricDefinitionsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listMultiRoleMetricDefinitionsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListMultiRolePoolSkusNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param nextLink The nextLink from the previous successful call to the ListMultiRolePoolSkus method.\n   * @param options The options parameters.\n   */\n  private _listMultiRolePoolSkusNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: AppServiceEnvironmentsListMultiRolePoolSkusNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsListMultiRolePoolSkusNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listMultiRolePoolSkusNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListMultiRoleUsagesNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param nextLink The nextLink from the previous successful call to the ListMultiRoleUsages method.\n   * @param options The options parameters.\n   */\n  private _listMultiRoleUsagesNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: AppServiceEnvironmentsListMultiRoleUsagesNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsListMultiRoleUsagesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listMultiRoleUsagesNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetOutboundNetworkDependenciesEndpointsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 GetOutboundNetworkDependenciesEndpoints method.\n   * @param options The options parameters.\n   */\n  private _getOutboundNetworkDependenciesEndpointsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      getOutboundNetworkDependenciesEndpointsNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetPrivateEndpointConnectionListNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 GetPrivateEndpointConnectionList method.\n   * @param options The options parameters.\n   */\n  private _getPrivateEndpointConnectionListNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: AppServiceEnvironmentsGetPrivateEndpointConnectionListNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsGetPrivateEndpointConnectionListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      getPrivateEndpointConnectionListNextOperationSpec,\n    );\n  }\n\n  /**\n   * ResumeNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param nextLink The nextLink from the previous successful call to the Resume method.\n   * @param options The options parameters.\n   */\n  private _resumeNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: AppServiceEnvironmentsResumeNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsResumeNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      resumeNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListAppServicePlansNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param nextLink The nextLink from the previous successful call to the ListAppServicePlans method.\n   * @param options The options parameters.\n   */\n  private _listAppServicePlansNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: AppServiceEnvironmentsListAppServicePlansNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsListAppServicePlansNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listAppServicePlansNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListWebAppsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param nextLink The nextLink from the previous successful call to the ListWebApps method.\n   * @param options The options parameters.\n   */\n  private _listWebAppsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: AppServiceEnvironmentsListWebAppsNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsListWebAppsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listWebAppsNextOperationSpec,\n    );\n  }\n\n  /**\n   * SuspendNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param nextLink The nextLink from the previous successful call to the Suspend method.\n   * @param options The options parameters.\n   */\n  private _suspendNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: AppServiceEnvironmentsSuspendNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsSuspendNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      suspendNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListUsagesNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param nextLink The nextLink from the previous successful call to the ListUsages method.\n   * @param options The options parameters.\n   */\n  private _listUsagesNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: AppServiceEnvironmentsListUsagesNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsListUsagesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listUsagesNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListWorkerPoolsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param nextLink The nextLink from the previous successful call to the ListWorkerPools method.\n   * @param options The options parameters.\n   */\n  private _listWorkerPoolsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: AppServiceEnvironmentsListWorkerPoolsNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsListWorkerPoolsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listWorkerPoolsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListWorkerPoolInstanceMetricDefinitionsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param workerPoolName Name of the worker pool.\n   * @param instance Name of the instance in the worker pool.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListWorkerPoolInstanceMetricDefinitions method.\n   * @param options The options parameters.\n   */\n  private _listWorkerPoolInstanceMetricDefinitionsNext(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    instance: string,\n    nextLink: string,\n    options?: AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, workerPoolName, instance, nextLink, options },\n      listWorkerPoolInstanceMetricDefinitionsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListWebWorkerMetricDefinitionsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param workerPoolName Name of the worker pool.\n   * @param nextLink The nextLink from the previous successful call to the ListWebWorkerMetricDefinitions\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listWebWorkerMetricDefinitionsNext(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    nextLink: string,\n    options?: AppServiceEnvironmentsListWebWorkerMetricDefinitionsNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsListWebWorkerMetricDefinitionsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, workerPoolName, nextLink, options },\n      listWebWorkerMetricDefinitionsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListWorkerPoolSkusNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param workerPoolName Name of the worker pool.\n   * @param nextLink The nextLink from the previous successful call to the ListWorkerPoolSkus method.\n   * @param options The options parameters.\n   */\n  private _listWorkerPoolSkusNext(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    nextLink: string,\n    options?: AppServiceEnvironmentsListWorkerPoolSkusNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsListWorkerPoolSkusNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, workerPoolName, nextLink, options },\n      listWorkerPoolSkusNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListWebWorkerUsagesNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service Environment.\n   * @param workerPoolName Name of the worker pool.\n   * @param nextLink The nextLink from the previous successful call to the ListWebWorkerUsages method.\n   * @param options The options parameters.\n   */\n  private _listWebWorkerUsagesNext(\n    resourceGroupName: string,\n    name: string,\n    workerPoolName: string,\n    nextLink: string,\n    options?: AppServiceEnvironmentsListWebWorkerUsagesNextOptionalParams,\n  ): Promise<AppServiceEnvironmentsListWebWorkerUsagesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, workerPoolName, nextLink, options },\n      listWebWorkerUsagesNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Web/hostingEnvironments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AppServiceEnvironmentCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AppServiceEnvironmentCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AppServiceEnvironmentResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AppServiceEnvironmentResource,\n    },\n    201: {\n      bodyMapper: Mappers.AppServiceEnvironmentResource,\n    },\n    202: {\n      bodyMapper: Mappers.AppServiceEnvironmentResource,\n    },\n    204: {\n      bodyMapper: Mappers.AppServiceEnvironmentResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.hostingEnvironmentEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.forceDelete],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AppServiceEnvironmentResource,\n    },\n    201: {\n      bodyMapper: Mappers.AppServiceEnvironmentResource,\n    },\n    202: {\n      bodyMapper: Mappers.AppServiceEnvironmentResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.hostingEnvironmentEnvelope1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listCapacitiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/capacities/compute\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StampCapacityCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getVipInfoOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/capacities/virtualip\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AddressResponse,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst changeVnetOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/changeVirtualNetwork\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    201: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    202: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    204: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.vnetInfo,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getAseCustomDnsSuffixConfigurationOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/configurations/customdnssuffix\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.CustomDnsSuffixConfiguration,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst updateAseCustomDnsSuffixConfigurationOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/configurations/customdnssuffix\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.CustomDnsSuffixConfiguration,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.customDnsSuffixConfiguration,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst deleteAseCustomDnsSuffixConfigurationOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/configurations/customdnssuffix\",\n    httpMethod: \"DELETE\",\n    responses: {\n      200: {\n        bodyMapper: {\n          type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n        },\n      },\n      204: {\n        bodyMapper: {\n          type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n        },\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getAseV3NetworkingConfigurationOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/configurations/networking\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AseV3NetworkingConfiguration,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateAseNetworkingConfigurationOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/configurations/networking\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.AseV3NetworkingConfiguration,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.aseNetworkingConfiguration,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst listDiagnosticsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/diagnostics\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"HostingEnvironmentDiagnostics\",\n            },\n          },\n        },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDiagnosticsItemOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/diagnostics/{diagnosticsName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HostingEnvironmentDiagnostics,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.diagnosticsName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getInboundNetworkDependenciesEndpointsOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/inboundNetworkDependenciesEndpoints\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.InboundEnvironmentEndpointCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listMultiRolePoolsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkerPoolCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getMultiRolePoolOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkerPoolResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateMultiRolePoolOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkerPoolResource,\n    },\n    201: {\n      bodyMapper: Mappers.WorkerPoolResource,\n    },\n    202: {\n      bodyMapper: Mappers.WorkerPoolResource,\n    },\n    204: {\n      bodyMapper: Mappers.WorkerPoolResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.multiRolePoolEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst updateMultiRolePoolOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkerPoolResource,\n    },\n    202: {\n      bodyMapper: Mappers.WorkerPoolResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.multiRolePoolEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listMultiRolePoolInstanceMetricDefinitionsOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/instances/{instance}/metricdefinitions\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.ResourceMetricDefinitionCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.instance,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listMultiRoleMetricDefinitionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/metricdefinitions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceMetricDefinitionCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listMultiRolePoolSkusOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/skus\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SkuInfoCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst testUpgradeAvailableNotificationOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/testUpgradeAvailableNotification\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {},\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst upgradeOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/upgrade\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listMultiRoleUsagesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/usages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UsageCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listOperationsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"Operation\" } },\n        },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOutboundNetworkDependenciesEndpointsOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/outboundNetworkDependenciesEndpoints\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.OutboundEnvironmentEndpointCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getPrivateEndpointConnectionListOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/privateEndpointConnections\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PrivateEndpointConnectionCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getPrivateEndpointConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemotePrivateEndpointConnectionARMResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.privateEndpointConnectionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst approveOrRejectPrivateEndpointConnectionOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/privateEndpointConnections/{privateEndpointConnectionName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.RemotePrivateEndpointConnectionARMResource,\n      },\n      201: {\n        bodyMapper: Mappers.RemotePrivateEndpointConnectionARMResource,\n      },\n      202: {\n        bodyMapper: Mappers.RemotePrivateEndpointConnectionARMResource,\n      },\n      204: {\n        bodyMapper: Mappers.RemotePrivateEndpointConnectionARMResource,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.privateEndpointWrapper,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.privateEndpointConnectionName,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst deletePrivateEndpointConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n      },\n    },\n    201: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n      },\n    },\n    202: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n      },\n    },\n    204: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.privateEndpointConnectionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getPrivateLinkResourcesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/privateLinkResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResourcesWrapper,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst rebootOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/reboot\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst resumeOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/resume\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    201: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    202: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    204: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAppServicePlansOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/serverfarms\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AppServicePlanCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listWebAppsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/sites\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.propertiesToInclude],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst suspendOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/suspend\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    201: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    202: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    204: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listUsagesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/usages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CsmUsageQuotaCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listWorkerPoolsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkerPoolCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getWorkerPoolOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkerPoolResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.workerPoolName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateWorkerPoolOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkerPoolResource,\n    },\n    201: {\n      bodyMapper: Mappers.WorkerPoolResource,\n    },\n    202: {\n      bodyMapper: Mappers.WorkerPoolResource,\n    },\n    204: {\n      bodyMapper: Mappers.WorkerPoolResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.workerPoolEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.workerPoolName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst updateWorkerPoolOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkerPoolResource,\n    },\n    202: {\n      bodyMapper: Mappers.WorkerPoolResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.workerPoolEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.workerPoolName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listWorkerPoolInstanceMetricDefinitionsOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/instances/{instance}/metricdefinitions\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.ResourceMetricDefinitionCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.instance,\n      Parameters.workerPoolName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listWebWorkerMetricDefinitionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/metricdefinitions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceMetricDefinitionCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.workerPoolName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listWorkerPoolSkusOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/skus\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SkuInfoCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.workerPoolName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listWebWorkerUsagesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/usages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UsageCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.workerPoolName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AppServiceEnvironmentCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AppServiceEnvironmentCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listCapacitiesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StampCapacityCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst changeVnetNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    202: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getInboundNetworkDependenciesEndpointsNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.InboundEnvironmentEndpointCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listMultiRolePoolsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkerPoolCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listMultiRolePoolInstanceMetricDefinitionsNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.ResourceMetricDefinitionCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n      Parameters.instance,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listMultiRoleMetricDefinitionsNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.ResourceMetricDefinitionCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listMultiRolePoolSkusNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SkuInfoCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listMultiRoleUsagesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UsageCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOutboundNetworkDependenciesEndpointsNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.OutboundEnvironmentEndpointCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getPrivateEndpointConnectionListNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PrivateEndpointConnectionCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst resumeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    202: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listAppServicePlansNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AppServicePlanCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listWebAppsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst suspendNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    202: {\n      bodyMapper: Mappers.WebAppCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listUsagesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CsmUsageQuotaCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listWorkerPoolsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkerPoolCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listWorkerPoolInstanceMetricDefinitionsNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.ResourceMetricDefinitionCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n      Parameters.instance,\n      Parameters.workerPoolName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listWebWorkerMetricDefinitionsNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.ResourceMetricDefinitionCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n      Parameters.workerPoolName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listWorkerPoolSkusNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SkuInfoCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.workerPoolName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listWebWorkerUsagesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UsageCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.workerPoolName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}