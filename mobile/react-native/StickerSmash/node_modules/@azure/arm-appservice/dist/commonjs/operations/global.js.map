{"version":3,"file":"global.js","sourceRoot":"","sources":["../../../src/operations/global.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;AAGH,uEAAiD;AACjD,sEAAgD;AAChD,4EAAsD;AAUtD,0CAA0C;AAC1C,MAAa,UAAU;IAGrB;;;OAGG;IACH,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;;OAIG;IACH,gBAAgB,CACd,aAAqB,EACrB,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,aAAa,EAAE,OAAO,EAAE,EAC1B,6BAA6B,CAC9B,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACH,yBAAyB,CACvB,aAAqB,EACrB,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,aAAa,EAAE,OAAO,EAAE,EAC1B,sCAAsC,CACvC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,yCAAyC,CACvC,QAAgB,EAChB,WAAmB,EACnB,OAAuE;QAEvE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE,EAClC,sDAAsD,CACvD,CAAC;IACJ,CAAC;CACF;AAzDD,gCAyDC;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EAAE,sFAAsF;IAC5F,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,WAAW;SAChC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,aAAa;KACzB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,sCAAsC,GAA6B;IACvE,IAAI,EAAE,gGAAgG;IACtG,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,EAAE;iBAChE;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,aAAa;KACzB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC;AACF,MAAM,sDAAsD,GAC1D;IACE,IAAI,EAAE,uGAAuG;IAC7G,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,oBAAoB;SACzC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE;QACb,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,QAAQ;QACnB,UAAU,CAAC,WAAW;KACvB;IACD,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Global } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { WebSiteManagementClient } from \"../webSiteManagementClient.js\";\nimport {\n  GlobalGetDeletedWebAppOptionalParams,\n  GlobalGetDeletedWebAppResponse,\n  GlobalGetDeletedWebAppSnapshotsOptionalParams,\n  GlobalGetDeletedWebAppSnapshotsResponse,\n  GlobalGetSubscriptionOperationWithAsyncResponseOptionalParams,\n} from \"../models/index.js\";\n\n/** Class containing Global operations. */\nexport class GlobalImpl implements Global {\n  private readonly client: WebSiteManagementClient;\n\n  /**\n   * Initialize a new instance of the class Global class.\n   * @param client Reference to the service client\n   */\n  constructor(client: WebSiteManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Description for Get deleted app for a subscription.\n   * @param deletedSiteId The numeric ID of the deleted app, e.g. 12345\n   * @param options The options parameters.\n   */\n  getDeletedWebApp(\n    deletedSiteId: string,\n    options?: GlobalGetDeletedWebAppOptionalParams,\n  ): Promise<GlobalGetDeletedWebAppResponse> {\n    return this.client.sendOperationRequest(\n      { deletedSiteId, options },\n      getDeletedWebAppOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get all deleted apps for a subscription.\n   * @param deletedSiteId The numeric ID of the deleted app, e.g. 12345\n   * @param options The options parameters.\n   */\n  getDeletedWebAppSnapshots(\n    deletedSiteId: string,\n    options?: GlobalGetDeletedWebAppSnapshotsOptionalParams,\n  ): Promise<GlobalGetDeletedWebAppSnapshotsResponse> {\n    return this.client.sendOperationRequest(\n      { deletedSiteId, options },\n      getDeletedWebAppSnapshotsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets an operation in a subscription and given region\n   * @param location Location name\n   * @param operationId Operation Id\n   * @param options The options parameters.\n   */\n  getSubscriptionOperationWithAsyncResponse(\n    location: string,\n    operationId: string,\n    options?: GlobalGetSubscriptionOperationWithAsyncResponseOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { location, operationId, options },\n      getSubscriptionOperationWithAsyncResponseOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getDeletedWebAppOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Web/deletedSites/{deletedSiteId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeletedSite,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.deletedSiteId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDeletedWebAppSnapshotsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Web/deletedSites/{deletedSiteId}/snapshots\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"Snapshot\" } },\n        },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.deletedSiteId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSubscriptionOperationWithAsyncResponseOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/operations/{operationId}\",\n    httpMethod: \"GET\",\n    responses: {\n      204: {},\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.location,\n      Parameters.operationId,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\n"]}