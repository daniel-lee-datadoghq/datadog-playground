{"version":3,"file":"staticSites.js","sourceRoot":"","sources":["../../../src/operations/staticSites.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { StaticSites } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { WebSiteManagementClient } from \"../webSiteManagementClient.js\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller,\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl.js\";\nimport {\n  StaticSiteARMResource,\n  StaticSitesListNextOptionalParams,\n  StaticSitesListOptionalParams,\n  StaticSitesListResponse,\n  StaticSitesGetStaticSitesByResourceGroupNextOptionalParams,\n  StaticSitesGetStaticSitesByResourceGroupOptionalParams,\n  StaticSitesGetStaticSitesByResourceGroupResponse,\n  StaticSiteUserARMResource,\n  StaticSitesListStaticSiteUsersNextOptionalParams,\n  StaticSitesListStaticSiteUsersOptionalParams,\n  StaticSitesListStaticSiteUsersResponse,\n  StaticSiteBuildARMResource,\n  StaticSitesGetStaticSiteBuildsNextOptionalParams,\n  StaticSitesGetStaticSiteBuildsOptionalParams,\n  StaticSitesGetStaticSiteBuildsResponse,\n  DatabaseConnection,\n  StaticSitesGetBuildDatabaseConnectionsNextOptionalParams,\n  StaticSitesGetBuildDatabaseConnectionsOptionalParams,\n  StaticSitesGetBuildDatabaseConnectionsResponse,\n  StaticSiteFunctionOverviewARMResource,\n  StaticSitesListStaticSiteBuildFunctionsNextOptionalParams,\n  StaticSitesListStaticSiteBuildFunctionsOptionalParams,\n  StaticSitesListStaticSiteBuildFunctionsResponse,\n  StaticSitesGetBuildDatabaseConnectionsWithDetailsNextOptionalParams,\n  StaticSitesGetBuildDatabaseConnectionsWithDetailsOptionalParams,\n  StaticSitesGetBuildDatabaseConnectionsWithDetailsResponse,\n  StaticSiteUserProvidedFunctionAppARMResource,\n  StaticSitesGetUserProvidedFunctionAppsForStaticSiteBuildNextOptionalParams,\n  StaticSitesGetUserProvidedFunctionAppsForStaticSiteBuildOptionalParams,\n  StaticSitesGetUserProvidedFunctionAppsForStaticSiteBuildResponse,\n  StaticSiteBasicAuthPropertiesARMResource,\n  StaticSitesListBasicAuthNextOptionalParams,\n  StaticSitesListBasicAuthOptionalParams,\n  StaticSitesListBasicAuthResponse,\n  StaticSiteCustomDomainOverviewARMResource,\n  StaticSitesListStaticSiteCustomDomainsNextOptionalParams,\n  StaticSitesListStaticSiteCustomDomainsOptionalParams,\n  StaticSitesListStaticSiteCustomDomainsResponse,\n  StaticSitesGetDatabaseConnectionsNextOptionalParams,\n  StaticSitesGetDatabaseConnectionsOptionalParams,\n  StaticSitesGetDatabaseConnectionsResponse,\n  StaticSitesListStaticSiteFunctionsNextOptionalParams,\n  StaticSitesListStaticSiteFunctionsOptionalParams,\n  StaticSitesListStaticSiteFunctionsResponse,\n  RemotePrivateEndpointConnectionARMResource,\n  StaticSitesGetPrivateEndpointConnectionListNextOptionalParams,\n  StaticSitesGetPrivateEndpointConnectionListOptionalParams,\n  StaticSitesGetPrivateEndpointConnectionListResponse,\n  StaticSitesGetDatabaseConnectionsWithDetailsNextOptionalParams,\n  StaticSitesGetDatabaseConnectionsWithDetailsOptionalParams,\n  StaticSitesGetDatabaseConnectionsWithDetailsResponse,\n  StaticSitesGetUserProvidedFunctionAppsForStaticSiteNextOptionalParams,\n  StaticSitesGetUserProvidedFunctionAppsForStaticSiteOptionalParams,\n  StaticSitesGetUserProvidedFunctionAppsForStaticSiteResponse,\n  StaticSiteLinkedBackendARMResource,\n  StaticSitesGetLinkedBackendsNextOptionalParams,\n  StaticSitesGetLinkedBackendsOptionalParams,\n  StaticSitesGetLinkedBackendsResponse,\n  StaticSitesGetLinkedBackendsForBuildNextOptionalParams,\n  StaticSitesGetLinkedBackendsForBuildOptionalParams,\n  StaticSitesGetLinkedBackendsForBuildResponse,\n  StaticSitesWorkflowPreviewRequest,\n  StaticSitesPreviewWorkflowOptionalParams,\n  StaticSitesPreviewWorkflowResponse,\n  StaticSitesGetStaticSiteOptionalParams,\n  StaticSitesGetStaticSiteResponse,\n  StaticSitesCreateOrUpdateStaticSiteOptionalParams,\n  StaticSitesCreateOrUpdateStaticSiteResponse,\n  StaticSitesDeleteStaticSiteOptionalParams,\n  StaticSitePatchResource,\n  StaticSitesUpdateStaticSiteOptionalParams,\n  StaticSitesUpdateStaticSiteResponse,\n  StaticSitesDeleteStaticSiteUserOptionalParams,\n  StaticSitesUpdateStaticSiteUserOptionalParams,\n  StaticSitesUpdateStaticSiteUserResponse,\n  StaticSitesGetStaticSiteBuildOptionalParams,\n  StaticSitesGetStaticSiteBuildResponse,\n  StaticSitesDeleteStaticSiteBuildOptionalParams,\n  StringDictionary,\n  StaticSitesCreateOrUpdateStaticSiteBuildAppSettingsOptionalParams,\n  StaticSitesCreateOrUpdateStaticSiteBuildAppSettingsResponse,\n  StaticSitesCreateOrUpdateStaticSiteBuildFunctionAppSettingsOptionalParams,\n  StaticSitesCreateOrUpdateStaticSiteBuildFunctionAppSettingsResponse,\n  StaticSitesGetBuildDatabaseConnectionOptionalParams,\n  StaticSitesGetBuildDatabaseConnectionResponse,\n  StaticSitesCreateOrUpdateBuildDatabaseConnectionOptionalParams,\n  StaticSitesCreateOrUpdateBuildDatabaseConnectionResponse,\n  StaticSitesDeleteBuildDatabaseConnectionOptionalParams,\n  DatabaseConnectionPatchRequest,\n  StaticSitesUpdateBuildDatabaseConnectionOptionalParams,\n  StaticSitesUpdateBuildDatabaseConnectionResponse,\n  StaticSitesGetBuildDatabaseConnectionWithDetailsOptionalParams,\n  StaticSitesGetBuildDatabaseConnectionWithDetailsResponse,\n  StaticSitesListStaticSiteBuildAppSettingsOptionalParams,\n  StaticSitesListStaticSiteBuildAppSettingsResponse,\n  StaticSitesListStaticSiteBuildFunctionAppSettingsOptionalParams,\n  StaticSitesListStaticSiteBuildFunctionAppSettingsResponse,\n  StaticSitesGetUserProvidedFunctionAppForStaticSiteBuildOptionalParams,\n  StaticSitesGetUserProvidedFunctionAppForStaticSiteBuildResponse,\n  StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteBuildOptionalParams,\n  StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteBuildResponse,\n  StaticSitesDetachUserProvidedFunctionAppFromStaticSiteBuildOptionalParams,\n  StaticSiteZipDeploymentARMResource,\n  StaticSitesCreateZipDeploymentForStaticSiteBuildOptionalParams,\n  StaticSitesCreateOrUpdateStaticSiteAppSettingsOptionalParams,\n  StaticSitesCreateOrUpdateStaticSiteAppSettingsResponse,\n  BasicAuthName,\n  StaticSitesGetBasicAuthOptionalParams,\n  StaticSitesGetBasicAuthResponse,\n  StaticSitesCreateOrUpdateBasicAuthOptionalParams,\n  StaticSitesCreateOrUpdateBasicAuthResponse,\n  StaticSitesCreateOrUpdateStaticSiteFunctionAppSettingsOptionalParams,\n  StaticSitesCreateOrUpdateStaticSiteFunctionAppSettingsResponse,\n  StaticSiteUserInvitationRequestResource,\n  StaticSitesCreateUserRolesInvitationLinkOptionalParams,\n  StaticSitesCreateUserRolesInvitationLinkResponse,\n  StaticSitesGetStaticSiteCustomDomainOptionalParams,\n  StaticSitesGetStaticSiteCustomDomainResponse,\n  StaticSiteCustomDomainRequestPropertiesARMResource,\n  StaticSitesCreateOrUpdateStaticSiteCustomDomainOptionalParams,\n  StaticSitesCreateOrUpdateStaticSiteCustomDomainResponse,\n  StaticSitesDeleteStaticSiteCustomDomainOptionalParams,\n  StaticSitesValidateCustomDomainCanBeAddedToStaticSiteOptionalParams,\n  StaticSitesGetDatabaseConnectionOptionalParams,\n  StaticSitesGetDatabaseConnectionResponse,\n  StaticSitesCreateOrUpdateDatabaseConnectionOptionalParams,\n  StaticSitesCreateOrUpdateDatabaseConnectionResponse,\n  StaticSitesDeleteDatabaseConnectionOptionalParams,\n  StaticSitesUpdateDatabaseConnectionOptionalParams,\n  StaticSitesUpdateDatabaseConnectionResponse,\n  StaticSitesGetDatabaseConnectionWithDetailsOptionalParams,\n  StaticSitesGetDatabaseConnectionWithDetailsResponse,\n  StaticSitesDetachStaticSiteOptionalParams,\n  StaticSitesListStaticSiteAppSettingsOptionalParams,\n  StaticSitesListStaticSiteAppSettingsResponse,\n  StaticSitesListStaticSiteConfiguredRolesOptionalParams,\n  StaticSitesListStaticSiteConfiguredRolesResponse,\n  StaticSitesListStaticSiteFunctionAppSettingsOptionalParams,\n  StaticSitesListStaticSiteFunctionAppSettingsResponse,\n  StaticSitesListStaticSiteSecretsOptionalParams,\n  StaticSitesListStaticSiteSecretsResponse,\n  StaticSitesGetPrivateEndpointConnectionOptionalParams,\n  StaticSitesGetPrivateEndpointConnectionResponse,\n  StaticSitesApproveOrRejectPrivateEndpointConnectionOptionalParams,\n  StaticSitesApproveOrRejectPrivateEndpointConnectionResponse,\n  StaticSitesDeletePrivateEndpointConnectionOptionalParams,\n  StaticSitesDeletePrivateEndpointConnectionResponse,\n  StaticSitesGetPrivateLinkResourcesOptionalParams,\n  StaticSitesGetPrivateLinkResourcesResponse,\n  StaticSiteResetPropertiesARMResource,\n  StaticSitesResetStaticSiteApiKeyOptionalParams,\n  StaticSitesGetUserProvidedFunctionAppForStaticSiteOptionalParams,\n  StaticSitesGetUserProvidedFunctionAppForStaticSiteResponse,\n  StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteOptionalParams,\n  StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteResponse,\n  StaticSitesDetachUserProvidedFunctionAppFromStaticSiteOptionalParams,\n  StaticSitesCreateZipDeploymentForStaticSiteOptionalParams,\n  StaticSitesValidateBackendOptionalParams,\n  StaticSitesValidateBackendForBuildOptionalParams,\n  StaticSitesGetLinkedBackendOptionalParams,\n  StaticSitesGetLinkedBackendResponse,\n  StaticSitesLinkBackendOptionalParams,\n  StaticSitesLinkBackendResponse,\n  StaticSitesUnlinkBackendOptionalParams,\n  StaticSitesGetLinkedBackendForBuildOptionalParams,\n  StaticSitesGetLinkedBackendForBuildResponse,\n  StaticSitesLinkBackendToBuildOptionalParams,\n  StaticSitesLinkBackendToBuildResponse,\n  StaticSitesUnlinkBackendFromBuildOptionalParams,\n  StaticSitesListNextResponse,\n  StaticSitesGetStaticSitesByResourceGroupNextResponse,\n  StaticSitesListStaticSiteUsersNextResponse,\n  StaticSitesGetStaticSiteBuildsNextResponse,\n  StaticSitesGetBuildDatabaseConnectionsNextResponse,\n  StaticSitesListStaticSiteBuildFunctionsNextResponse,\n  StaticSitesGetBuildDatabaseConnectionsWithDetailsNextResponse,\n  StaticSitesGetUserProvidedFunctionAppsForStaticSiteBuildNextResponse,\n  StaticSitesListBasicAuthNextResponse,\n  StaticSitesListStaticSiteCustomDomainsNextResponse,\n  StaticSitesGetDatabaseConnectionsNextResponse,\n  StaticSitesListStaticSiteFunctionsNextResponse,\n  StaticSitesGetPrivateEndpointConnectionListNextResponse,\n  StaticSitesGetDatabaseConnectionsWithDetailsNextResponse,\n  StaticSitesGetUserProvidedFunctionAppsForStaticSiteNextResponse,\n  StaticSitesGetLinkedBackendsNextResponse,\n  StaticSitesGetLinkedBackendsForBuildNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing StaticSites operations. */\nexport class StaticSitesImpl implements StaticSites {\n  private readonly client: WebSiteManagementClient;\n\n  /**\n   * Initialize a new instance of the class StaticSites class.\n   * @param client Reference to the service client\n   */\n  constructor(client: WebSiteManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Description for Get all Static Sites for a subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: StaticSitesListOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteARMResource> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    options?: StaticSitesListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<StaticSiteARMResource[]> {\n    let result: StaticSitesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: StaticSitesListOptionalParams,\n  ): AsyncIterableIterator<StaticSiteARMResource> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets all static sites in the specified resource group.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param options The options parameters.\n   */\n  public listStaticSitesByResourceGroup(\n    resourceGroupName: string,\n    options?: StaticSitesGetStaticSitesByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteARMResource> {\n    const iter = this.getStaticSitesByResourceGroupPagingAll(\n      resourceGroupName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getStaticSitesByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getStaticSitesByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: StaticSitesGetStaticSitesByResourceGroupOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<StaticSiteARMResource[]> {\n    let result: StaticSitesGetStaticSitesByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getStaticSitesByResourceGroup(\n        resourceGroupName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getStaticSitesByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getStaticSitesByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: StaticSitesGetStaticSitesByResourceGroupOptionalParams,\n  ): AsyncIterableIterator<StaticSiteARMResource> {\n    for await (const page of this.getStaticSitesByResourceGroupPagingPage(\n      resourceGroupName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets the list of users of a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param authprovider The auth provider for the users.\n   * @param options The options parameters.\n   */\n  public listStaticSiteUsers(\n    resourceGroupName: string,\n    name: string,\n    authprovider: string,\n    options?: StaticSitesListStaticSiteUsersOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteUserARMResource> {\n    const iter = this.listStaticSiteUsersPagingAll(\n      resourceGroupName,\n      name,\n      authprovider,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listStaticSiteUsersPagingPage(\n          resourceGroupName,\n          name,\n          authprovider,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listStaticSiteUsersPagingPage(\n    resourceGroupName: string,\n    name: string,\n    authprovider: string,\n    options?: StaticSitesListStaticSiteUsersOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<StaticSiteUserARMResource[]> {\n    let result: StaticSitesListStaticSiteUsersResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listStaticSiteUsers(\n        resourceGroupName,\n        name,\n        authprovider,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listStaticSiteUsersNext(\n        resourceGroupName,\n        name,\n        authprovider,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listStaticSiteUsersPagingAll(\n    resourceGroupName: string,\n    name: string,\n    authprovider: string,\n    options?: StaticSitesListStaticSiteUsersOptionalParams,\n  ): AsyncIterableIterator<StaticSiteUserARMResource> {\n    for await (const page of this.listStaticSiteUsersPagingPage(\n      resourceGroupName,\n      name,\n      authprovider,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets all static site builds for a particular static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  public listStaticSiteBuilds(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetStaticSiteBuildsOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteBuildARMResource> {\n    const iter = this.getStaticSiteBuildsPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getStaticSiteBuildsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getStaticSiteBuildsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetStaticSiteBuildsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<StaticSiteBuildARMResource[]> {\n    let result: StaticSitesGetStaticSiteBuildsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getStaticSiteBuilds(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getStaticSiteBuildsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getStaticSiteBuildsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetStaticSiteBuildsOptionalParams,\n  ): AsyncIterableIterator<StaticSiteBuildARMResource> {\n    for await (const page of this.getStaticSiteBuildsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns overviews of database connections for a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  public listBuildDatabaseConnections(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetBuildDatabaseConnectionsOptionalParams,\n  ): PagedAsyncIterableIterator<DatabaseConnection> {\n    const iter = this.getBuildDatabaseConnectionsPagingAll(\n      resourceGroupName,\n      name,\n      environmentName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getBuildDatabaseConnectionsPagingPage(\n          resourceGroupName,\n          name,\n          environmentName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getBuildDatabaseConnectionsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetBuildDatabaseConnectionsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DatabaseConnection[]> {\n    let result: StaticSitesGetBuildDatabaseConnectionsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getBuildDatabaseConnections(\n        resourceGroupName,\n        name,\n        environmentName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getBuildDatabaseConnectionsNext(\n        resourceGroupName,\n        name,\n        environmentName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getBuildDatabaseConnectionsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetBuildDatabaseConnectionsOptionalParams,\n  ): AsyncIterableIterator<DatabaseConnection> {\n    for await (const page of this.getBuildDatabaseConnectionsPagingPage(\n      resourceGroupName,\n      name,\n      environmentName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets the functions of a particular static site build.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  public listStaticSiteBuildFunctions(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesListStaticSiteBuildFunctionsOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteFunctionOverviewARMResource> {\n    const iter = this.listStaticSiteBuildFunctionsPagingAll(\n      resourceGroupName,\n      name,\n      environmentName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listStaticSiteBuildFunctionsPagingPage(\n          resourceGroupName,\n          name,\n          environmentName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listStaticSiteBuildFunctionsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesListStaticSiteBuildFunctionsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<StaticSiteFunctionOverviewARMResource[]> {\n    let result: StaticSitesListStaticSiteBuildFunctionsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listStaticSiteBuildFunctions(\n        resourceGroupName,\n        name,\n        environmentName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listStaticSiteBuildFunctionsNext(\n        resourceGroupName,\n        name,\n        environmentName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listStaticSiteBuildFunctionsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesListStaticSiteBuildFunctionsOptionalParams,\n  ): AsyncIterableIterator<StaticSiteFunctionOverviewARMResource> {\n    for await (const page of this.listStaticSiteBuildFunctionsPagingPage(\n      resourceGroupName,\n      name,\n      environmentName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns details of database connections for a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  public listBuildDatabaseConnectionsWithDetails(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetBuildDatabaseConnectionsWithDetailsOptionalParams,\n  ): PagedAsyncIterableIterator<DatabaseConnection> {\n    const iter = this.getBuildDatabaseConnectionsWithDetailsPagingAll(\n      resourceGroupName,\n      name,\n      environmentName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getBuildDatabaseConnectionsWithDetailsPagingPage(\n          resourceGroupName,\n          name,\n          environmentName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getBuildDatabaseConnectionsWithDetailsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetBuildDatabaseConnectionsWithDetailsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DatabaseConnection[]> {\n    let result: StaticSitesGetBuildDatabaseConnectionsWithDetailsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getBuildDatabaseConnectionsWithDetails(\n        resourceGroupName,\n        name,\n        environmentName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getBuildDatabaseConnectionsWithDetailsNext(\n        resourceGroupName,\n        name,\n        environmentName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getBuildDatabaseConnectionsWithDetailsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetBuildDatabaseConnectionsWithDetailsOptionalParams,\n  ): AsyncIterableIterator<DatabaseConnection> {\n    for await (const page of this.getBuildDatabaseConnectionsWithDetailsPagingPage(\n      resourceGroupName,\n      name,\n      environmentName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets the details of the user provided function apps registered with a static site\n   * build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  public listUserProvidedFunctionAppsForStaticSiteBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetUserProvidedFunctionAppsForStaticSiteBuildOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteUserProvidedFunctionAppARMResource> {\n    const iter = this.getUserProvidedFunctionAppsForStaticSiteBuildPagingAll(\n      resourceGroupName,\n      name,\n      environmentName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getUserProvidedFunctionAppsForStaticSiteBuildPagingPage(\n          resourceGroupName,\n          name,\n          environmentName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getUserProvidedFunctionAppsForStaticSiteBuildPagingPage(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetUserProvidedFunctionAppsForStaticSiteBuildOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<StaticSiteUserProvidedFunctionAppARMResource[]> {\n    let result: StaticSitesGetUserProvidedFunctionAppsForStaticSiteBuildResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getUserProvidedFunctionAppsForStaticSiteBuild(\n        resourceGroupName,\n        name,\n        environmentName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getUserProvidedFunctionAppsForStaticSiteBuildNext(\n        resourceGroupName,\n        name,\n        environmentName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getUserProvidedFunctionAppsForStaticSiteBuildPagingAll(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetUserProvidedFunctionAppsForStaticSiteBuildOptionalParams,\n  ): AsyncIterableIterator<StaticSiteUserProvidedFunctionAppARMResource> {\n    for await (const page of this.getUserProvidedFunctionAppsForStaticSiteBuildPagingPage(\n      resourceGroupName,\n      name,\n      environmentName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets the basic auth properties for a static site as a collection.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  public listBasicAuth(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListBasicAuthOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteBasicAuthPropertiesARMResource> {\n    const iter = this.listBasicAuthPagingAll(resourceGroupName, name, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBasicAuthPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listBasicAuthPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListBasicAuthOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<StaticSiteBasicAuthPropertiesARMResource[]> {\n    let result: StaticSitesListBasicAuthResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBasicAuth(resourceGroupName, name, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBasicAuthNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBasicAuthPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListBasicAuthOptionalParams,\n  ): AsyncIterableIterator<StaticSiteBasicAuthPropertiesARMResource> {\n    for await (const page of this.listBasicAuthPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets all static site custom domains for a particular static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site resource to search in.\n   * @param options The options parameters.\n   */\n  public listStaticSiteCustomDomains(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListStaticSiteCustomDomainsOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteCustomDomainOverviewARMResource> {\n    const iter = this.listStaticSiteCustomDomainsPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listStaticSiteCustomDomainsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listStaticSiteCustomDomainsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListStaticSiteCustomDomainsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<StaticSiteCustomDomainOverviewARMResource[]> {\n    let result: StaticSitesListStaticSiteCustomDomainsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listStaticSiteCustomDomains(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listStaticSiteCustomDomainsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listStaticSiteCustomDomainsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListStaticSiteCustomDomainsOptionalParams,\n  ): AsyncIterableIterator<StaticSiteCustomDomainOverviewARMResource> {\n    for await (const page of this.listStaticSiteCustomDomainsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns overviews of database connections for a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param options The options parameters.\n   */\n  public listDatabaseConnections(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetDatabaseConnectionsOptionalParams,\n  ): PagedAsyncIterableIterator<DatabaseConnection> {\n    const iter = this.getDatabaseConnectionsPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getDatabaseConnectionsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getDatabaseConnectionsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetDatabaseConnectionsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DatabaseConnection[]> {\n    let result: StaticSitesGetDatabaseConnectionsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getDatabaseConnections(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getDatabaseConnectionsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getDatabaseConnectionsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetDatabaseConnectionsOptionalParams,\n  ): AsyncIterableIterator<DatabaseConnection> {\n    for await (const page of this.getDatabaseConnectionsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets the functions of a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  public listStaticSiteFunctions(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListStaticSiteFunctionsOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteFunctionOverviewARMResource> {\n    const iter = this.listStaticSiteFunctionsPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listStaticSiteFunctionsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listStaticSiteFunctionsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListStaticSiteFunctionsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<StaticSiteFunctionOverviewARMResource[]> {\n    let result: StaticSitesListStaticSiteFunctionsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listStaticSiteFunctions(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listStaticSiteFunctionsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listStaticSiteFunctionsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListStaticSiteFunctionsOptionalParams,\n  ): AsyncIterableIterator<StaticSiteFunctionOverviewARMResource> {\n    for await (const page of this.listStaticSiteFunctionsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets the list of private endpoint connections associated with a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  public listPrivateEndpointConnectionList(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetPrivateEndpointConnectionListOptionalParams,\n  ): PagedAsyncIterableIterator<RemotePrivateEndpointConnectionARMResource> {\n    const iter = this.getPrivateEndpointConnectionListPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getPrivateEndpointConnectionListPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getPrivateEndpointConnectionListPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetPrivateEndpointConnectionListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<RemotePrivateEndpointConnectionARMResource[]> {\n    let result: StaticSitesGetPrivateEndpointConnectionListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getPrivateEndpointConnectionList(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getPrivateEndpointConnectionListNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getPrivateEndpointConnectionListPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetPrivateEndpointConnectionListOptionalParams,\n  ): AsyncIterableIterator<RemotePrivateEndpointConnectionARMResource> {\n    for await (const page of this.getPrivateEndpointConnectionListPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns details of database connections for a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param options The options parameters.\n   */\n  public listDatabaseConnectionsWithDetails(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetDatabaseConnectionsWithDetailsOptionalParams,\n  ): PagedAsyncIterableIterator<DatabaseConnection> {\n    const iter = this.getDatabaseConnectionsWithDetailsPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getDatabaseConnectionsWithDetailsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getDatabaseConnectionsWithDetailsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetDatabaseConnectionsWithDetailsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DatabaseConnection[]> {\n    let result: StaticSitesGetDatabaseConnectionsWithDetailsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getDatabaseConnectionsWithDetails(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getDatabaseConnectionsWithDetailsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getDatabaseConnectionsWithDetailsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetDatabaseConnectionsWithDetailsOptionalParams,\n  ): AsyncIterableIterator<DatabaseConnection> {\n    for await (const page of this.getDatabaseConnectionsWithDetailsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Gets the details of the user provided function apps registered with a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  public listUserProvidedFunctionAppsForStaticSite(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetUserProvidedFunctionAppsForStaticSiteOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteUserProvidedFunctionAppARMResource> {\n    const iter = this.getUserProvidedFunctionAppsForStaticSitePagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getUserProvidedFunctionAppsForStaticSitePagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getUserProvidedFunctionAppsForStaticSitePagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetUserProvidedFunctionAppsForStaticSiteOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<StaticSiteUserProvidedFunctionAppARMResource[]> {\n    let result: StaticSitesGetUserProvidedFunctionAppsForStaticSiteResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getUserProvidedFunctionAppsForStaticSite(\n        resourceGroupName,\n        name,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getUserProvidedFunctionAppsForStaticSiteNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getUserProvidedFunctionAppsForStaticSitePagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetUserProvidedFunctionAppsForStaticSiteOptionalParams,\n  ): AsyncIterableIterator<StaticSiteUserProvidedFunctionAppARMResource> {\n    for await (const page of this.getUserProvidedFunctionAppsForStaticSitePagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns details of all backends linked to a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param options The options parameters.\n   */\n  public listLinkedBackends(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetLinkedBackendsOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteLinkedBackendARMResource> {\n    const iter = this.getLinkedBackendsPagingAll(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getLinkedBackendsPagingPage(\n          resourceGroupName,\n          name,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getLinkedBackendsPagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetLinkedBackendsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<StaticSiteLinkedBackendARMResource[]> {\n    let result: StaticSitesGetLinkedBackendsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getLinkedBackends(resourceGroupName, name, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getLinkedBackendsNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getLinkedBackendsPagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetLinkedBackendsOptionalParams,\n  ): AsyncIterableIterator<StaticSiteLinkedBackendARMResource> {\n    for await (const page of this.getLinkedBackendsPagingPage(\n      resourceGroupName,\n      name,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns details of all backends linked to a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier\n   * @param options The options parameters.\n   */\n  public listLinkedBackendsForBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetLinkedBackendsForBuildOptionalParams,\n  ): PagedAsyncIterableIterator<StaticSiteLinkedBackendARMResource> {\n    const iter = this.getLinkedBackendsForBuildPagingAll(\n      resourceGroupName,\n      name,\n      environmentName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getLinkedBackendsForBuildPagingPage(\n          resourceGroupName,\n          name,\n          environmentName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *getLinkedBackendsForBuildPagingPage(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetLinkedBackendsForBuildOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<StaticSiteLinkedBackendARMResource[]> {\n    let result: StaticSitesGetLinkedBackendsForBuildResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getLinkedBackendsForBuild(\n        resourceGroupName,\n        name,\n        environmentName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getLinkedBackendsForBuildNext(\n        resourceGroupName,\n        name,\n        environmentName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getLinkedBackendsForBuildPagingAll(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetLinkedBackendsForBuildOptionalParams,\n  ): AsyncIterableIterator<StaticSiteLinkedBackendARMResource> {\n    for await (const page of this.getLinkedBackendsForBuildPagingPage(\n      resourceGroupName,\n      name,\n      environmentName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Description for Generates a preview workflow file for the static site\n   * @param location Location where you plan to create the static site.\n   * @param staticSitesWorkflowPreviewRequest A JSON representation of the\n   *                                          StaticSitesWorkflowPreviewRequest properties. See example.\n   * @param options The options parameters.\n   */\n  previewWorkflow(\n    location: string,\n    staticSitesWorkflowPreviewRequest: StaticSitesWorkflowPreviewRequest,\n    options?: StaticSitesPreviewWorkflowOptionalParams,\n  ): Promise<StaticSitesPreviewWorkflowResponse> {\n    return this.client.sendOperationRequest(\n      { location, staticSitesWorkflowPreviewRequest, options },\n      previewWorkflowOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Get all Static Sites for a subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: StaticSitesListOptionalParams,\n  ): Promise<StaticSitesListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Description for Gets all static sites in the specified resource group.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param options The options parameters.\n   */\n  private _getStaticSitesByResourceGroup(\n    resourceGroupName: string,\n    options?: StaticSitesGetStaticSitesByResourceGroupOptionalParams,\n  ): Promise<StaticSitesGetStaticSitesByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      getStaticSitesByResourceGroupOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the details of a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  getStaticSite(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetStaticSiteOptionalParams,\n  ): Promise<StaticSitesGetStaticSiteResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getStaticSiteOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a new static site in an existing resource group, or updates an existing\n   * static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site to create or update.\n   * @param staticSiteEnvelope A JSON representation of the staticsite properties. See example.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateStaticSite(\n    resourceGroupName: string,\n    name: string,\n    staticSiteEnvelope: StaticSiteARMResource,\n    options?: StaticSitesCreateOrUpdateStaticSiteOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<StaticSitesCreateOrUpdateStaticSiteResponse>,\n      StaticSitesCreateOrUpdateStaticSiteResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<StaticSitesCreateOrUpdateStaticSiteResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, staticSiteEnvelope, options },\n      spec: createOrUpdateStaticSiteOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      StaticSitesCreateOrUpdateStaticSiteResponse,\n      OperationState<StaticSitesCreateOrUpdateStaticSiteResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Creates a new static site in an existing resource group, or updates an existing\n   * static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site to create or update.\n   * @param staticSiteEnvelope A JSON representation of the staticsite properties. See example.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateStaticSiteAndWait(\n    resourceGroupName: string,\n    name: string,\n    staticSiteEnvelope: StaticSiteARMResource,\n    options?: StaticSitesCreateOrUpdateStaticSiteOptionalParams,\n  ): Promise<StaticSitesCreateOrUpdateStaticSiteResponse> {\n    const poller = await this.beginCreateOrUpdateStaticSite(\n      resourceGroupName,\n      name,\n      staticSiteEnvelope,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Deletes a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site to delete.\n   * @param options The options parameters.\n   */\n  async beginDeleteStaticSite(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesDeleteStaticSiteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, options },\n      spec: deleteStaticSiteOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Deletes a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site to delete.\n   * @param options The options parameters.\n   */\n  async beginDeleteStaticSiteAndWait(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesDeleteStaticSiteOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginDeleteStaticSite(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Creates a new static site in an existing resource group, or updates an existing\n   * static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site to create or update.\n   * @param staticSiteEnvelope A JSON representation of the staticsite properties. See example.\n   * @param options The options parameters.\n   */\n  updateStaticSite(\n    resourceGroupName: string,\n    name: string,\n    staticSiteEnvelope: StaticSitePatchResource,\n    options?: StaticSitesUpdateStaticSiteOptionalParams,\n  ): Promise<StaticSitesUpdateStaticSiteResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, staticSiteEnvelope, options },\n      updateStaticSiteOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the list of users of a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param authprovider The auth provider for the users.\n   * @param options The options parameters.\n   */\n  private _listStaticSiteUsers(\n    resourceGroupName: string,\n    name: string,\n    authprovider: string,\n    options?: StaticSitesListStaticSiteUsersOptionalParams,\n  ): Promise<StaticSitesListStaticSiteUsersResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, authprovider, options },\n      listStaticSiteUsersOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Deletes the user entry from the static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the staticsite.\n   * @param authprovider The auth provider for this user.\n   * @param userid The user id of the user.\n   * @param options The options parameters.\n   */\n  deleteStaticSiteUser(\n    resourceGroupName: string,\n    name: string,\n    authprovider: string,\n    userid: string,\n    options?: StaticSitesDeleteStaticSiteUserOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, authprovider, userid, options },\n      deleteStaticSiteUserOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Updates a user entry with the listed roles\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param authprovider The auth provider for this user.\n   * @param userid The user id of the user.\n   * @param staticSiteUserEnvelope A JSON representation of the StaticSiteUser properties. See example.\n   * @param options The options parameters.\n   */\n  updateStaticSiteUser(\n    resourceGroupName: string,\n    name: string,\n    authprovider: string,\n    userid: string,\n    staticSiteUserEnvelope: StaticSiteUserARMResource,\n    options?: StaticSitesUpdateStaticSiteUserOptionalParams,\n  ): Promise<StaticSitesUpdateStaticSiteUserResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        authprovider,\n        userid,\n        staticSiteUserEnvelope,\n        options,\n      },\n      updateStaticSiteUserOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets all static site builds for a particular static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  private _getStaticSiteBuilds(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetStaticSiteBuildsOptionalParams,\n  ): Promise<StaticSitesGetStaticSiteBuildsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getStaticSiteBuildsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the details of a static site build.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  getStaticSiteBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetStaticSiteBuildOptionalParams,\n  ): Promise<StaticSitesGetStaticSiteBuildResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, environmentName, options },\n      getStaticSiteBuildOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Deletes a static site build.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  async beginDeleteStaticSiteBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesDeleteStaticSiteBuildOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, environmentName, options },\n      spec: deleteStaticSiteBuildOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Deletes a static site build.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  async beginDeleteStaticSiteBuildAndWait(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesDeleteStaticSiteBuildOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginDeleteStaticSiteBuild(\n      resourceGroupName,\n      name,\n      environmentName,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Creates or updates the app settings of a static site build.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param appSettings The dictionary containing the static site app settings to update.\n   * @param options The options parameters.\n   */\n  createOrUpdateStaticSiteBuildAppSettings(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    appSettings: StringDictionary,\n    options?: StaticSitesCreateOrUpdateStaticSiteBuildAppSettingsOptionalParams,\n  ): Promise<StaticSitesCreateOrUpdateStaticSiteBuildAppSettingsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, environmentName, appSettings, options },\n      createOrUpdateStaticSiteBuildAppSettingsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates or updates the function app settings of a static site build.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param appSettings The dictionary containing the static site function app settings to update.\n   * @param options The options parameters.\n   */\n  createOrUpdateStaticSiteBuildFunctionAppSettings(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    appSettings: StringDictionary,\n    options?: StaticSitesCreateOrUpdateStaticSiteBuildFunctionAppSettingsOptionalParams,\n  ): Promise<StaticSitesCreateOrUpdateStaticSiteBuildFunctionAppSettingsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, environmentName, appSettings, options },\n      createOrUpdateStaticSiteBuildFunctionAppSettingsOperationSpec,\n    );\n  }\n\n  /**\n   * Returns overviews of database connections for a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  private _getBuildDatabaseConnections(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetBuildDatabaseConnectionsOptionalParams,\n  ): Promise<StaticSitesGetBuildDatabaseConnectionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, environmentName, options },\n      getBuildDatabaseConnectionsOperationSpec,\n    );\n  }\n\n  /**\n   * Returns overview of a database connection for a static site build by name\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier.\n   * @param databaseConnectionName Name of the database connection.\n   * @param options The options parameters.\n   */\n  getBuildDatabaseConnection(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    databaseConnectionName: string,\n    options?: StaticSitesGetBuildDatabaseConnectionOptionalParams,\n  ): Promise<StaticSitesGetBuildDatabaseConnectionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        environmentName,\n        databaseConnectionName,\n        options,\n      },\n      getBuildDatabaseConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Create or update a database connection for a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier.\n   * @param databaseConnectionName Name of the database connection.\n   * @param databaseConnectionRequestEnvelope A JSON representation of the database connection request\n   *                                          properties\n   * @param options The options parameters.\n   */\n  createOrUpdateBuildDatabaseConnection(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    databaseConnectionName: string,\n    databaseConnectionRequestEnvelope: DatabaseConnection,\n    options?: StaticSitesCreateOrUpdateBuildDatabaseConnectionOptionalParams,\n  ): Promise<StaticSitesCreateOrUpdateBuildDatabaseConnectionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        environmentName,\n        databaseConnectionName,\n        databaseConnectionRequestEnvelope,\n        options,\n      },\n      createOrUpdateBuildDatabaseConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Delete a database connection for a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier.\n   * @param databaseConnectionName Name of the database connection.\n   * @param options The options parameters.\n   */\n  deleteBuildDatabaseConnection(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    databaseConnectionName: string,\n    options?: StaticSitesDeleteBuildDatabaseConnectionOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        environmentName,\n        databaseConnectionName,\n        options,\n      },\n      deleteBuildDatabaseConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Create or update a database connection for a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier.\n   * @param databaseConnectionName Name of the database connection.\n   * @param databaseConnectionRequestEnvelope A JSON representation of the database connection request\n   *                                          properties\n   * @param options The options parameters.\n   */\n  updateBuildDatabaseConnection(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    databaseConnectionName: string,\n    databaseConnectionRequestEnvelope: DatabaseConnectionPatchRequest,\n    options?: StaticSitesUpdateBuildDatabaseConnectionOptionalParams,\n  ): Promise<StaticSitesUpdateBuildDatabaseConnectionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        environmentName,\n        databaseConnectionName,\n        databaseConnectionRequestEnvelope,\n        options,\n      },\n      updateBuildDatabaseConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Returns details of a database connection for a static site build by name\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier.\n   * @param databaseConnectionName Name of the database connection.\n   * @param options The options parameters.\n   */\n  getBuildDatabaseConnectionWithDetails(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    databaseConnectionName: string,\n    options?: StaticSitesGetBuildDatabaseConnectionWithDetailsOptionalParams,\n  ): Promise<StaticSitesGetBuildDatabaseConnectionWithDetailsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        environmentName,\n        databaseConnectionName,\n        options,\n      },\n      getBuildDatabaseConnectionWithDetailsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the functions of a particular static site build.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  private _listStaticSiteBuildFunctions(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesListStaticSiteBuildFunctionsOptionalParams,\n  ): Promise<StaticSitesListStaticSiteBuildFunctionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, environmentName, options },\n      listStaticSiteBuildFunctionsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the application settings of a static site build.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  listStaticSiteBuildAppSettings(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesListStaticSiteBuildAppSettingsOptionalParams,\n  ): Promise<StaticSitesListStaticSiteBuildAppSettingsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, environmentName, options },\n      listStaticSiteBuildAppSettingsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the application settings of a static site build.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  listStaticSiteBuildFunctionAppSettings(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesListStaticSiteBuildFunctionAppSettingsOptionalParams,\n  ): Promise<StaticSitesListStaticSiteBuildFunctionAppSettingsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, environmentName, options },\n      listStaticSiteBuildFunctionAppSettingsOperationSpec,\n    );\n  }\n\n  /**\n   * Returns details of database connections for a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  private _getBuildDatabaseConnectionsWithDetails(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetBuildDatabaseConnectionsWithDetailsOptionalParams,\n  ): Promise<StaticSitesGetBuildDatabaseConnectionsWithDetailsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, environmentName, options },\n      getBuildDatabaseConnectionsWithDetailsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the details of the user provided function apps registered with a static site\n   * build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param options The options parameters.\n   */\n  private _getUserProvidedFunctionAppsForStaticSiteBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetUserProvidedFunctionAppsForStaticSiteBuildOptionalParams,\n  ): Promise<StaticSitesGetUserProvidedFunctionAppsForStaticSiteBuildResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, environmentName, options },\n      getUserProvidedFunctionAppsForStaticSiteBuildOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the details of the user provided function app registered with a static site\n   * build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param functionAppName Name of the function app registered with the static site build.\n   * @param options The options parameters.\n   */\n  getUserProvidedFunctionAppForStaticSiteBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    functionAppName: string,\n    options?: StaticSitesGetUserProvidedFunctionAppForStaticSiteBuildOptionalParams,\n  ): Promise<StaticSitesGetUserProvidedFunctionAppForStaticSiteBuildResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, environmentName, functionAppName, options },\n      getUserProvidedFunctionAppForStaticSiteBuildOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Register a user provided function app with a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param functionAppName Name of the function app to register with the static site build.\n   * @param staticSiteUserProvidedFunctionEnvelope A JSON representation of the user provided function\n   *                                               app properties. See example.\n   * @param options The options parameters.\n   */\n  async beginRegisterUserProvidedFunctionAppWithStaticSiteBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    functionAppName: string,\n    staticSiteUserProvidedFunctionEnvelope: StaticSiteUserProvidedFunctionAppARMResource,\n    options?: StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteBuildOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteBuildResponse>,\n      StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteBuildResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteBuildResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        name,\n        environmentName,\n        functionAppName,\n        staticSiteUserProvidedFunctionEnvelope,\n        options,\n      },\n      spec: registerUserProvidedFunctionAppWithStaticSiteBuildOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteBuildResponse,\n      OperationState<StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteBuildResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Register a user provided function app with a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param functionAppName Name of the function app to register with the static site build.\n   * @param staticSiteUserProvidedFunctionEnvelope A JSON representation of the user provided function\n   *                                               app properties. See example.\n   * @param options The options parameters.\n   */\n  async beginRegisterUserProvidedFunctionAppWithStaticSiteBuildAndWait(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    functionAppName: string,\n    staticSiteUserProvidedFunctionEnvelope: StaticSiteUserProvidedFunctionAppARMResource,\n    options?: StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteBuildOptionalParams,\n  ): Promise<StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteBuildResponse> {\n    const poller =\n      await this.beginRegisterUserProvidedFunctionAppWithStaticSiteBuild(\n        resourceGroupName,\n        name,\n        environmentName,\n        functionAppName,\n        staticSiteUserProvidedFunctionEnvelope,\n        options,\n      );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Detach the user provided function app from the static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param functionAppName Name of the function app registered with the static site build.\n   * @param options The options parameters.\n   */\n  detachUserProvidedFunctionAppFromStaticSiteBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    functionAppName: string,\n    options?: StaticSitesDetachUserProvidedFunctionAppFromStaticSiteBuildOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, environmentName, functionAppName, options },\n      detachUserProvidedFunctionAppFromStaticSiteBuildOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Deploys zipped content to a specific environment of a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName Name of the environment.\n   * @param staticSiteZipDeploymentEnvelope A JSON representation of the StaticSiteZipDeployment\n   *                                        properties. See example.\n   * @param options The options parameters.\n   */\n  async beginCreateZipDeploymentForStaticSiteBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    staticSiteZipDeploymentEnvelope: StaticSiteZipDeploymentARMResource,\n    options?: StaticSitesCreateZipDeploymentForStaticSiteBuildOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        name,\n        environmentName,\n        staticSiteZipDeploymentEnvelope,\n        options,\n      },\n      spec: createZipDeploymentForStaticSiteBuildOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Deploys zipped content to a specific environment of a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName Name of the environment.\n   * @param staticSiteZipDeploymentEnvelope A JSON representation of the StaticSiteZipDeployment\n   *                                        properties. See example.\n   * @param options The options parameters.\n   */\n  async beginCreateZipDeploymentForStaticSiteBuildAndWait(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    staticSiteZipDeploymentEnvelope: StaticSiteZipDeploymentARMResource,\n    options?: StaticSitesCreateZipDeploymentForStaticSiteBuildOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginCreateZipDeploymentForStaticSiteBuild(\n      resourceGroupName,\n      name,\n      environmentName,\n      staticSiteZipDeploymentEnvelope,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Creates or updates the app settings of a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param appSettings The dictionary containing the static site app settings to update.\n   * @param options The options parameters.\n   */\n  createOrUpdateStaticSiteAppSettings(\n    resourceGroupName: string,\n    name: string,\n    appSettings: StringDictionary,\n    options?: StaticSitesCreateOrUpdateStaticSiteAppSettingsOptionalParams,\n  ): Promise<StaticSitesCreateOrUpdateStaticSiteAppSettingsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, appSettings, options },\n      createOrUpdateStaticSiteAppSettingsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the basic auth properties for a static site as a collection.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  private _listBasicAuth(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListBasicAuthOptionalParams,\n  ): Promise<StaticSitesListBasicAuthResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listBasicAuthOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the basic auth properties for a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param basicAuthName name of the basic auth entry.\n   * @param options The options parameters.\n   */\n  getBasicAuth(\n    resourceGroupName: string,\n    name: string,\n    basicAuthName: BasicAuthName,\n    options?: StaticSitesGetBasicAuthOptionalParams,\n  ): Promise<StaticSitesGetBasicAuthResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, basicAuthName, options },\n      getBasicAuthOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Adds or updates basic auth for a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param basicAuthName name of the basic auth entry.\n   * @param basicAuthEnvelope A JSON representation of the basic auth properties.\n   * @param options The options parameters.\n   */\n  createOrUpdateBasicAuth(\n    resourceGroupName: string,\n    name: string,\n    basicAuthName: BasicAuthName,\n    basicAuthEnvelope: StaticSiteBasicAuthPropertiesARMResource,\n    options?: StaticSitesCreateOrUpdateBasicAuthOptionalParams,\n  ): Promise<StaticSitesCreateOrUpdateBasicAuthResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, basicAuthName, basicAuthEnvelope, options },\n      createOrUpdateBasicAuthOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates or updates the function app settings of a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param appSettings The dictionary containing the static site function app settings to update.\n   * @param options The options parameters.\n   */\n  createOrUpdateStaticSiteFunctionAppSettings(\n    resourceGroupName: string,\n    name: string,\n    appSettings: StringDictionary,\n    options?: StaticSitesCreateOrUpdateStaticSiteFunctionAppSettingsOptionalParams,\n  ): Promise<StaticSitesCreateOrUpdateStaticSiteFunctionAppSettingsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, appSettings, options },\n      createOrUpdateStaticSiteFunctionAppSettingsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates an invitation link for a user with the role\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param staticSiteUserRolesInvitationEnvelope Static sites user roles invitation resource.\n   * @param options The options parameters.\n   */\n  createUserRolesInvitationLink(\n    resourceGroupName: string,\n    name: string,\n    staticSiteUserRolesInvitationEnvelope: StaticSiteUserInvitationRequestResource,\n    options?: StaticSitesCreateUserRolesInvitationLinkOptionalParams,\n  ): Promise<StaticSitesCreateUserRolesInvitationLinkResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        staticSiteUserRolesInvitationEnvelope,\n        options,\n      },\n      createUserRolesInvitationLinkOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets all static site custom domains for a particular static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site resource to search in.\n   * @param options The options parameters.\n   */\n  private _listStaticSiteCustomDomains(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListStaticSiteCustomDomainsOptionalParams,\n  ): Promise<StaticSitesListStaticSiteCustomDomainsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listStaticSiteCustomDomainsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets an existing custom domain for a particular static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site resource to search in.\n   * @param domainName The custom domain name.\n   * @param options The options parameters.\n   */\n  getStaticSiteCustomDomain(\n    resourceGroupName: string,\n    name: string,\n    domainName: string,\n    options?: StaticSitesGetStaticSiteCustomDomainOptionalParams,\n  ): Promise<StaticSitesGetStaticSiteCustomDomainResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, domainName, options },\n      getStaticSiteCustomDomainOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Creates a new static site custom domain in an existing resource group and static\n   * site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param domainName The custom domain to create.\n   * @param staticSiteCustomDomainRequestPropertiesEnvelope A JSON representation of the static site\n   *                                                        custom domain request properties. See example.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateStaticSiteCustomDomain(\n    resourceGroupName: string,\n    name: string,\n    domainName: string,\n    staticSiteCustomDomainRequestPropertiesEnvelope: StaticSiteCustomDomainRequestPropertiesARMResource,\n    options?: StaticSitesCreateOrUpdateStaticSiteCustomDomainOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<StaticSitesCreateOrUpdateStaticSiteCustomDomainResponse>,\n      StaticSitesCreateOrUpdateStaticSiteCustomDomainResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<StaticSitesCreateOrUpdateStaticSiteCustomDomainResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        name,\n        domainName,\n        staticSiteCustomDomainRequestPropertiesEnvelope,\n        options,\n      },\n      spec: createOrUpdateStaticSiteCustomDomainOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      StaticSitesCreateOrUpdateStaticSiteCustomDomainResponse,\n      OperationState<StaticSitesCreateOrUpdateStaticSiteCustomDomainResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Creates a new static site custom domain in an existing resource group and static\n   * site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param domainName The custom domain to create.\n   * @param staticSiteCustomDomainRequestPropertiesEnvelope A JSON representation of the static site\n   *                                                        custom domain request properties. See example.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateStaticSiteCustomDomainAndWait(\n    resourceGroupName: string,\n    name: string,\n    domainName: string,\n    staticSiteCustomDomainRequestPropertiesEnvelope: StaticSiteCustomDomainRequestPropertiesARMResource,\n    options?: StaticSitesCreateOrUpdateStaticSiteCustomDomainOptionalParams,\n  ): Promise<StaticSitesCreateOrUpdateStaticSiteCustomDomainResponse> {\n    const poller = await this.beginCreateOrUpdateStaticSiteCustomDomain(\n      resourceGroupName,\n      name,\n      domainName,\n      staticSiteCustomDomainRequestPropertiesEnvelope,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Deletes a custom domain.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param domainName The custom domain to delete.\n   * @param options The options parameters.\n   */\n  async beginDeleteStaticSiteCustomDomain(\n    resourceGroupName: string,\n    name: string,\n    domainName: string,\n    options?: StaticSitesDeleteStaticSiteCustomDomainOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, domainName, options },\n      spec: deleteStaticSiteCustomDomainOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Deletes a custom domain.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param domainName The custom domain to delete.\n   * @param options The options parameters.\n   */\n  async beginDeleteStaticSiteCustomDomainAndWait(\n    resourceGroupName: string,\n    name: string,\n    domainName: string,\n    options?: StaticSitesDeleteStaticSiteCustomDomainOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginDeleteStaticSiteCustomDomain(\n      resourceGroupName,\n      name,\n      domainName,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Validates a particular custom domain can be added to a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param domainName The custom domain to validate.\n   * @param staticSiteCustomDomainRequestPropertiesEnvelope A JSON representation of the static site\n   *                                                        custom domain request properties. See example.\n   * @param options The options parameters.\n   */\n  async beginValidateCustomDomainCanBeAddedToStaticSite(\n    resourceGroupName: string,\n    name: string,\n    domainName: string,\n    staticSiteCustomDomainRequestPropertiesEnvelope: StaticSiteCustomDomainRequestPropertiesARMResource,\n    options?: StaticSitesValidateCustomDomainCanBeAddedToStaticSiteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        name,\n        domainName,\n        staticSiteCustomDomainRequestPropertiesEnvelope,\n        options,\n      },\n      spec: validateCustomDomainCanBeAddedToStaticSiteOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Validates a particular custom domain can be added to a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param domainName The custom domain to validate.\n   * @param staticSiteCustomDomainRequestPropertiesEnvelope A JSON representation of the static site\n   *                                                        custom domain request properties. See example.\n   * @param options The options parameters.\n   */\n  async beginValidateCustomDomainCanBeAddedToStaticSiteAndWait(\n    resourceGroupName: string,\n    name: string,\n    domainName: string,\n    staticSiteCustomDomainRequestPropertiesEnvelope: StaticSiteCustomDomainRequestPropertiesARMResource,\n    options?: StaticSitesValidateCustomDomainCanBeAddedToStaticSiteOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginValidateCustomDomainCanBeAddedToStaticSite(\n      resourceGroupName,\n      name,\n      domainName,\n      staticSiteCustomDomainRequestPropertiesEnvelope,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Returns overviews of database connections for a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param options The options parameters.\n   */\n  private _getDatabaseConnections(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetDatabaseConnectionsOptionalParams,\n  ): Promise<StaticSitesGetDatabaseConnectionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getDatabaseConnectionsOperationSpec,\n    );\n  }\n\n  /**\n   * Returns overview of a database connection for a static site by name\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param databaseConnectionName Name of the database connection.\n   * @param options The options parameters.\n   */\n  getDatabaseConnection(\n    resourceGroupName: string,\n    name: string,\n    databaseConnectionName: string,\n    options?: StaticSitesGetDatabaseConnectionOptionalParams,\n  ): Promise<StaticSitesGetDatabaseConnectionResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, databaseConnectionName, options },\n      getDatabaseConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Create or update a database connection for a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param databaseConnectionName Name of the database connection.\n   * @param databaseConnectionRequestEnvelope A JSON representation of the database connection request\n   *                                          properties\n   * @param options The options parameters.\n   */\n  createOrUpdateDatabaseConnection(\n    resourceGroupName: string,\n    name: string,\n    databaseConnectionName: string,\n    databaseConnectionRequestEnvelope: DatabaseConnection,\n    options?: StaticSitesCreateOrUpdateDatabaseConnectionOptionalParams,\n  ): Promise<StaticSitesCreateOrUpdateDatabaseConnectionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        databaseConnectionName,\n        databaseConnectionRequestEnvelope,\n        options,\n      },\n      createOrUpdateDatabaseConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Delete a database connection for a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param databaseConnectionName Name of the database connection.\n   * @param options The options parameters.\n   */\n  deleteDatabaseConnection(\n    resourceGroupName: string,\n    name: string,\n    databaseConnectionName: string,\n    options?: StaticSitesDeleteDatabaseConnectionOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, databaseConnectionName, options },\n      deleteDatabaseConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Create or update a database connection for a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param databaseConnectionName Name of the database connection.\n   * @param databaseConnectionRequestEnvelope A JSON representation of the database connection request\n   *                                          properties\n   * @param options The options parameters.\n   */\n  updateDatabaseConnection(\n    resourceGroupName: string,\n    name: string,\n    databaseConnectionName: string,\n    databaseConnectionRequestEnvelope: DatabaseConnectionPatchRequest,\n    options?: StaticSitesUpdateDatabaseConnectionOptionalParams,\n  ): Promise<StaticSitesUpdateDatabaseConnectionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        databaseConnectionName,\n        databaseConnectionRequestEnvelope,\n        options,\n      },\n      updateDatabaseConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Returns details of a database connection for a static site by name\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param databaseConnectionName Name of the database connection.\n   * @param options The options parameters.\n   */\n  getDatabaseConnectionWithDetails(\n    resourceGroupName: string,\n    name: string,\n    databaseConnectionName: string,\n    options?: StaticSitesGetDatabaseConnectionWithDetailsOptionalParams,\n  ): Promise<StaticSitesGetDatabaseConnectionWithDetailsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, databaseConnectionName, options },\n      getDatabaseConnectionWithDetailsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Detaches a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site to detach.\n   * @param options The options parameters.\n   */\n  async beginDetachStaticSite(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesDetachStaticSiteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, options },\n      spec: detachStaticSiteOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Detaches a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site to detach.\n   * @param options The options parameters.\n   */\n  async beginDetachStaticSiteAndWait(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesDetachStaticSiteOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginDetachStaticSite(\n      resourceGroupName,\n      name,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Gets the functions of a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  private _listStaticSiteFunctions(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListStaticSiteFunctionsOptionalParams,\n  ): Promise<StaticSitesListStaticSiteFunctionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listStaticSiteFunctionsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the application settings of a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  listStaticSiteAppSettings(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListStaticSiteAppSettingsOptionalParams,\n  ): Promise<StaticSitesListStaticSiteAppSettingsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listStaticSiteAppSettingsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Lists the roles configured for the static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  listStaticSiteConfiguredRoles(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListStaticSiteConfiguredRolesOptionalParams,\n  ): Promise<StaticSitesListStaticSiteConfiguredRolesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listStaticSiteConfiguredRolesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the application settings of a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  listStaticSiteFunctionAppSettings(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListStaticSiteFunctionAppSettingsOptionalParams,\n  ): Promise<StaticSitesListStaticSiteFunctionAppSettingsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listStaticSiteFunctionAppSettingsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Lists the secrets for an existing static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  listStaticSiteSecrets(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesListStaticSiteSecretsOptionalParams,\n  ): Promise<StaticSitesListStaticSiteSecretsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listStaticSiteSecretsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the list of private endpoint connections associated with a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  private _getPrivateEndpointConnectionList(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetPrivateEndpointConnectionListOptionalParams,\n  ): Promise<StaticSitesGetPrivateEndpointConnectionListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getPrivateEndpointConnectionListOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param privateEndpointConnectionName Name of the private endpoint connection.\n   * @param options The options parameters.\n   */\n  getPrivateEndpointConnection(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    options?: StaticSitesGetPrivateEndpointConnectionOptionalParams,\n  ): Promise<StaticSitesGetPrivateEndpointConnectionResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, privateEndpointConnectionName, options },\n      getPrivateEndpointConnectionOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Approves or rejects a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param privateEndpointConnectionName Name of the private endpoint connection.\n   * @param privateEndpointWrapper Request body.\n   * @param options The options parameters.\n   */\n  async beginApproveOrRejectPrivateEndpointConnection(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    privateEndpointWrapper: RemotePrivateEndpointConnectionARMResource,\n    options?: StaticSitesApproveOrRejectPrivateEndpointConnectionOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<StaticSitesApproveOrRejectPrivateEndpointConnectionResponse>,\n      StaticSitesApproveOrRejectPrivateEndpointConnectionResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<StaticSitesApproveOrRejectPrivateEndpointConnectionResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        name,\n        privateEndpointConnectionName,\n        privateEndpointWrapper,\n        options,\n      },\n      spec: approveOrRejectPrivateEndpointConnectionOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      StaticSitesApproveOrRejectPrivateEndpointConnectionResponse,\n      OperationState<StaticSitesApproveOrRejectPrivateEndpointConnectionResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Approves or rejects a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param privateEndpointConnectionName Name of the private endpoint connection.\n   * @param privateEndpointWrapper Request body.\n   * @param options The options parameters.\n   */\n  async beginApproveOrRejectPrivateEndpointConnectionAndWait(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    privateEndpointWrapper: RemotePrivateEndpointConnectionARMResource,\n    options?: StaticSitesApproveOrRejectPrivateEndpointConnectionOptionalParams,\n  ): Promise<StaticSitesApproveOrRejectPrivateEndpointConnectionResponse> {\n    const poller = await this.beginApproveOrRejectPrivateEndpointConnection(\n      resourceGroupName,\n      name,\n      privateEndpointConnectionName,\n      privateEndpointWrapper,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Deletes a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param privateEndpointConnectionName Name of the private endpoint connection.\n   * @param options The options parameters.\n   */\n  async beginDeletePrivateEndpointConnection(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    options?: StaticSitesDeletePrivateEndpointConnectionOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<StaticSitesDeletePrivateEndpointConnectionResponse>,\n      StaticSitesDeletePrivateEndpointConnectionResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<StaticSitesDeletePrivateEndpointConnectionResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, name, privateEndpointConnectionName, options },\n      spec: deletePrivateEndpointConnectionOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      StaticSitesDeletePrivateEndpointConnectionResponse,\n      OperationState<StaticSitesDeletePrivateEndpointConnectionResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Deletes a private endpoint connection\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param privateEndpointConnectionName Name of the private endpoint connection.\n   * @param options The options parameters.\n   */\n  async beginDeletePrivateEndpointConnectionAndWait(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    options?: StaticSitesDeletePrivateEndpointConnectionOptionalParams,\n  ): Promise<StaticSitesDeletePrivateEndpointConnectionResponse> {\n    const poller = await this.beginDeletePrivateEndpointConnection(\n      resourceGroupName,\n      name,\n      privateEndpointConnectionName,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Gets the private link resources\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the site.\n   * @param options The options parameters.\n   */\n  getPrivateLinkResources(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetPrivateLinkResourcesOptionalParams,\n  ): Promise<StaticSitesGetPrivateLinkResourcesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getPrivateLinkResourcesOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Resets the api key for an existing static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param resetPropertiesEnvelope Static Site Reset Properties ARM resource.\n   * @param options The options parameters.\n   */\n  resetStaticSiteApiKey(\n    resourceGroupName: string,\n    name: string,\n    resetPropertiesEnvelope: StaticSiteResetPropertiesARMResource,\n    options?: StaticSitesResetStaticSiteApiKeyOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, resetPropertiesEnvelope, options },\n      resetStaticSiteApiKeyOperationSpec,\n    );\n  }\n\n  /**\n   * Returns details of database connections for a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param options The options parameters.\n   */\n  private _getDatabaseConnectionsWithDetails(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetDatabaseConnectionsWithDetailsOptionalParams,\n  ): Promise<StaticSitesGetDatabaseConnectionsWithDetailsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getDatabaseConnectionsWithDetailsOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the details of the user provided function apps registered with a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param options The options parameters.\n   */\n  private _getUserProvidedFunctionAppsForStaticSite(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetUserProvidedFunctionAppsForStaticSiteOptionalParams,\n  ): Promise<StaticSitesGetUserProvidedFunctionAppsForStaticSiteResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getUserProvidedFunctionAppsForStaticSiteOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Gets the details of the user provided function app registered with a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param functionAppName Name of the function app registered with the static site.\n   * @param options The options parameters.\n   */\n  getUserProvidedFunctionAppForStaticSite(\n    resourceGroupName: string,\n    name: string,\n    functionAppName: string,\n    options?: StaticSitesGetUserProvidedFunctionAppForStaticSiteOptionalParams,\n  ): Promise<StaticSitesGetUserProvidedFunctionAppForStaticSiteResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, functionAppName, options },\n      getUserProvidedFunctionAppForStaticSiteOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Register a user provided function app with a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param functionAppName Name of the function app to register with the static site.\n   * @param staticSiteUserProvidedFunctionEnvelope A JSON representation of the user provided function\n   *                                               app properties. See example.\n   * @param options The options parameters.\n   */\n  async beginRegisterUserProvidedFunctionAppWithStaticSite(\n    resourceGroupName: string,\n    name: string,\n    functionAppName: string,\n    staticSiteUserProvidedFunctionEnvelope: StaticSiteUserProvidedFunctionAppARMResource,\n    options?: StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteResponse>,\n      StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        name,\n        functionAppName,\n        staticSiteUserProvidedFunctionEnvelope,\n        options,\n      },\n      spec: registerUserProvidedFunctionAppWithStaticSiteOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteResponse,\n      OperationState<StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Register a user provided function app with a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param functionAppName Name of the function app to register with the static site.\n   * @param staticSiteUserProvidedFunctionEnvelope A JSON representation of the user provided function\n   *                                               app properties. See example.\n   * @param options The options parameters.\n   */\n  async beginRegisterUserProvidedFunctionAppWithStaticSiteAndWait(\n    resourceGroupName: string,\n    name: string,\n    functionAppName: string,\n    staticSiteUserProvidedFunctionEnvelope: StaticSiteUserProvidedFunctionAppARMResource,\n    options?: StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteOptionalParams,\n  ): Promise<StaticSitesRegisterUserProvidedFunctionAppWithStaticSiteResponse> {\n    const poller =\n      await this.beginRegisterUserProvidedFunctionAppWithStaticSite(\n        resourceGroupName,\n        name,\n        functionAppName,\n        staticSiteUserProvidedFunctionEnvelope,\n        options,\n      );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Description for Detach the user provided function app from the static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param functionAppName Name of the function app registered with the static site.\n   * @param options The options parameters.\n   */\n  detachUserProvidedFunctionAppFromStaticSite(\n    resourceGroupName: string,\n    name: string,\n    functionAppName: string,\n    options?: StaticSitesDetachUserProvidedFunctionAppFromStaticSiteOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, functionAppName, options },\n      detachUserProvidedFunctionAppFromStaticSiteOperationSpec,\n    );\n  }\n\n  /**\n   * Description for Deploys zipped content to a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param staticSiteZipDeploymentEnvelope A JSON representation of the StaticSiteZipDeployment\n   *                                        properties. See example.\n   * @param options The options parameters.\n   */\n  async beginCreateZipDeploymentForStaticSite(\n    resourceGroupName: string,\n    name: string,\n    staticSiteZipDeploymentEnvelope: StaticSiteZipDeploymentARMResource,\n    options?: StaticSitesCreateZipDeploymentForStaticSiteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        name,\n        staticSiteZipDeploymentEnvelope,\n        options,\n      },\n      spec: createZipDeploymentForStaticSiteOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Description for Deploys zipped content to a static site.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param staticSiteZipDeploymentEnvelope A JSON representation of the StaticSiteZipDeployment\n   *                                        properties. See example.\n   * @param options The options parameters.\n   */\n  async beginCreateZipDeploymentForStaticSiteAndWait(\n    resourceGroupName: string,\n    name: string,\n    staticSiteZipDeploymentEnvelope: StaticSiteZipDeploymentARMResource,\n    options?: StaticSitesCreateZipDeploymentForStaticSiteOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginCreateZipDeploymentForStaticSite(\n      resourceGroupName,\n      name,\n      staticSiteZipDeploymentEnvelope,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Validates that a backend can be linked to a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param linkedBackendName Name of the linked backend that should be retrieved\n   * @param staticSiteLinkedBackendEnvelope A JSON representation of the linked backend request\n   *                                        properties\n   * @param options The options parameters.\n   */\n  async beginValidateBackend(\n    resourceGroupName: string,\n    name: string,\n    linkedBackendName: string,\n    staticSiteLinkedBackendEnvelope: StaticSiteLinkedBackendARMResource,\n    options?: StaticSitesValidateBackendOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        name,\n        linkedBackendName,\n        staticSiteLinkedBackendEnvelope,\n        options,\n      },\n      spec: validateBackendOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Validates that a backend can be linked to a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param linkedBackendName Name of the linked backend that should be retrieved\n   * @param staticSiteLinkedBackendEnvelope A JSON representation of the linked backend request\n   *                                        properties\n   * @param options The options parameters.\n   */\n  async beginValidateBackendAndWait(\n    resourceGroupName: string,\n    name: string,\n    linkedBackendName: string,\n    staticSiteLinkedBackendEnvelope: StaticSiteLinkedBackendARMResource,\n    options?: StaticSitesValidateBackendOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginValidateBackend(\n      resourceGroupName,\n      name,\n      linkedBackendName,\n      staticSiteLinkedBackendEnvelope,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Validates that a backend can be linked to a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier\n   * @param linkedBackendName Name of the linked backend that should be retrieved\n   * @param staticSiteLinkedBackendEnvelope A JSON representation of the linked backend request\n   *                                        properties\n   * @param options The options parameters.\n   */\n  async beginValidateBackendForBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    linkedBackendName: string,\n    staticSiteLinkedBackendEnvelope: StaticSiteLinkedBackendARMResource,\n    options?: StaticSitesValidateBackendForBuildOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        name,\n        environmentName,\n        linkedBackendName,\n        staticSiteLinkedBackendEnvelope,\n        options,\n      },\n      spec: validateBackendForBuildOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Validates that a backend can be linked to a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier\n   * @param linkedBackendName Name of the linked backend that should be retrieved\n   * @param staticSiteLinkedBackendEnvelope A JSON representation of the linked backend request\n   *                                        properties\n   * @param options The options parameters.\n   */\n  async beginValidateBackendForBuildAndWait(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    linkedBackendName: string,\n    staticSiteLinkedBackendEnvelope: StaticSiteLinkedBackendARMResource,\n    options?: StaticSitesValidateBackendForBuildOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginValidateBackendForBuild(\n      resourceGroupName,\n      name,\n      environmentName,\n      linkedBackendName,\n      staticSiteLinkedBackendEnvelope,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Returns details of all backends linked to a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param options The options parameters.\n   */\n  private _getLinkedBackends(\n    resourceGroupName: string,\n    name: string,\n    options?: StaticSitesGetLinkedBackendsOptionalParams,\n  ): Promise<StaticSitesGetLinkedBackendsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getLinkedBackendsOperationSpec,\n    );\n  }\n\n  /**\n   * Returns details of all backends linked to a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier\n   * @param options The options parameters.\n   */\n  private _getLinkedBackendsForBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    options?: StaticSitesGetLinkedBackendsForBuildOptionalParams,\n  ): Promise<StaticSitesGetLinkedBackendsForBuildResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, environmentName, options },\n      getLinkedBackendsForBuildOperationSpec,\n    );\n  }\n\n  /**\n   * Returns the details of a linked backend linked to a static site by name\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param linkedBackendName Name of the linked backend that should be retrieved\n   * @param options The options parameters.\n   */\n  getLinkedBackend(\n    resourceGroupName: string,\n    name: string,\n    linkedBackendName: string,\n    options?: StaticSitesGetLinkedBackendOptionalParams,\n  ): Promise<StaticSitesGetLinkedBackendResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, linkedBackendName, options },\n      getLinkedBackendOperationSpec,\n    );\n  }\n\n  /**\n   * Link backend to a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param linkedBackendName Name of the backend to link to the static site\n   * @param staticSiteLinkedBackendEnvelope A JSON representation of the linked backend request\n   *                                        properties\n   * @param options The options parameters.\n   */\n  async beginLinkBackend(\n    resourceGroupName: string,\n    name: string,\n    linkedBackendName: string,\n    staticSiteLinkedBackendEnvelope: StaticSiteLinkedBackendARMResource,\n    options?: StaticSitesLinkBackendOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<StaticSitesLinkBackendResponse>,\n      StaticSitesLinkBackendResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<StaticSitesLinkBackendResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        name,\n        linkedBackendName,\n        staticSiteLinkedBackendEnvelope,\n        options,\n      },\n      spec: linkBackendOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      StaticSitesLinkBackendResponse,\n      OperationState<StaticSitesLinkBackendResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Link backend to a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param linkedBackendName Name of the backend to link to the static site\n   * @param staticSiteLinkedBackendEnvelope A JSON representation of the linked backend request\n   *                                        properties\n   * @param options The options parameters.\n   */\n  async beginLinkBackendAndWait(\n    resourceGroupName: string,\n    name: string,\n    linkedBackendName: string,\n    staticSiteLinkedBackendEnvelope: StaticSiteLinkedBackendARMResource,\n    options?: StaticSitesLinkBackendOptionalParams,\n  ): Promise<StaticSitesLinkBackendResponse> {\n    const poller = await this.beginLinkBackend(\n      resourceGroupName,\n      name,\n      linkedBackendName,\n      staticSiteLinkedBackendEnvelope,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Unlink a backend from a static site\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param linkedBackendName Name of the backend linked to the static site\n   * @param options The options parameters.\n   */\n  unlinkBackend(\n    resourceGroupName: string,\n    name: string,\n    linkedBackendName: string,\n    options?: StaticSitesUnlinkBackendOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, linkedBackendName, options },\n      unlinkBackendOperationSpec,\n    );\n  }\n\n  /**\n   * Returns the details of a linked backend linked to a static site build by name\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier\n   * @param linkedBackendName Name of the linked backend that should be retrieved\n   * @param options The options parameters.\n   */\n  getLinkedBackendForBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    linkedBackendName: string,\n    options?: StaticSitesGetLinkedBackendForBuildOptionalParams,\n  ): Promise<StaticSitesGetLinkedBackendForBuildResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, environmentName, linkedBackendName, options },\n      getLinkedBackendForBuildOperationSpec,\n    );\n  }\n\n  /**\n   * Link backend to a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier\n   * @param linkedBackendName Name of the backend to link to the static site\n   * @param staticSiteLinkedBackendEnvelope A JSON representation of the linked backend request\n   *                                        properties\n   * @param options The options parameters.\n   */\n  async beginLinkBackendToBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    linkedBackendName: string,\n    staticSiteLinkedBackendEnvelope: StaticSiteLinkedBackendARMResource,\n    options?: StaticSitesLinkBackendToBuildOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<StaticSitesLinkBackendToBuildResponse>,\n      StaticSitesLinkBackendToBuildResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<StaticSitesLinkBackendToBuildResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        name,\n        environmentName,\n        linkedBackendName,\n        staticSiteLinkedBackendEnvelope,\n        options,\n      },\n      spec: linkBackendToBuildOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      StaticSitesLinkBackendToBuildResponse,\n      OperationState<StaticSitesLinkBackendToBuildResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Link backend to a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier\n   * @param linkedBackendName Name of the backend to link to the static site\n   * @param staticSiteLinkedBackendEnvelope A JSON representation of the linked backend request\n   *                                        properties\n   * @param options The options parameters.\n   */\n  async beginLinkBackendToBuildAndWait(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    linkedBackendName: string,\n    staticSiteLinkedBackendEnvelope: StaticSiteLinkedBackendARMResource,\n    options?: StaticSitesLinkBackendToBuildOptionalParams,\n  ): Promise<StaticSitesLinkBackendToBuildResponse> {\n    const poller = await this.beginLinkBackendToBuild(\n      resourceGroupName,\n      name,\n      environmentName,\n      linkedBackendName,\n      staticSiteLinkedBackendEnvelope,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Unlink a backend from a static site build\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier\n   * @param linkedBackendName Name of the backend linked to the static site\n   * @param options The options parameters.\n   */\n  unlinkBackendFromBuild(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    linkedBackendName: string,\n    options?: StaticSitesUnlinkBackendFromBuildOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, environmentName, linkedBackendName, options },\n      unlinkBackendFromBuildOperationSpec,\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: StaticSitesListNextOptionalParams,\n  ): Promise<StaticSitesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetStaticSitesByResourceGroupNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param nextLink The nextLink from the previous successful call to the GetStaticSitesByResourceGroup\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _getStaticSitesByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: StaticSitesGetStaticSitesByResourceGroupNextOptionalParams,\n  ): Promise<StaticSitesGetStaticSitesByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      getStaticSitesByResourceGroupNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListStaticSiteUsersNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param authprovider The auth provider for the users.\n   * @param nextLink The nextLink from the previous successful call to the ListStaticSiteUsers method.\n   * @param options The options parameters.\n   */\n  private _listStaticSiteUsersNext(\n    resourceGroupName: string,\n    name: string,\n    authprovider: string,\n    nextLink: string,\n    options?: StaticSitesListStaticSiteUsersNextOptionalParams,\n  ): Promise<StaticSitesListStaticSiteUsersNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, authprovider, nextLink, options },\n      listStaticSiteUsersNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetStaticSiteBuildsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param nextLink The nextLink from the previous successful call to the GetStaticSiteBuilds method.\n   * @param options The options parameters.\n   */\n  private _getStaticSiteBuildsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: StaticSitesGetStaticSiteBuildsNextOptionalParams,\n  ): Promise<StaticSitesGetStaticSiteBuildsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      getStaticSiteBuildsNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetBuildDatabaseConnectionsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier.\n   * @param nextLink The nextLink from the previous successful call to the GetBuildDatabaseConnections\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _getBuildDatabaseConnectionsNext(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    nextLink: string,\n    options?: StaticSitesGetBuildDatabaseConnectionsNextOptionalParams,\n  ): Promise<StaticSitesGetBuildDatabaseConnectionsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, environmentName, nextLink, options },\n      getBuildDatabaseConnectionsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListStaticSiteBuildFunctionsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param nextLink The nextLink from the previous successful call to the ListStaticSiteBuildFunctions\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listStaticSiteBuildFunctionsNext(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    nextLink: string,\n    options?: StaticSitesListStaticSiteBuildFunctionsNextOptionalParams,\n  ): Promise<StaticSitesListStaticSiteBuildFunctionsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, environmentName, nextLink, options },\n      listStaticSiteBuildFunctionsNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetBuildDatabaseConnectionsWithDetailsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 GetBuildDatabaseConnectionsWithDetails method.\n   * @param options The options parameters.\n   */\n  private _getBuildDatabaseConnectionsWithDetailsNext(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    nextLink: string,\n    options?: StaticSitesGetBuildDatabaseConnectionsWithDetailsNextOptionalParams,\n  ): Promise<StaticSitesGetBuildDatabaseConnectionsWithDetailsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, environmentName, nextLink, options },\n      getBuildDatabaseConnectionsWithDetailsNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetUserProvidedFunctionAppsForStaticSiteBuildNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param environmentName The stage site identifier.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 GetUserProvidedFunctionAppsForStaticSiteBuild method.\n   * @param options The options parameters.\n   */\n  private _getUserProvidedFunctionAppsForStaticSiteBuildNext(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    nextLink: string,\n    options?: StaticSitesGetUserProvidedFunctionAppsForStaticSiteBuildNextOptionalParams,\n  ): Promise<StaticSitesGetUserProvidedFunctionAppsForStaticSiteBuildNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, environmentName, nextLink, options },\n      getUserProvidedFunctionAppsForStaticSiteBuildNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListBasicAuthNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param nextLink The nextLink from the previous successful call to the ListBasicAuth method.\n   * @param options The options parameters.\n   */\n  private _listBasicAuthNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: StaticSitesListBasicAuthNextOptionalParams,\n  ): Promise<StaticSitesListBasicAuthNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listBasicAuthNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListStaticSiteCustomDomainsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site resource to search in.\n   * @param nextLink The nextLink from the previous successful call to the ListStaticSiteCustomDomains\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listStaticSiteCustomDomainsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: StaticSitesListStaticSiteCustomDomainsNextOptionalParams,\n  ): Promise<StaticSitesListStaticSiteCustomDomainsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listStaticSiteCustomDomainsNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetDatabaseConnectionsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param nextLink The nextLink from the previous successful call to the GetDatabaseConnections method.\n   * @param options The options parameters.\n   */\n  private _getDatabaseConnectionsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: StaticSitesGetDatabaseConnectionsNextOptionalParams,\n  ): Promise<StaticSitesGetDatabaseConnectionsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      getDatabaseConnectionsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListStaticSiteFunctionsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param nextLink The nextLink from the previous successful call to the ListStaticSiteFunctions\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listStaticSiteFunctionsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: StaticSitesListStaticSiteFunctionsNextOptionalParams,\n  ): Promise<StaticSitesListStaticSiteFunctionsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listStaticSiteFunctionsNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetPrivateEndpointConnectionListNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 GetPrivateEndpointConnectionList method.\n   * @param options The options parameters.\n   */\n  private _getPrivateEndpointConnectionListNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: StaticSitesGetPrivateEndpointConnectionListNextOptionalParams,\n  ): Promise<StaticSitesGetPrivateEndpointConnectionListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      getPrivateEndpointConnectionListNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetDatabaseConnectionsWithDetailsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 GetDatabaseConnectionsWithDetails method.\n   * @param options The options parameters.\n   */\n  private _getDatabaseConnectionsWithDetailsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: StaticSitesGetDatabaseConnectionsWithDetailsNextOptionalParams,\n  ): Promise<StaticSitesGetDatabaseConnectionsWithDetailsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      getDatabaseConnectionsWithDetailsNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetUserProvidedFunctionAppsForStaticSiteNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 GetUserProvidedFunctionAppsForStaticSite method.\n   * @param options The options parameters.\n   */\n  private _getUserProvidedFunctionAppsForStaticSiteNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: StaticSitesGetUserProvidedFunctionAppsForStaticSiteNextOptionalParams,\n  ): Promise<StaticSitesGetUserProvidedFunctionAppsForStaticSiteNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      getUserProvidedFunctionAppsForStaticSiteNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetLinkedBackendsNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param nextLink The nextLink from the previous successful call to the GetLinkedBackends method.\n   * @param options The options parameters.\n   */\n  private _getLinkedBackendsNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: StaticSitesGetLinkedBackendsNextOptionalParams,\n  ): Promise<StaticSitesGetLinkedBackendsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      getLinkedBackendsNextOperationSpec,\n    );\n  }\n\n  /**\n   * GetLinkedBackendsForBuildNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the static site\n   * @param environmentName The stage site identifier\n   * @param nextLink The nextLink from the previous successful call to the GetLinkedBackendsForBuild\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _getLinkedBackendsForBuildNext(\n    resourceGroupName: string,\n    name: string,\n    environmentName: string,\n    nextLink: string,\n    options?: StaticSitesGetLinkedBackendsForBuildNextOptionalParams,\n  ): Promise<StaticSitesGetLinkedBackendsForBuildNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, environmentName, nextLink, options },\n      getLinkedBackendsForBuildNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst previewWorkflowOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/previewStaticSiteWorkflowFile\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSitesWorkflowPreview,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.staticSitesWorkflowPreviewRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Web/staticSites\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getStaticSitesByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getStaticSiteOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteARMResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateStaticSiteOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteARMResource,\n    },\n    201: {\n      bodyMapper: Mappers.StaticSiteARMResource,\n    },\n    202: {\n      bodyMapper: Mappers.StaticSiteARMResource,\n    },\n    204: {\n      bodyMapper: Mappers.StaticSiteARMResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.staticSiteEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteStaticSiteOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateStaticSiteOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteARMResource,\n    },\n    202: {\n      bodyMapper: Mappers.StaticSiteARMResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.staticSiteEnvelope1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listStaticSiteUsersOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/authproviders/{authprovider}/listUsers\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteUserCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.authprovider,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteStaticSiteUserOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/authproviders/{authprovider}/users/{userid}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.authprovider,\n    Parameters.userid,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateStaticSiteUserOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/authproviders/{authprovider}/users/{userid}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteUserARMResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.staticSiteUserEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.authprovider,\n    Parameters.userid,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getStaticSiteBuildsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteBuildCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getStaticSiteBuildOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteBuildARMResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.environmentName1,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst deleteStaticSiteBuildOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.environmentName1,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateStaticSiteBuildAppSettingsOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/config/appsettings\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.StringDictionary,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.appSettings,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.environmentName1,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst createOrUpdateStaticSiteBuildFunctionAppSettingsOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/config/functionappsettings\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.StringDictionary,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.appSettings,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.environmentName1,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst getBuildDatabaseConnectionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/databaseConnections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseConnectionCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.environmentName2,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getBuildDatabaseConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/databaseConnections/{databaseConnectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseConnection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.environmentName2,\n    Parameters.databaseConnectionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateBuildDatabaseConnectionOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/databaseConnections/{databaseConnectionName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.DatabaseConnection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.databaseConnectionRequestEnvelope,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.environmentName2,\n      Parameters.databaseConnectionName,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst deleteBuildDatabaseConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/databaseConnections/{databaseConnectionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.environmentName2,\n    Parameters.databaseConnectionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateBuildDatabaseConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/databaseConnections/{databaseConnectionName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseConnection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.databaseConnectionRequestEnvelope1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.environmentName2,\n    Parameters.databaseConnectionName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getBuildDatabaseConnectionWithDetailsOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/databaseConnections/{databaseConnectionName}/show\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.DatabaseConnection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.environmentName2,\n      Parameters.databaseConnectionName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listStaticSiteBuildFunctionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/functions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteFunctionOverviewCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.environmentName1,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listStaticSiteBuildAppSettingsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/listAppSettings\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StringDictionary,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.environmentName1,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listStaticSiteBuildFunctionAppSettingsOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/listFunctionAppSettings\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.StringDictionary,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.environmentName1,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getBuildDatabaseConnectionsWithDetailsOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/showDatabaseConnections\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.DatabaseConnectionCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.environmentName2,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getUserProvidedFunctionAppsForStaticSiteBuildOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/userProvidedFunctionApps\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.StaticSiteUserProvidedFunctionAppsCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.environmentName1,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getUserProvidedFunctionAppForStaticSiteBuildOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/userProvidedFunctionApps/{functionAppName}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.StaticSiteUserProvidedFunctionAppARMResource,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.environmentName1,\n      Parameters.functionAppName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst registerUserProvidedFunctionAppWithStaticSiteBuildOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/userProvidedFunctionApps/{functionAppName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.StaticSiteUserProvidedFunctionAppARMResource,\n      },\n      201: {\n        bodyMapper: Mappers.StaticSiteUserProvidedFunctionAppARMResource,\n      },\n      202: {\n        bodyMapper: Mappers.StaticSiteUserProvidedFunctionAppARMResource,\n      },\n      204: {\n        bodyMapper: Mappers.StaticSiteUserProvidedFunctionAppARMResource,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.staticSiteUserProvidedFunctionEnvelope,\n    queryParameters: [Parameters.apiVersion, Parameters.isForced],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.environmentName1,\n      Parameters.functionAppName,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst detachUserProvidedFunctionAppFromStaticSiteBuildOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/userProvidedFunctionApps/{functionAppName}\",\n    httpMethod: \"DELETE\",\n    responses: {\n      200: {},\n      204: {},\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.environmentName1,\n      Parameters.functionAppName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst createZipDeploymentForStaticSiteBuildOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/zipdeploy\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {},\n      201: {},\n      202: {},\n      204: {},\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.staticSiteZipDeploymentEnvelope,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.environmentName1,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst createOrUpdateStaticSiteAppSettingsOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/config/appsettings\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.StringDictionary,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.appSettings,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst listBasicAuthOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/basicAuth\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteBasicAuthPropertiesCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getBasicAuthOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/basicAuth/{basicAuthName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteBasicAuthPropertiesARMResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.basicAuthName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateBasicAuthOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/basicAuth/{basicAuthName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteBasicAuthPropertiesARMResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.basicAuthEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.basicAuthName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst createOrUpdateStaticSiteFunctionAppSettingsOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/config/functionappsettings\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.StringDictionary,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.appSettings,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst createUserRolesInvitationLinkOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/createUserInvitation\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteUserInvitationResponseResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.staticSiteUserRolesInvitationEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst listStaticSiteCustomDomainsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/customDomains\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteCustomDomainOverviewCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getStaticSiteCustomDomainOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/customDomains/{domainName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteCustomDomainOverviewARMResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.domainName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateStaticSiteCustomDomainOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/customDomains/{domainName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.StaticSiteCustomDomainOverviewARMResource,\n      },\n      201: {\n        bodyMapper: Mappers.StaticSiteCustomDomainOverviewARMResource,\n      },\n      202: {\n        bodyMapper: Mappers.StaticSiteCustomDomainOverviewARMResource,\n      },\n      204: {\n        bodyMapper: Mappers.StaticSiteCustomDomainOverviewARMResource,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.staticSiteCustomDomainRequestPropertiesEnvelope,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.domainName,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst deleteStaticSiteCustomDomainOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/customDomains/{domainName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.domainName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst validateCustomDomainCanBeAddedToStaticSiteOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/customDomains/{domainName}/validate\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {},\n      201: {},\n      202: {},\n      204: {},\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.staticSiteCustomDomainRequestPropertiesEnvelope,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.domainName,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst getDatabaseConnectionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/databaseConnections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseConnectionCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDatabaseConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/databaseConnections/{databaseConnectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseConnection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.databaseConnectionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateDatabaseConnectionOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/databaseConnections/{databaseConnectionName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.DatabaseConnection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.databaseConnectionRequestEnvelope,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.databaseConnectionName,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst deleteDatabaseConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/databaseConnections/{databaseConnectionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.databaseConnectionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst updateDatabaseConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/databaseConnections/{databaseConnectionName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseConnection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.databaseConnectionRequestEnvelope1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.databaseConnectionName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getDatabaseConnectionWithDetailsOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/databaseConnections/{databaseConnectionName}/show\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.DatabaseConnection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.databaseConnectionName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst detachStaticSiteOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/detach\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listStaticSiteFunctionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/functions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteFunctionOverviewCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listStaticSiteAppSettingsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/listAppSettings\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StringDictionary,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listStaticSiteConfiguredRolesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/listConfiguredRoles\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StringList,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listStaticSiteFunctionAppSettingsOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/listFunctionAppSettings\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.StringDictionary,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listStaticSiteSecretsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/listSecrets\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StringDictionary,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getPrivateEndpointConnectionListOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/privateEndpointConnections\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PrivateEndpointConnectionCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getPrivateEndpointConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemotePrivateEndpointConnectionARMResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.privateEndpointConnectionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst approveOrRejectPrivateEndpointConnectionOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/privateEndpointConnections/{privateEndpointConnectionName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.RemotePrivateEndpointConnectionARMResource,\n      },\n      201: {\n        bodyMapper: Mappers.RemotePrivateEndpointConnectionARMResource,\n      },\n      202: {\n        bodyMapper: Mappers.RemotePrivateEndpointConnectionARMResource,\n      },\n      204: {\n        bodyMapper: Mappers.RemotePrivateEndpointConnectionARMResource,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.privateEndpointWrapper,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.privateEndpointConnectionName,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst deletePrivateEndpointConnectionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n      },\n    },\n    201: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n      },\n    },\n    202: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n      },\n    },\n    204: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.privateEndpointConnectionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getPrivateLinkResourcesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/privateLinkResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResourcesWrapper,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst resetStaticSiteApiKeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/resetapikey\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.resetPropertiesEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getDatabaseConnectionsWithDetailsOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/showDatabaseConnections\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.DatabaseConnectionCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getUserProvidedFunctionAppsForStaticSiteOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/userProvidedFunctionApps\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.StaticSiteUserProvidedFunctionAppsCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getUserProvidedFunctionAppForStaticSiteOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/userProvidedFunctionApps/{functionAppName}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.StaticSiteUserProvidedFunctionAppARMResource,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.functionAppName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst registerUserProvidedFunctionAppWithStaticSiteOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/userProvidedFunctionApps/{functionAppName}\",\n    httpMethod: \"PUT\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.StaticSiteUserProvidedFunctionAppARMResource,\n      },\n      201: {\n        bodyMapper: Mappers.StaticSiteUserProvidedFunctionAppARMResource,\n      },\n      202: {\n        bodyMapper: Mappers.StaticSiteUserProvidedFunctionAppARMResource,\n      },\n      204: {\n        bodyMapper: Mappers.StaticSiteUserProvidedFunctionAppARMResource,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.staticSiteUserProvidedFunctionEnvelope,\n    queryParameters: [Parameters.apiVersion, Parameters.isForced],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.functionAppName,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst detachUserProvidedFunctionAppFromStaticSiteOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/userProvidedFunctionApps/{functionAppName}\",\n    httpMethod: \"DELETE\",\n    responses: {\n      200: {},\n      204: {},\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.functionAppName,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst createZipDeploymentForStaticSiteOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/zipdeploy\",\n    httpMethod: \"POST\",\n    responses: {\n      200: {},\n      201: {},\n      202: {},\n      204: {},\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    requestBody: Parameters.staticSiteZipDeploymentEnvelope,\n    queryParameters: [Parameters.apiVersion],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n    ],\n    headerParameters: [Parameters.accept, Parameters.contentType],\n    mediaType: \"json\",\n    serializer,\n  };\nconst validateBackendOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/linkedBackends/{linkedBackendName}/validate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.staticSiteLinkedBackendEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.linkedBackendName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst validateBackendForBuildOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/linkedBackends/{linkedBackendName}/validate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.staticSiteLinkedBackendEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.environmentName1,\n    Parameters.linkedBackendName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getLinkedBackendsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/linkedBackends\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteLinkedBackendsCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getLinkedBackendsForBuildOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/linkedBackends\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteLinkedBackendsCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.environmentName1,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getLinkedBackendOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/linkedBackends/{linkedBackendName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteLinkedBackendARMResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.linkedBackendName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst linkBackendOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/linkedBackends/{linkedBackendName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteLinkedBackendARMResource,\n    },\n    201: {\n      bodyMapper: Mappers.StaticSiteLinkedBackendARMResource,\n    },\n    202: {\n      bodyMapper: Mappers.StaticSiteLinkedBackendARMResource,\n    },\n    204: {\n      bodyMapper: Mappers.StaticSiteLinkedBackendARMResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.staticSiteLinkedBackendEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.linkedBackendName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst unlinkBackendOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/linkedBackends/{linkedBackendName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.isCleaningAuthConfig],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.linkedBackendName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getLinkedBackendForBuildOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/linkedBackends/{linkedBackendName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteLinkedBackendARMResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.environmentName1,\n    Parameters.linkedBackendName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst linkBackendToBuildOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/linkedBackends/{linkedBackendName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteLinkedBackendARMResource,\n    },\n    201: {\n      bodyMapper: Mappers.StaticSiteLinkedBackendARMResource,\n    },\n    202: {\n      bodyMapper: Mappers.StaticSiteLinkedBackendARMResource,\n    },\n    204: {\n      bodyMapper: Mappers.StaticSiteLinkedBackendARMResource,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  requestBody: Parameters.staticSiteLinkedBackendEnvelope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.environmentName1,\n    Parameters.linkedBackendName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst unlinkBackendFromBuildOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/linkedBackends/{linkedBackendName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.isCleaningAuthConfig],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.environmentName1,\n    Parameters.linkedBackendName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getStaticSitesByResourceGroupNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.StaticSiteCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.nextLink,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listStaticSiteUsersNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteUserCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.authprovider,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getStaticSiteBuildsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteBuildCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getBuildDatabaseConnectionsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseConnectionCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.environmentName2,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listStaticSiteBuildFunctionsNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.StaticSiteFunctionOverviewCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n      Parameters.environmentName1,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getBuildDatabaseConnectionsWithDetailsNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.DatabaseConnectionCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n      Parameters.environmentName2,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getUserProvidedFunctionAppsForStaticSiteBuildNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.StaticSiteUserProvidedFunctionAppsCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n      Parameters.environmentName1,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst listBasicAuthNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteBasicAuthPropertiesCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listStaticSiteCustomDomainsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteCustomDomainOverviewCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDatabaseConnectionsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseConnectionCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listStaticSiteFunctionsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteFunctionOverviewCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getPrivateEndpointConnectionListNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.PrivateEndpointConnectionCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getDatabaseConnectionsWithDetailsNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.DatabaseConnectionCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getUserProvidedFunctionAppsForStaticSiteNextOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"{nextLink}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.StaticSiteUserProvidedFunctionAppsCollection,\n      },\n      default: {\n        bodyMapper: Mappers.DefaultErrorResponse,\n      },\n    },\n    urlParameters: [\n      Parameters.$host,\n      Parameters.subscriptionId,\n      Parameters.resourceGroupName,\n      Parameters.name,\n      Parameters.nextLink,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getLinkedBackendsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteLinkedBackendsCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getLinkedBackendsForBuildNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StaticSiteLinkedBackendsCollection,\n    },\n    default: {\n      bodyMapper: Mappers.DefaultErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.environmentName1,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}