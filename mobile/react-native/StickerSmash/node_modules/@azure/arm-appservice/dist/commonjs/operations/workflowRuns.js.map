{"version":3,"file":"workflowRuns.js","sourceRoot":"","sources":["../../../src/operations/workflowRuns.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { WorkflowRuns } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { WebSiteManagementClient } from \"../webSiteManagementClient.js\";\nimport {\n  WorkflowRun,\n  WorkflowRunsListNextOptionalParams,\n  WorkflowRunsListOptionalParams,\n  WorkflowRunsListResponse,\n  WorkflowRunsGetOptionalParams,\n  WorkflowRunsGetResponse,\n  WorkflowRunsCancelOptionalParams,\n  WorkflowRunsListNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing WorkflowRuns operations. */\nexport class WorkflowRunsImpl implements WorkflowRuns {\n  private readonly client: WebSiteManagementClient;\n\n  /**\n   * Initialize a new instance of the class WorkflowRuns class.\n   * @param client Reference to the service client\n   */\n  constructor(client: WebSiteManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of workflow runs.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param workflowName The workflow name.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    name: string,\n    workflowName: string,\n    options?: WorkflowRunsListOptionalParams,\n  ): PagedAsyncIterableIterator<WorkflowRun> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      name,\n      workflowName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          name,\n          workflowName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    name: string,\n    workflowName: string,\n    options?: WorkflowRunsListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<WorkflowRun[]> {\n    let result: WorkflowRunsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, name, workflowName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        name,\n        workflowName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    name: string,\n    workflowName: string,\n    options?: WorkflowRunsListOptionalParams,\n  ): AsyncIterableIterator<WorkflowRun> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      name,\n      workflowName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of workflow runs.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param workflowName The workflow name.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    name: string,\n    workflowName: string,\n    options?: WorkflowRunsListOptionalParams,\n  ): Promise<WorkflowRunsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, workflowName, options },\n      listOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a workflow run.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param workflowName The workflow name.\n   * @param runName The workflow run name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    name: string,\n    workflowName: string,\n    runName: string,\n    options?: WorkflowRunsGetOptionalParams,\n  ): Promise<WorkflowRunsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, workflowName, runName, options },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * Cancels a workflow run.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param workflowName The workflow name.\n   * @param runName The workflow run name.\n   * @param options The options parameters.\n   */\n  cancel(\n    resourceGroupName: string,\n    name: string,\n    workflowName: string,\n    runName: string,\n    options?: WorkflowRunsCancelOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, workflowName, runName, options },\n      cancelOperationSpec,\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Site name.\n   * @param workflowName The workflow name.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    name: string,\n    workflowName: string,\n    nextLink: string,\n    options?: WorkflowRunsListNextOptionalParams,\n  ): Promise<WorkflowRunsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, workflowName, nextLink, options },\n      listNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/runs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkflowRunListResult,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top1, Parameters.filter1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.workflowName1,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/runs/{runName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkflowRun,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.workflowName1,\n    Parameters.runName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst cancelOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostruntime/runtime/webhooks/workflow/api/management/workflows/{workflowName}/runs/{runName}/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.workflowName1,\n    Parameters.runName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkflowRunListResult,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name,\n    Parameters.nextLink,\n    Parameters.workflowName1,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}