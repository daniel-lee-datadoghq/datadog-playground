{"version":3,"file":"appServicePlans.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/appServicePlans.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  AppServicePlan,\n  AppServicePlansListOptionalParams,\n  AppServicePlansListByResourceGroupOptionalParams,\n  AppServicePlansListWebAppsByHybridConnectionOptionalParams,\n  HybridConnection,\n  AppServicePlansListHybridConnectionsOptionalParams,\n  Site,\n  AppServicePlansListWebAppsOptionalParams,\n  CsmUsageQuota,\n  AppServicePlansListUsagesOptionalParams,\n  AppServicePlansGetOptionalParams,\n  AppServicePlansGetResponse,\n  AppServicePlansCreateOrUpdateOptionalParams,\n  AppServicePlansCreateOrUpdateResponse,\n  AppServicePlansDeleteOptionalParams,\n  AppServicePlanPatchResource,\n  AppServicePlansUpdateOptionalParams,\n  AppServicePlansUpdateResponse,\n  AppServicePlansListCapabilitiesOptionalParams,\n  AppServicePlansListCapabilitiesResponse,\n  AppServicePlansGetHybridConnectionOptionalParams,\n  AppServicePlansGetHybridConnectionResponse,\n  AppServicePlansDeleteHybridConnectionOptionalParams,\n  AppServicePlansListHybridConnectionKeysOptionalParams,\n  AppServicePlansListHybridConnectionKeysResponse,\n  AppServicePlansGetHybridConnectionPlanLimitOptionalParams,\n  AppServicePlansGetHybridConnectionPlanLimitResponse,\n  AppServicePlansRestartWebAppsOptionalParams,\n  AppServicePlansGetServerFarmSkusOptionalParams,\n  AppServicePlansGetServerFarmSkusResponse,\n  AppServicePlansListVnetsOptionalParams,\n  AppServicePlansListVnetsResponse,\n  AppServicePlansGetVnetFromServerFarmOptionalParams,\n  AppServicePlansGetVnetFromServerFarmResponse,\n  AppServicePlansGetVnetGatewayOptionalParams,\n  AppServicePlansGetVnetGatewayResponse,\n  VnetGateway,\n  AppServicePlansUpdateVnetGatewayOptionalParams,\n  AppServicePlansUpdateVnetGatewayResponse,\n  AppServicePlansListRoutesForVnetOptionalParams,\n  AppServicePlansListRoutesForVnetResponse,\n  AppServicePlansGetRouteForVnetOptionalParams,\n  AppServicePlansGetRouteForVnetResponse,\n  VnetRoute,\n  AppServicePlansCreateOrUpdateVnetRouteOptionalParams,\n  AppServicePlansCreateOrUpdateVnetRouteResponse,\n  AppServicePlansDeleteVnetRouteOptionalParams,\n  AppServicePlansUpdateVnetRouteOptionalParams,\n  AppServicePlansUpdateVnetRouteResponse,\n  AppServicePlansRebootWorkerOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a AppServicePlans. */\nexport interface AppServicePlans {\n  /**\n   * Description for Get all App Service plans for a subscription.\n   * @param options The options parameters.\n   */\n  list(\n    options?: AppServicePlansListOptionalParams,\n  ): PagedAsyncIterableIterator<AppServicePlan>;\n  /**\n   * Description for Get all App Service plans in a resource group.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param options The options parameters.\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?: AppServicePlansListByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<AppServicePlan>;\n  /**\n   * Description for Get all apps that use a Hybrid Connection in an App Service Plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param namespaceName Name of the Hybrid Connection namespace.\n   * @param relayName Name of the Hybrid Connection relay.\n   * @param options The options parameters.\n   */\n  listWebAppsByHybridConnection(\n    resourceGroupName: string,\n    name: string,\n    namespaceName: string,\n    relayName: string,\n    options?: AppServicePlansListWebAppsByHybridConnectionOptionalParams,\n  ): PagedAsyncIterableIterator<string>;\n  /**\n   * Description for Retrieve all Hybrid Connections in use in an App Service plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param options The options parameters.\n   */\n  listHybridConnections(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServicePlansListHybridConnectionsOptionalParams,\n  ): PagedAsyncIterableIterator<HybridConnection>;\n  /**\n   * Description for Get all apps associated with an App Service plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param options The options parameters.\n   */\n  listWebApps(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServicePlansListWebAppsOptionalParams,\n  ): PagedAsyncIterableIterator<Site>;\n  /**\n   * Description for Gets server farm usage information\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of App Service Plan\n   * @param options The options parameters.\n   */\n  listUsages(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServicePlansListUsagesOptionalParams,\n  ): PagedAsyncIterableIterator<CsmUsageQuota>;\n  /**\n   * Description for Get an App Service plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServicePlansGetOptionalParams,\n  ): Promise<AppServicePlansGetResponse>;\n  /**\n   * Description for Creates or updates an App Service Plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param appServicePlan Details of the App Service plan.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    name: string,\n    appServicePlan: AppServicePlan,\n    options?: AppServicePlansCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<AppServicePlansCreateOrUpdateResponse>,\n      AppServicePlansCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Description for Creates or updates an App Service Plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param appServicePlan Details of the App Service plan.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    name: string,\n    appServicePlan: AppServicePlan,\n    options?: AppServicePlansCreateOrUpdateOptionalParams,\n  ): Promise<AppServicePlansCreateOrUpdateResponse>;\n  /**\n   * Description for Delete an App Service plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServicePlansDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Description for Creates or updates an App Service Plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param appServicePlan Details of the App Service plan.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    name: string,\n    appServicePlan: AppServicePlanPatchResource,\n    options?: AppServicePlansUpdateOptionalParams,\n  ): Promise<AppServicePlansUpdateResponse>;\n  /**\n   * Description for List all capabilities of an App Service plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param options The options parameters.\n   */\n  listCapabilities(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServicePlansListCapabilitiesOptionalParams,\n  ): Promise<AppServicePlansListCapabilitiesResponse>;\n  /**\n   * Description for Retrieve a Hybrid Connection in use in an App Service plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param namespaceName Name of the Service Bus namespace.\n   * @param relayName Name of the Service Bus relay.\n   * @param options The options parameters.\n   */\n  getHybridConnection(\n    resourceGroupName: string,\n    name: string,\n    namespaceName: string,\n    relayName: string,\n    options?: AppServicePlansGetHybridConnectionOptionalParams,\n  ): Promise<AppServicePlansGetHybridConnectionResponse>;\n  /**\n   * Description for Delete a Hybrid Connection in use in an App Service plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param namespaceName Name of the Service Bus namespace.\n   * @param relayName Name of the Service Bus relay.\n   * @param options The options parameters.\n   */\n  deleteHybridConnection(\n    resourceGroupName: string,\n    name: string,\n    namespaceName: string,\n    relayName: string,\n    options?: AppServicePlansDeleteHybridConnectionOptionalParams,\n  ): Promise<void>;\n  /**\n   * Description for Get the send key name and value of a Hybrid Connection.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param namespaceName The name of the Service Bus namespace.\n   * @param relayName The name of the Service Bus relay.\n   * @param options The options parameters.\n   */\n  listHybridConnectionKeys(\n    resourceGroupName: string,\n    name: string,\n    namespaceName: string,\n    relayName: string,\n    options?: AppServicePlansListHybridConnectionKeysOptionalParams,\n  ): Promise<AppServicePlansListHybridConnectionKeysResponse>;\n  /**\n   * Description for Get the maximum number of Hybrid Connections allowed in an App Service plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param options The options parameters.\n   */\n  getHybridConnectionPlanLimit(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServicePlansGetHybridConnectionPlanLimitOptionalParams,\n  ): Promise<AppServicePlansGetHybridConnectionPlanLimitResponse>;\n  /**\n   * Description for Restart all apps in an App Service plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param options The options parameters.\n   */\n  restartWebApps(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServicePlansRestartWebAppsOptionalParams,\n  ): Promise<void>;\n  /**\n   * Description for Gets all selectable SKUs for a given App Service Plan\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of App Service Plan\n   * @param options The options parameters.\n   */\n  getServerFarmSkus(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServicePlansGetServerFarmSkusOptionalParams,\n  ): Promise<AppServicePlansGetServerFarmSkusResponse>;\n  /**\n   * Description for Get all Virtual Networks associated with an App Service plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param options The options parameters.\n   */\n  listVnets(\n    resourceGroupName: string,\n    name: string,\n    options?: AppServicePlansListVnetsOptionalParams,\n  ): Promise<AppServicePlansListVnetsResponse>;\n  /**\n   * Description for Get a Virtual Network associated with an App Service plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param vnetName Name of the Virtual Network.\n   * @param options The options parameters.\n   */\n  getVnetFromServerFarm(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    options?: AppServicePlansGetVnetFromServerFarmOptionalParams,\n  ): Promise<AppServicePlansGetVnetFromServerFarmResponse>;\n  /**\n   * Description for Get a Virtual Network gateway.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param vnetName Name of the Virtual Network.\n   * @param gatewayName Name of the gateway. Only the 'primary' gateway is supported.\n   * @param options The options parameters.\n   */\n  getVnetGateway(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    gatewayName: string,\n    options?: AppServicePlansGetVnetGatewayOptionalParams,\n  ): Promise<AppServicePlansGetVnetGatewayResponse>;\n  /**\n   * Description for Update a Virtual Network gateway.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param vnetName Name of the Virtual Network.\n   * @param gatewayName Name of the gateway. Only the 'primary' gateway is supported.\n   * @param connectionEnvelope Definition of the gateway.\n   * @param options The options parameters.\n   */\n  updateVnetGateway(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    gatewayName: string,\n    connectionEnvelope: VnetGateway,\n    options?: AppServicePlansUpdateVnetGatewayOptionalParams,\n  ): Promise<AppServicePlansUpdateVnetGatewayResponse>;\n  /**\n   * Description for Get all routes that are associated with a Virtual Network in an App Service plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param vnetName Name of the Virtual Network.\n   * @param options The options parameters.\n   */\n  listRoutesForVnet(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    options?: AppServicePlansListRoutesForVnetOptionalParams,\n  ): Promise<AppServicePlansListRoutesForVnetResponse>;\n  /**\n   * Description for Get a Virtual Network route in an App Service plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param vnetName Name of the Virtual Network.\n   * @param routeName Name of the Virtual Network route.\n   * @param options The options parameters.\n   */\n  getRouteForVnet(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    routeName: string,\n    options?: AppServicePlansGetRouteForVnetOptionalParams,\n  ): Promise<AppServicePlansGetRouteForVnetResponse>;\n  /**\n   * Description for Create or update a Virtual Network route in an App Service plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param vnetName Name of the Virtual Network.\n   * @param routeName Name of the Virtual Network route.\n   * @param route Definition of the Virtual Network route.\n   * @param options The options parameters.\n   */\n  createOrUpdateVnetRoute(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    routeName: string,\n    route: VnetRoute,\n    options?: AppServicePlansCreateOrUpdateVnetRouteOptionalParams,\n  ): Promise<AppServicePlansCreateOrUpdateVnetRouteResponse>;\n  /**\n   * Description for Delete a Virtual Network route in an App Service plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param vnetName Name of the Virtual Network.\n   * @param routeName Name of the Virtual Network route.\n   * @param options The options parameters.\n   */\n  deleteVnetRoute(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    routeName: string,\n    options?: AppServicePlansDeleteVnetRouteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Description for Create or update a Virtual Network route in an App Service plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param vnetName Name of the Virtual Network.\n   * @param routeName Name of the Virtual Network route.\n   * @param route Definition of the Virtual Network route.\n   * @param options The options parameters.\n   */\n  updateVnetRoute(\n    resourceGroupName: string,\n    name: string,\n    vnetName: string,\n    routeName: string,\n    route: VnetRoute,\n    options?: AppServicePlansUpdateVnetRouteOptionalParams,\n  ): Promise<AppServicePlansUpdateVnetRouteResponse>;\n  /**\n   * Description for Reboot a worker machine in an App Service plan.\n   * @param resourceGroupName Name of the resource group to which the resource belongs.\n   * @param name Name of the App Service plan.\n   * @param workerName Name of worker machine, which typically starts with RD.\n   * @param options The options parameters.\n   */\n  rebootWorker(\n    resourceGroupName: string,\n    name: string,\n    workerName: string,\n    options?: AppServicePlansRebootWorkerOptionalParams,\n  ): Promise<void>;\n}\n"]}