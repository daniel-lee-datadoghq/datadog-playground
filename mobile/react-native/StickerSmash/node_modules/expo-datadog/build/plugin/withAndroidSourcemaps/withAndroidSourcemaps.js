"use strict";
/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache License Version 2.0.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2016-Present Datadog, Inc.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const config_plugins_1 = require("@expo/config-plugins");
const path_1 = __importDefault(require("path"));
const withAndroidSourcemaps = (config) => {
    return (0, config_plugins_1.withAppBuildGradle)(config, async (config) => {
        const appBuildGradle = config.modResults;
        if (appBuildGradle.contents.match("datadog-sourcemaps.gradle")) {
            return config;
        }
        const datadogNodeModulesRoot = path_1.default.dirname(require.resolve("@datadog/mobile-react-native/package.json"));
        const gradlePluginRelativePath = path_1.default.relative(path_1.default.join(config.modRequest.projectRoot, "android", "app"), path_1.default.join(datadogNodeModulesRoot));
        const sourcemapsGradlePath = `${gradlePluginRelativePath}/datadog-sourcemaps.gradle`.replace(/\\/g, "/");
        appBuildGradle.contents = appBuildGradle.contents.replace(/apply plugin: "com\.facebook\.react"/, `apply plugin: "com.facebook.react"\napply from: "${sourcemapsGradlePath}"`);
        return config;
    });
};
exports.default = withAndroidSourcemaps;
